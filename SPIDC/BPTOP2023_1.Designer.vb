'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("BPTOP2023_1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class BPTOP2023_1
    Inherits Global.System.Data.DataSet
    
    Private tableadminADDLEXTN As adminADDLEXTNDataTable
    
    Private tableBankCode As BankCodeDataTable
    
    Private tablechy As chyDataTable
    
    Private tablechy_1 As chy_1DataTable
    
    Private tablechy_2 As chy_2DataTable
    
    Private tablechyADDLEXTN As chyADDLEXTNDataTable
    
    Private tabledennisenriquezADDLEXTN As dennisenriquezADDLEXTNDataTable
    
    Private tableDOC_TRACK2019 As DOC_TRACK2019DataTable
    
    Private tableDOC_TRACK2022 As DOC_TRACK2022DataTable
    
    Private tableItemCodeSetup As ItemCodeSetupDataTable
    
    Private tableSystemLog As SystemLogDataTable
    
    Private tableSystemTrans As SystemTransDataTable
    
    Private tableUserControl As UserControlDataTable
    
    Private tableZ_ASS_AUD_2020 As Z_ASS_AUD_2020DataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("adminADDLEXTN")) Is Nothing) Then
                MyBase.Tables.Add(New adminADDLEXTNDataTable(ds.Tables("adminADDLEXTN")))
            End If
            If (Not (ds.Tables("BankCode")) Is Nothing) Then
                MyBase.Tables.Add(New BankCodeDataTable(ds.Tables("BankCode")))
            End If
            If (Not (ds.Tables("chy")) Is Nothing) Then
                MyBase.Tables.Add(New chyDataTable(ds.Tables("chy")))
            End If
            If (Not (ds.Tables("chy_1")) Is Nothing) Then
                MyBase.Tables.Add(New chy_1DataTable(ds.Tables("chy_1")))
            End If
            If (Not (ds.Tables("chy_2")) Is Nothing) Then
                MyBase.Tables.Add(New chy_2DataTable(ds.Tables("chy_2")))
            End If
            If (Not (ds.Tables("chyADDLEXTN")) Is Nothing) Then
                MyBase.Tables.Add(New chyADDLEXTNDataTable(ds.Tables("chyADDLEXTN")))
            End If
            If (Not (ds.Tables("dennisenriquezADDLEXTN")) Is Nothing) Then
                MyBase.Tables.Add(New dennisenriquezADDLEXTNDataTable(ds.Tables("dennisenriquezADDLEXTN")))
            End If
            If (Not (ds.Tables("DOC_TRACK2019")) Is Nothing) Then
                MyBase.Tables.Add(New DOC_TRACK2019DataTable(ds.Tables("DOC_TRACK2019")))
            End If
            If (Not (ds.Tables("DOC_TRACK2022")) Is Nothing) Then
                MyBase.Tables.Add(New DOC_TRACK2022DataTable(ds.Tables("DOC_TRACK2022")))
            End If
            If (Not (ds.Tables("ItemCodeSetup")) Is Nothing) Then
                MyBase.Tables.Add(New ItemCodeSetupDataTable(ds.Tables("ItemCodeSetup")))
            End If
            If (Not (ds.Tables("SystemLog")) Is Nothing) Then
                MyBase.Tables.Add(New SystemLogDataTable(ds.Tables("SystemLog")))
            End If
            If (Not (ds.Tables("SystemTrans")) Is Nothing) Then
                MyBase.Tables.Add(New SystemTransDataTable(ds.Tables("SystemTrans")))
            End If
            If (Not (ds.Tables("UserControl")) Is Nothing) Then
                MyBase.Tables.Add(New UserControlDataTable(ds.Tables("UserControl")))
            End If
            If (Not (ds.Tables("Z_ASS_AUD_2020")) Is Nothing) Then
                MyBase.Tables.Add(New Z_ASS_AUD_2020DataTable(ds.Tables("Z_ASS_AUD_2020")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property adminADDLEXTN() As adminADDLEXTNDataTable
        Get
            Return Me.tableadminADDLEXTN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property BankCode() As BankCodeDataTable
        Get
            Return Me.tableBankCode
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property chy() As chyDataTable
        Get
            Return Me.tablechy
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property chy_1() As chy_1DataTable
        Get
            Return Me.tablechy_1
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property chy_2() As chy_2DataTable
        Get
            Return Me.tablechy_2
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property chyADDLEXTN() As chyADDLEXTNDataTable
        Get
            Return Me.tablechyADDLEXTN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dennisenriquezADDLEXTN() As dennisenriquezADDLEXTNDataTable
        Get
            Return Me.tabledennisenriquezADDLEXTN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DOC_TRACK2019() As DOC_TRACK2019DataTable
        Get
            Return Me.tableDOC_TRACK2019
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DOC_TRACK2022() As DOC_TRACK2022DataTable
        Get
            Return Me.tableDOC_TRACK2022
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ItemCodeSetup() As ItemCodeSetupDataTable
        Get
            Return Me.tableItemCodeSetup
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SystemLog() As SystemLogDataTable
        Get
            Return Me.tableSystemLog
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SystemTrans() As SystemTransDataTable
        Get
            Return Me.tableSystemTrans
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property UserControl() As UserControlDataTable
        Get
            Return Me.tableUserControl
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Z_ASS_AUD_2020() As Z_ASS_AUD_2020DataTable
        Get
            Return Me.tableZ_ASS_AUD_2020
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As BPTOP2023_1 = CType(MyBase.Clone,BPTOP2023_1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("adminADDLEXTN")) Is Nothing) Then
                MyBase.Tables.Add(New adminADDLEXTNDataTable(ds.Tables("adminADDLEXTN")))
            End If
            If (Not (ds.Tables("BankCode")) Is Nothing) Then
                MyBase.Tables.Add(New BankCodeDataTable(ds.Tables("BankCode")))
            End If
            If (Not (ds.Tables("chy")) Is Nothing) Then
                MyBase.Tables.Add(New chyDataTable(ds.Tables("chy")))
            End If
            If (Not (ds.Tables("chy_1")) Is Nothing) Then
                MyBase.Tables.Add(New chy_1DataTable(ds.Tables("chy_1")))
            End If
            If (Not (ds.Tables("chy_2")) Is Nothing) Then
                MyBase.Tables.Add(New chy_2DataTable(ds.Tables("chy_2")))
            End If
            If (Not (ds.Tables("chyADDLEXTN")) Is Nothing) Then
                MyBase.Tables.Add(New chyADDLEXTNDataTable(ds.Tables("chyADDLEXTN")))
            End If
            If (Not (ds.Tables("dennisenriquezADDLEXTN")) Is Nothing) Then
                MyBase.Tables.Add(New dennisenriquezADDLEXTNDataTable(ds.Tables("dennisenriquezADDLEXTN")))
            End If
            If (Not (ds.Tables("DOC_TRACK2019")) Is Nothing) Then
                MyBase.Tables.Add(New DOC_TRACK2019DataTable(ds.Tables("DOC_TRACK2019")))
            End If
            If (Not (ds.Tables("DOC_TRACK2022")) Is Nothing) Then
                MyBase.Tables.Add(New DOC_TRACK2022DataTable(ds.Tables("DOC_TRACK2022")))
            End If
            If (Not (ds.Tables("ItemCodeSetup")) Is Nothing) Then
                MyBase.Tables.Add(New ItemCodeSetupDataTable(ds.Tables("ItemCodeSetup")))
            End If
            If (Not (ds.Tables("SystemLog")) Is Nothing) Then
                MyBase.Tables.Add(New SystemLogDataTable(ds.Tables("SystemLog")))
            End If
            If (Not (ds.Tables("SystemTrans")) Is Nothing) Then
                MyBase.Tables.Add(New SystemTransDataTable(ds.Tables("SystemTrans")))
            End If
            If (Not (ds.Tables("UserControl")) Is Nothing) Then
                MyBase.Tables.Add(New UserControlDataTable(ds.Tables("UserControl")))
            End If
            If (Not (ds.Tables("Z_ASS_AUD_2020")) Is Nothing) Then
                MyBase.Tables.Add(New Z_ASS_AUD_2020DataTable(ds.Tables("Z_ASS_AUD_2020")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableadminADDLEXTN = CType(MyBase.Tables("adminADDLEXTN"),adminADDLEXTNDataTable)
        If (initTable = true) Then
            If (Not (Me.tableadminADDLEXTN) Is Nothing) Then
                Me.tableadminADDLEXTN.InitVars
            End If
        End If
        Me.tableBankCode = CType(MyBase.Tables("BankCode"),BankCodeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBankCode) Is Nothing) Then
                Me.tableBankCode.InitVars
            End If
        End If
        Me.tablechy = CType(MyBase.Tables("chy"),chyDataTable)
        If (initTable = true) Then
            If (Not (Me.tablechy) Is Nothing) Then
                Me.tablechy.InitVars
            End If
        End If
        Me.tablechy_1 = CType(MyBase.Tables("chy_1"),chy_1DataTable)
        If (initTable = true) Then
            If (Not (Me.tablechy_1) Is Nothing) Then
                Me.tablechy_1.InitVars
            End If
        End If
        Me.tablechy_2 = CType(MyBase.Tables("chy_2"),chy_2DataTable)
        If (initTable = true) Then
            If (Not (Me.tablechy_2) Is Nothing) Then
                Me.tablechy_2.InitVars
            End If
        End If
        Me.tablechyADDLEXTN = CType(MyBase.Tables("chyADDLEXTN"),chyADDLEXTNDataTable)
        If (initTable = true) Then
            If (Not (Me.tablechyADDLEXTN) Is Nothing) Then
                Me.tablechyADDLEXTN.InitVars
            End If
        End If
        Me.tabledennisenriquezADDLEXTN = CType(MyBase.Tables("dennisenriquezADDLEXTN"),dennisenriquezADDLEXTNDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledennisenriquezADDLEXTN) Is Nothing) Then
                Me.tabledennisenriquezADDLEXTN.InitVars
            End If
        End If
        Me.tableDOC_TRACK2019 = CType(MyBase.Tables("DOC_TRACK2019"),DOC_TRACK2019DataTable)
        If (initTable = true) Then
            If (Not (Me.tableDOC_TRACK2019) Is Nothing) Then
                Me.tableDOC_TRACK2019.InitVars
            End If
        End If
        Me.tableDOC_TRACK2022 = CType(MyBase.Tables("DOC_TRACK2022"),DOC_TRACK2022DataTable)
        If (initTable = true) Then
            If (Not (Me.tableDOC_TRACK2022) Is Nothing) Then
                Me.tableDOC_TRACK2022.InitVars
            End If
        End If
        Me.tableItemCodeSetup = CType(MyBase.Tables("ItemCodeSetup"),ItemCodeSetupDataTable)
        If (initTable = true) Then
            If (Not (Me.tableItemCodeSetup) Is Nothing) Then
                Me.tableItemCodeSetup.InitVars
            End If
        End If
        Me.tableSystemLog = CType(MyBase.Tables("SystemLog"),SystemLogDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSystemLog) Is Nothing) Then
                Me.tableSystemLog.InitVars
            End If
        End If
        Me.tableSystemTrans = CType(MyBase.Tables("SystemTrans"),SystemTransDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSystemTrans) Is Nothing) Then
                Me.tableSystemTrans.InitVars
            End If
        End If
        Me.tableUserControl = CType(MyBase.Tables("UserControl"),UserControlDataTable)
        If (initTable = true) Then
            If (Not (Me.tableUserControl) Is Nothing) Then
                Me.tableUserControl.InitVars
            End If
        End If
        Me.tableZ_ASS_AUD_2020 = CType(MyBase.Tables("Z_ASS_AUD_2020"),Z_ASS_AUD_2020DataTable)
        If (initTable = true) Then
            If (Not (Me.tableZ_ASS_AUD_2020) Is Nothing) Then
                Me.tableZ_ASS_AUD_2020.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "BPTOP2023_1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/BPTOP2023_1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableadminADDLEXTN = New adminADDLEXTNDataTable()
        MyBase.Tables.Add(Me.tableadminADDLEXTN)
        Me.tableBankCode = New BankCodeDataTable()
        MyBase.Tables.Add(Me.tableBankCode)
        Me.tablechy = New chyDataTable()
        MyBase.Tables.Add(Me.tablechy)
        Me.tablechy_1 = New chy_1DataTable()
        MyBase.Tables.Add(Me.tablechy_1)
        Me.tablechy_2 = New chy_2DataTable()
        MyBase.Tables.Add(Me.tablechy_2)
        Me.tablechyADDLEXTN = New chyADDLEXTNDataTable()
        MyBase.Tables.Add(Me.tablechyADDLEXTN)
        Me.tabledennisenriquezADDLEXTN = New dennisenriquezADDLEXTNDataTable()
        MyBase.Tables.Add(Me.tabledennisenriquezADDLEXTN)
        Me.tableDOC_TRACK2019 = New DOC_TRACK2019DataTable()
        MyBase.Tables.Add(Me.tableDOC_TRACK2019)
        Me.tableDOC_TRACK2022 = New DOC_TRACK2022DataTable()
        MyBase.Tables.Add(Me.tableDOC_TRACK2022)
        Me.tableItemCodeSetup = New ItemCodeSetupDataTable()
        MyBase.Tables.Add(Me.tableItemCodeSetup)
        Me.tableSystemLog = New SystemLogDataTable()
        MyBase.Tables.Add(Me.tableSystemLog)
        Me.tableSystemTrans = New SystemTransDataTable()
        MyBase.Tables.Add(Me.tableSystemTrans)
        Me.tableUserControl = New UserControlDataTable()
        MyBase.Tables.Add(Me.tableUserControl)
        Me.tableZ_ASS_AUD_2020 = New Z_ASS_AUD_2020DataTable()
        MyBase.Tables.Add(Me.tableZ_ASS_AUD_2020)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeadminADDLEXTN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBankCode() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializechy() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializechy_1() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializechy_2() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializechyADDLEXTN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializedennisenriquezADDLEXTN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDOC_TRACK2019() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDOC_TRACK2022() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeItemCodeSetup() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSystemLog() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSystemTrans() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeUserControl() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeZ_ASS_AUD_2020() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As BPTOP2023_1 = New BPTOP2023_1()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub adminADDLEXTNRowChangeEventHandler(ByVal sender As Object, ByVal e As adminADDLEXTNRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BankCodeRowChangeEventHandler(ByVal sender As Object, ByVal e As BankCodeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub chyRowChangeEventHandler(ByVal sender As Object, ByVal e As chyRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub chy_1RowChangeEventHandler(ByVal sender As Object, ByVal e As chy_1RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub chy_2RowChangeEventHandler(ByVal sender As Object, ByVal e As chy_2RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub chyADDLEXTNRowChangeEventHandler(ByVal sender As Object, ByVal e As chyADDLEXTNRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub dennisenriquezADDLEXTNRowChangeEventHandler(ByVal sender As Object, ByVal e As dennisenriquezADDLEXTNRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DOC_TRACK2019RowChangeEventHandler(ByVal sender As Object, ByVal e As DOC_TRACK2019RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DOC_TRACK2022RowChangeEventHandler(ByVal sender As Object, ByVal e As DOC_TRACK2022RowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ItemCodeSetupRowChangeEventHandler(ByVal sender As Object, ByVal e As ItemCodeSetupRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SystemLogRowChangeEventHandler(ByVal sender As Object, ByVal e As SystemLogRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SystemTransRowChangeEventHandler(ByVal sender As Object, ByVal e As SystemTransRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub UserControlRowChangeEventHandler(ByVal sender As Object, ByVal e As UserControlRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Z_ASS_AUD_2020RowChangeEventHandler(ByVal sender As Object, ByVal e As Z_ASS_AUD_2020RowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class adminADDLEXTNDataTable
        Inherits Global.System.Data.TypedTableBase(Of adminADDLEXTNRow)
        
        Private columnAcctno As Global.System.Data.DataColumn
        
        Private columnForyear As Global.System.Data.DataColumn
        
        Private columnBus_Code As Global.System.Data.DataColumn
        
        Private columnZONE As Global.System.Data.DataColumn
        
        Private columnRTC As Global.System.Data.DataColumn
        
        Private columnPNP As Global.System.Data.DataColumn
        
        Private columnFISCAL As Global.System.Data.DataColumn
        
        Private columnBUILDING As Global.System.Data.DataColumn
        
        Private columnMECHANICAL As Global.System.Data.DataColumn
        
        Private columnELECTRICAL As Global.System.Data.DataColumn
        
        Private columnPLUMBING As Global.System.Data.DataColumn
        
        Private columnSIGNBILL As Global.System.Data.DataColumn
        
        Private columnOTHER As Global.System.Data.DataColumn
        
        Private columnSTICKER As Global.System.Data.DataColumn
        
        Private columnMEDICAL As Global.System.Data.DataColumn
        
        Private columnWMEASURES As Global.System.Data.DataColumn
        
        Private columnFIRECODE As Global.System.Data.DataColumn
        
        Private columnRF1 As Global.System.Data.DataColumn
        
        Private columnRF2 As Global.System.Data.DataColumn
        
        Private columnRF3 As Global.System.Data.DataColumn
        
        Private columnRF4 As Global.System.Data.DataColumn
        
        Private columnRF5 As Global.System.Data.DataColumn
        
        Private columnRF6 As Global.System.Data.DataColumn
        
        Private columnRF7 As Global.System.Data.DataColumn
        
        Private columnRF8 As Global.System.Data.DataColumn
        
        Private columnRF9 As Global.System.Data.DataColumn
        
        Private columnRF10 As Global.System.Data.DataColumn
        
        Private columnRF11 As Global.System.Data.DataColumn
        
        Private columnRF12 As Global.System.Data.DataColumn
        
        Private columnRF13 As Global.System.Data.DataColumn
        
        Private columnRF14 As Global.System.Data.DataColumn
        
        Private columnRF15 As Global.System.Data.DataColumn
        
        Private columnZONE_HP As Global.System.Data.DataColumn
        
        Private columnRTC_HP As Global.System.Data.DataColumn
        
        Private columnPNP_HP As Global.System.Data.DataColumn
        
        Private columnFISCAL_HP As Global.System.Data.DataColumn
        
        Private columnBUILDING_HP As Global.System.Data.DataColumn
        
        Private columnMECHANICAL_HP As Global.System.Data.DataColumn
        
        Private columnELECTRICAL_HP As Global.System.Data.DataColumn
        
        Private columnPLUMBING_HP As Global.System.Data.DataColumn
        
        Private columnSIGNBILL_HP As Global.System.Data.DataColumn
        
        Private columnOTHER_HP As Global.System.Data.DataColumn
        
        Private columnSTICKER_HP As Global.System.Data.DataColumn
        
        Private columnMEDICAL_HP As Global.System.Data.DataColumn
        
        Private columnWMEASURES_HP As Global.System.Data.DataColumn
        
        Private columnFIRECODE_HP As Global.System.Data.DataColumn
        
        Private columnRF1_HP As Global.System.Data.DataColumn
        
        Private columnRF2_HP As Global.System.Data.DataColumn
        
        Private columnRF3_HP As Global.System.Data.DataColumn
        
        Private columnRF4_HP As Global.System.Data.DataColumn
        
        Private columnRF5_HP As Global.System.Data.DataColumn
        
        Private columnRF6_HP As Global.System.Data.DataColumn
        
        Private columnRF7_HP As Global.System.Data.DataColumn
        
        Private columnRF8_HP As Global.System.Data.DataColumn
        
        Private columnRF9_HP As Global.System.Data.DataColumn
        
        Private columnRF10_HP As Global.System.Data.DataColumn
        
        Private columnRF11_HP As Global.System.Data.DataColumn
        
        Private columnRF12_HP As Global.System.Data.DataColumn
        
        Private columnRF13_HP As Global.System.Data.DataColumn
        
        Private columnRF14_HP As Global.System.Data.DataColumn
        
        Private columnRF15_HP As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "adminADDLEXTN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ForyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bus_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBus_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PNPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FISCALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFISCAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BUILDINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUILDING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MECHANICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMECHANICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELECTRICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnELECTRICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLUMBINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLUMBING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIGNBILLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGNBILL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STICKERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTICKER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEDICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEDICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WMEASURESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWMEASURES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIRECODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRECODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZONE_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONE_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RTC_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRTC_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PNP_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNP_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FISCAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFISCAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BUILDING_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUILDING_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MECHANICAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMECHANICAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELECTRICAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnELECTRICAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLUMBING_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLUMBING_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIGNBILL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGNBILL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTHER_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STICKER_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTICKER_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEDICAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEDICAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WMEASURES_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWMEASURES_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIRECODE_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRECODE_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF1_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF1_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF2_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF2_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF3_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF3_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF4_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF4_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF5_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF5_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF6_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF6_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF7_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF7_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF8_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF8_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF9_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF9_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF10_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF10_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF11_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF11_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF12_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF12_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF13_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF13_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF14_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF14_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF15_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF15_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As adminADDLEXTNRow
            Get
                Return CType(Me.Rows(index),adminADDLEXTNRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event adminADDLEXTNRowChanging As adminADDLEXTNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event adminADDLEXTNRowChanged As adminADDLEXTNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event adminADDLEXTNRowDeleting As adminADDLEXTNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event adminADDLEXTNRowDeleted As adminADDLEXTNRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddadminADDLEXTNRow(ByVal row As adminADDLEXTNRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddadminADDLEXTNRow( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal ZONE As Decimal,  _
                    ByVal RTC As Decimal,  _
                    ByVal PNP As Decimal,  _
                    ByVal FISCAL As Decimal,  _
                    ByVal BUILDING As Decimal,  _
                    ByVal MECHANICAL As Decimal,  _
                    ByVal ELECTRICAL As Decimal,  _
                    ByVal PLUMBING As Decimal,  _
                    ByVal SIGNBILL As Decimal,  _
                    ByVal OTHER As Decimal,  _
                    ByVal STICKER As Decimal,  _
                    ByVal MEDICAL As Decimal,  _
                    ByVal WMEASURES As Decimal,  _
                    ByVal FIRECODE As Decimal,  _
                    ByVal RF1 As Decimal,  _
                    ByVal RF2 As Decimal,  _
                    ByVal RF3 As Decimal,  _
                    ByVal RF4 As Decimal,  _
                    ByVal RF5 As Decimal,  _
                    ByVal RF6 As Decimal,  _
                    ByVal RF7 As Decimal,  _
                    ByVal RF8 As Decimal,  _
                    ByVal RF9 As Decimal,  _
                    ByVal RF10 As Decimal,  _
                    ByVal RF11 As Decimal,  _
                    ByVal RF12 As Decimal,  _
                    ByVal RF13 As Decimal,  _
                    ByVal RF14 As Decimal,  _
                    ByVal RF15 As Decimal,  _
                    ByVal ZONE_HP As String,  _
                    ByVal RTC_HP As String,  _
                    ByVal PNP_HP As String,  _
                    ByVal FISCAL_HP As String,  _
                    ByVal BUILDING_HP As String,  _
                    ByVal MECHANICAL_HP As String,  _
                    ByVal ELECTRICAL_HP As String,  _
                    ByVal PLUMBING_HP As String,  _
                    ByVal SIGNBILL_HP As String,  _
                    ByVal OTHER_HP As String,  _
                    ByVal STICKER_HP As String,  _
                    ByVal MEDICAL_HP As String,  _
                    ByVal WMEASURES_HP As String,  _
                    ByVal FIRECODE_HP As String,  _
                    ByVal RF1_HP As String,  _
                    ByVal RF2_HP As String,  _
                    ByVal RF3_HP As String,  _
                    ByVal RF4_HP As String,  _
                    ByVal RF5_HP As String,  _
                    ByVal RF6_HP As String,  _
                    ByVal RF7_HP As String,  _
                    ByVal RF8_HP As String,  _
                    ByVal RF9_HP As String,  _
                    ByVal RF10_HP As String,  _
                    ByVal RF11_HP As String,  _
                    ByVal RF12_HP As String,  _
                    ByVal RF13_HP As String,  _
                    ByVal RF14_HP As String,  _
                    ByVal RF15_HP As String) As adminADDLEXTNRow
            Dim rowadminADDLEXTNRow As adminADDLEXTNRow = CType(Me.NewRow,adminADDLEXTNRow)
            Dim columnValuesArray() As Object = New Object() {Acctno, Foryear, Bus_Code, ZONE, RTC, PNP, FISCAL, BUILDING, MECHANICAL, ELECTRICAL, PLUMBING, SIGNBILL, OTHER, STICKER, MEDICAL, WMEASURES, FIRECODE, RF1, RF2, RF3, RF4, RF5, RF6, RF7, RF8, RF9, RF10, RF11, RF12, RF13, RF14, RF15, ZONE_HP, RTC_HP, PNP_HP, FISCAL_HP, BUILDING_HP, MECHANICAL_HP, ELECTRICAL_HP, PLUMBING_HP, SIGNBILL_HP, OTHER_HP, STICKER_HP, MEDICAL_HP, WMEASURES_HP, FIRECODE_HP, RF1_HP, RF2_HP, RF3_HP, RF4_HP, RF5_HP, RF6_HP, RF7_HP, RF8_HP, RF9_HP, RF10_HP, RF11_HP, RF12_HP, RF13_HP, RF14_HP, RF15_HP}
            rowadminADDLEXTNRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowadminADDLEXTNRow)
            Return rowadminADDLEXTNRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As adminADDLEXTNDataTable = CType(MyBase.Clone,adminADDLEXTNDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New adminADDLEXTNDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAcctno = MyBase.Columns("Acctno")
            Me.columnForyear = MyBase.Columns("Foryear")
            Me.columnBus_Code = MyBase.Columns("Bus_Code")
            Me.columnZONE = MyBase.Columns("ZONE")
            Me.columnRTC = MyBase.Columns("RTC")
            Me.columnPNP = MyBase.Columns("PNP")
            Me.columnFISCAL = MyBase.Columns("FISCAL")
            Me.columnBUILDING = MyBase.Columns("BUILDING")
            Me.columnMECHANICAL = MyBase.Columns("MECHANICAL")
            Me.columnELECTRICAL = MyBase.Columns("ELECTRICAL")
            Me.columnPLUMBING = MyBase.Columns("PLUMBING")
            Me.columnSIGNBILL = MyBase.Columns("SIGNBILL")
            Me.columnOTHER = MyBase.Columns("OTHER")
            Me.columnSTICKER = MyBase.Columns("STICKER")
            Me.columnMEDICAL = MyBase.Columns("MEDICAL")
            Me.columnWMEASURES = MyBase.Columns("WMEASURES")
            Me.columnFIRECODE = MyBase.Columns("FIRECODE")
            Me.columnRF1 = MyBase.Columns("RF1")
            Me.columnRF2 = MyBase.Columns("RF2")
            Me.columnRF3 = MyBase.Columns("RF3")
            Me.columnRF4 = MyBase.Columns("RF4")
            Me.columnRF5 = MyBase.Columns("RF5")
            Me.columnRF6 = MyBase.Columns("RF6")
            Me.columnRF7 = MyBase.Columns("RF7")
            Me.columnRF8 = MyBase.Columns("RF8")
            Me.columnRF9 = MyBase.Columns("RF9")
            Me.columnRF10 = MyBase.Columns("RF10")
            Me.columnRF11 = MyBase.Columns("RF11")
            Me.columnRF12 = MyBase.Columns("RF12")
            Me.columnRF13 = MyBase.Columns("RF13")
            Me.columnRF14 = MyBase.Columns("RF14")
            Me.columnRF15 = MyBase.Columns("RF15")
            Me.columnZONE_HP = MyBase.Columns("ZONE_HP")
            Me.columnRTC_HP = MyBase.Columns("RTC_HP")
            Me.columnPNP_HP = MyBase.Columns("PNP_HP")
            Me.columnFISCAL_HP = MyBase.Columns("FISCAL_HP")
            Me.columnBUILDING_HP = MyBase.Columns("BUILDING_HP")
            Me.columnMECHANICAL_HP = MyBase.Columns("MECHANICAL_HP")
            Me.columnELECTRICAL_HP = MyBase.Columns("ELECTRICAL_HP")
            Me.columnPLUMBING_HP = MyBase.Columns("PLUMBING_HP")
            Me.columnSIGNBILL_HP = MyBase.Columns("SIGNBILL_HP")
            Me.columnOTHER_HP = MyBase.Columns("OTHER_HP")
            Me.columnSTICKER_HP = MyBase.Columns("STICKER_HP")
            Me.columnMEDICAL_HP = MyBase.Columns("MEDICAL_HP")
            Me.columnWMEASURES_HP = MyBase.Columns("WMEASURES_HP")
            Me.columnFIRECODE_HP = MyBase.Columns("FIRECODE_HP")
            Me.columnRF1_HP = MyBase.Columns("RF1_HP")
            Me.columnRF2_HP = MyBase.Columns("RF2_HP")
            Me.columnRF3_HP = MyBase.Columns("RF3_HP")
            Me.columnRF4_HP = MyBase.Columns("RF4_HP")
            Me.columnRF5_HP = MyBase.Columns("RF5_HP")
            Me.columnRF6_HP = MyBase.Columns("RF6_HP")
            Me.columnRF7_HP = MyBase.Columns("RF7_HP")
            Me.columnRF8_HP = MyBase.Columns("RF8_HP")
            Me.columnRF9_HP = MyBase.Columns("RF9_HP")
            Me.columnRF10_HP = MyBase.Columns("RF10_HP")
            Me.columnRF11_HP = MyBase.Columns("RF11_HP")
            Me.columnRF12_HP = MyBase.Columns("RF12_HP")
            Me.columnRF13_HP = MyBase.Columns("RF13_HP")
            Me.columnRF14_HP = MyBase.Columns("RF14_HP")
            Me.columnRF15_HP = MyBase.Columns("RF15_HP")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAcctno = New Global.System.Data.DataColumn("Acctno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctno)
            Me.columnForyear = New Global.System.Data.DataColumn("Foryear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForyear)
            Me.columnBus_Code = New Global.System.Data.DataColumn("Bus_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBus_Code)
            Me.columnZONE = New Global.System.Data.DataColumn("ZONE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONE)
            Me.columnRTC = New Global.System.Data.DataColumn("RTC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRTC)
            Me.columnPNP = New Global.System.Data.DataColumn("PNP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNP)
            Me.columnFISCAL = New Global.System.Data.DataColumn("FISCAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFISCAL)
            Me.columnBUILDING = New Global.System.Data.DataColumn("BUILDING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUILDING)
            Me.columnMECHANICAL = New Global.System.Data.DataColumn("MECHANICAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMECHANICAL)
            Me.columnELECTRICAL = New Global.System.Data.DataColumn("ELECTRICAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELECTRICAL)
            Me.columnPLUMBING = New Global.System.Data.DataColumn("PLUMBING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLUMBING)
            Me.columnSIGNBILL = New Global.System.Data.DataColumn("SIGNBILL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGNBILL)
            Me.columnOTHER = New Global.System.Data.DataColumn("OTHER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER)
            Me.columnSTICKER = New Global.System.Data.DataColumn("STICKER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTICKER)
            Me.columnMEDICAL = New Global.System.Data.DataColumn("MEDICAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEDICAL)
            Me.columnWMEASURES = New Global.System.Data.DataColumn("WMEASURES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWMEASURES)
            Me.columnFIRECODE = New Global.System.Data.DataColumn("FIRECODE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRECODE)
            Me.columnRF1 = New Global.System.Data.DataColumn("RF1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF1)
            Me.columnRF2 = New Global.System.Data.DataColumn("RF2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF2)
            Me.columnRF3 = New Global.System.Data.DataColumn("RF3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF3)
            Me.columnRF4 = New Global.System.Data.DataColumn("RF4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF4)
            Me.columnRF5 = New Global.System.Data.DataColumn("RF5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF5)
            Me.columnRF6 = New Global.System.Data.DataColumn("RF6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF6)
            Me.columnRF7 = New Global.System.Data.DataColumn("RF7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF7)
            Me.columnRF8 = New Global.System.Data.DataColumn("RF8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF8)
            Me.columnRF9 = New Global.System.Data.DataColumn("RF9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF9)
            Me.columnRF10 = New Global.System.Data.DataColumn("RF10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF10)
            Me.columnRF11 = New Global.System.Data.DataColumn("RF11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF11)
            Me.columnRF12 = New Global.System.Data.DataColumn("RF12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF12)
            Me.columnRF13 = New Global.System.Data.DataColumn("RF13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF13)
            Me.columnRF14 = New Global.System.Data.DataColumn("RF14", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF14)
            Me.columnRF15 = New Global.System.Data.DataColumn("RF15", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF15)
            Me.columnZONE_HP = New Global.System.Data.DataColumn("ZONE_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONE_HP)
            Me.columnRTC_HP = New Global.System.Data.DataColumn("RTC_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRTC_HP)
            Me.columnPNP_HP = New Global.System.Data.DataColumn("PNP_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNP_HP)
            Me.columnFISCAL_HP = New Global.System.Data.DataColumn("FISCAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFISCAL_HP)
            Me.columnBUILDING_HP = New Global.System.Data.DataColumn("BUILDING_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUILDING_HP)
            Me.columnMECHANICAL_HP = New Global.System.Data.DataColumn("MECHANICAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMECHANICAL_HP)
            Me.columnELECTRICAL_HP = New Global.System.Data.DataColumn("ELECTRICAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELECTRICAL_HP)
            Me.columnPLUMBING_HP = New Global.System.Data.DataColumn("PLUMBING_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLUMBING_HP)
            Me.columnSIGNBILL_HP = New Global.System.Data.DataColumn("SIGNBILL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGNBILL_HP)
            Me.columnOTHER_HP = New Global.System.Data.DataColumn("OTHER_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER_HP)
            Me.columnSTICKER_HP = New Global.System.Data.DataColumn("STICKER_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTICKER_HP)
            Me.columnMEDICAL_HP = New Global.System.Data.DataColumn("MEDICAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEDICAL_HP)
            Me.columnWMEASURES_HP = New Global.System.Data.DataColumn("WMEASURES_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWMEASURES_HP)
            Me.columnFIRECODE_HP = New Global.System.Data.DataColumn("FIRECODE_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRECODE_HP)
            Me.columnRF1_HP = New Global.System.Data.DataColumn("RF1_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF1_HP)
            Me.columnRF2_HP = New Global.System.Data.DataColumn("RF2_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF2_HP)
            Me.columnRF3_HP = New Global.System.Data.DataColumn("RF3_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF3_HP)
            Me.columnRF4_HP = New Global.System.Data.DataColumn("RF4_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF4_HP)
            Me.columnRF5_HP = New Global.System.Data.DataColumn("RF5_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF5_HP)
            Me.columnRF6_HP = New Global.System.Data.DataColumn("RF6_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF6_HP)
            Me.columnRF7_HP = New Global.System.Data.DataColumn("RF7_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF7_HP)
            Me.columnRF8_HP = New Global.System.Data.DataColumn("RF8_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF8_HP)
            Me.columnRF9_HP = New Global.System.Data.DataColumn("RF9_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF9_HP)
            Me.columnRF10_HP = New Global.System.Data.DataColumn("RF10_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF10_HP)
            Me.columnRF11_HP = New Global.System.Data.DataColumn("RF11_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF11_HP)
            Me.columnRF12_HP = New Global.System.Data.DataColumn("RF12_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF12_HP)
            Me.columnRF13_HP = New Global.System.Data.DataColumn("RF13_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF13_HP)
            Me.columnRF14_HP = New Global.System.Data.DataColumn("RF14_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF14_HP)
            Me.columnRF15_HP = New Global.System.Data.DataColumn("RF15_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF15_HP)
            Me.columnAcctno.MaxLength = 25
            Me.columnForyear.MaxLength = 10
            Me.columnBus_Code.MaxLength = 10
            Me.columnZONE_HP.MaxLength = 1
            Me.columnRTC_HP.MaxLength = 1
            Me.columnPNP_HP.MaxLength = 1
            Me.columnFISCAL_HP.MaxLength = 1
            Me.columnBUILDING_HP.MaxLength = 1
            Me.columnMECHANICAL_HP.MaxLength = 1
            Me.columnELECTRICAL_HP.MaxLength = 1
            Me.columnPLUMBING_HP.MaxLength = 1
            Me.columnSIGNBILL_HP.MaxLength = 1
            Me.columnOTHER_HP.MaxLength = 1
            Me.columnSTICKER_HP.MaxLength = 1
            Me.columnMEDICAL_HP.MaxLength = 1
            Me.columnWMEASURES_HP.MaxLength = 1
            Me.columnFIRECODE_HP.MaxLength = 1
            Me.columnRF1_HP.MaxLength = 1
            Me.columnRF2_HP.MaxLength = 1
            Me.columnRF3_HP.MaxLength = 1
            Me.columnRF4_HP.MaxLength = 1
            Me.columnRF5_HP.MaxLength = 1
            Me.columnRF6_HP.MaxLength = 1
            Me.columnRF7_HP.MaxLength = 1
            Me.columnRF8_HP.MaxLength = 1
            Me.columnRF9_HP.MaxLength = 1
            Me.columnRF10_HP.MaxLength = 1
            Me.columnRF11_HP.MaxLength = 1
            Me.columnRF12_HP.MaxLength = 1
            Me.columnRF13_HP.MaxLength = 1
            Me.columnRF14_HP.MaxLength = 1
            Me.columnRF15_HP.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewadminADDLEXTNRow() As adminADDLEXTNRow
            Return CType(Me.NewRow,adminADDLEXTNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New adminADDLEXTNRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(adminADDLEXTNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.adminADDLEXTNRowChangedEvent) Is Nothing) Then
                RaiseEvent adminADDLEXTNRowChanged(Me, New adminADDLEXTNRowChangeEvent(CType(e.Row,adminADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.adminADDLEXTNRowChangingEvent) Is Nothing) Then
                RaiseEvent adminADDLEXTNRowChanging(Me, New adminADDLEXTNRowChangeEvent(CType(e.Row,adminADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.adminADDLEXTNRowDeletedEvent) Is Nothing) Then
                RaiseEvent adminADDLEXTNRowDeleted(Me, New adminADDLEXTNRowChangeEvent(CType(e.Row,adminADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.adminADDLEXTNRowDeletingEvent) Is Nothing) Then
                RaiseEvent adminADDLEXTNRowDeleting(Me, New adminADDLEXTNRowChangeEvent(CType(e.Row,adminADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveadminADDLEXTNRow(ByVal row As adminADDLEXTNRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "adminADDLEXTNDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BankCodeDataTable
        Inherits Global.System.Data.TypedTableBase(Of BankCodeRow)
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnDateUpdated As Global.System.Data.DataColumn
        
        Private columnUpdater As Global.System.Data.DataColumn
        
        Private columnDateEncoded As Global.System.Data.DataColumn
        
        Private columnEncoder As Global.System.Data.DataColumn
        
        Private columnrg As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "BankCode"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateUpdatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateUpdated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UpdaterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUpdater
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateEncodedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateEncoded
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EncoderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEncoder
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property rgColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnrg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BankCodeRow
            Get
                Return CType(Me.Rows(index),BankCodeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BankCodeRowChanging As BankCodeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BankCodeRowChanged As BankCodeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BankCodeRowDeleting As BankCodeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BankCodeRowDeleted As BankCodeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBankCodeRow(ByVal row As BankCodeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBankCodeRow(ByVal Code As String, ByVal Description As String, ByVal DateUpdated As Date, ByVal Updater As String, ByVal DateEncoded As Date, ByVal Encoder As String, ByVal rg As String) As BankCodeRow
            Dim rowBankCodeRow As BankCodeRow = CType(Me.NewRow,BankCodeRow)
            Dim columnValuesArray() As Object = New Object() {Code, Description, DateUpdated, Updater, DateEncoded, Encoder, rg}
            rowBankCodeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBankCodeRow)
            Return rowBankCodeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCode(ByVal Code As String) As BankCodeRow
            Return CType(Me.Rows.Find(New Object() {Code}),BankCodeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BankCodeDataTable = CType(MyBase.Clone,BankCodeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BankCodeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCode = MyBase.Columns("Code")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnDateUpdated = MyBase.Columns("DateUpdated")
            Me.columnUpdater = MyBase.Columns("Updater")
            Me.columnDateEncoded = MyBase.Columns("DateEncoded")
            Me.columnEncoder = MyBase.Columns("Encoder")
            Me.columnrg = MyBase.Columns("rg")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnDateUpdated = New Global.System.Data.DataColumn("DateUpdated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateUpdated)
            Me.columnUpdater = New Global.System.Data.DataColumn("Updater", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUpdater)
            Me.columnDateEncoded = New Global.System.Data.DataColumn("DateEncoded", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateEncoded)
            Me.columnEncoder = New Global.System.Data.DataColumn("Encoder", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEncoder)
            Me.columnrg = New Global.System.Data.DataColumn("rg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnrg)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCode}, true))
            Me.columnCode.AllowDBNull = false
            Me.columnCode.Unique = true
            Me.columnCode.MaxLength = 10
            Me.columnDescription.MaxLength = 100
            Me.columnUpdater.MaxLength = 30
            Me.columnEncoder.MaxLength = 30
            Me.columnrg.MaxLength = 36
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBankCodeRow() As BankCodeRow
            Return CType(Me.NewRow,BankCodeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BankCodeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BankCodeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BankCodeRowChangedEvent) Is Nothing) Then
                RaiseEvent BankCodeRowChanged(Me, New BankCodeRowChangeEvent(CType(e.Row,BankCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BankCodeRowChangingEvent) Is Nothing) Then
                RaiseEvent BankCodeRowChanging(Me, New BankCodeRowChangeEvent(CType(e.Row,BankCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BankCodeRowDeletedEvent) Is Nothing) Then
                RaiseEvent BankCodeRowDeleted(Me, New BankCodeRowChangeEvent(CType(e.Row,BankCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BankCodeRowDeletingEvent) Is Nothing) Then
                RaiseEvent BankCodeRowDeleting(Me, New BankCodeRowChangeEvent(CType(e.Row,BankCodeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBankCodeRow(ByVal row As BankCodeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BankCodeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class chyDataTable
        Inherits Global.System.Data.TypedTableBase(Of chyRow)
        
        Private columnAcctno As Global.System.Data.DataColumn
        
        Private columnForyear As Global.System.Data.DataColumn
        
        Private columnBus_Code As Global.System.Data.DataColumn
        
        Private columnDesc1 As Global.System.Data.DataColumn
        
        Private columnTaxbase As Global.System.Data.DataColumn
        
        Private columnAnnualdue As Global.System.Data.DataColumn
        
        Private columnTaxdue As Global.System.Data.DataColumn
        
        Private columnPenDue As Global.System.Data.DataColumn
        
        Private columnTotdue As Global.System.Data.DataColumn
        
        Private columnAmt_Pd As Global.System.Data.DataColumn
        
        Private columnAmt_PenPd As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnTaxcode As Global.System.Data.DataColumn
        
        Private columnprevqtr As Global.System.Data.DataColumn
        
        Private columnQtryr1 As Global.System.Data.DataColumn
        
        Private columnQtryr2 As Global.System.Data.DataColumn
        
        Private columnQtrPaid As Global.System.Data.DataColumn
        
        Private columnRemarks0 As Global.System.Data.DataColumn
        
        Private columnRemarks1 As Global.System.Data.DataColumn
        
        Private columnPres As Global.System.Data.DataColumn
        
        Private columnPrev As Global.System.Data.DataColumn
        
        Private columnStatcode As Global.System.Data.DataColumn
        
        Private columnASSESSNO As Global.System.Data.DataColumn
        
        Private columnNewsw As Global.System.Data.DataColumn
        
        Private columnModeP As Global.System.Data.DataColumn
        
        Private columnGradFix As Global.System.Data.DataColumn
        
        Private columnCapital As Global.System.Data.DataColumn
        
        Private columnXsort As Global.System.Data.DataColumn
        
        Private columnORNo As Global.System.Data.DataColumn
        
        Private columnDatePaid As Global.System.Data.DataColumn
        
        Private columnBrgyCode As Global.System.Data.DataColumn
        
        Private columnLocaCode As Global.System.Data.DataColumn
        
        Private columnL_DatePD As Global.System.Data.DataColumn
        
        Private columnMainAcctCode As Global.System.Data.DataColumn
        
        Private columnMainAcctDesc As Global.System.Data.DataColumn
        
        Private columnSubAcctCode As Global.System.Data.DataColumn
        
        Private columnSubAcctDesc As Global.System.Data.DataColumn
        
        Private columnMainAcctCodePen As Global.System.Data.DataColumn
        
        Private columnMainAcctDescPen As Global.System.Data.DataColumn
        
        Private columnSubAcctCodePen As Global.System.Data.DataColumn
        
        Private columnSubAcctDescPen As Global.System.Data.DataColumn
        
        Private columnAmt_Pd1 As Global.System.Data.DataColumn
        
        Private columnAmt_PenPd1 As Global.System.Data.DataColumn
        
        Private columnNewAmt_Pd As Global.System.Data.DataColumn
        
        Private columnNewAmt_PenPd As Global.System.Data.DataColumn
        
        Private columnNewTaxdue As Global.System.Data.DataColumn
        
        Private columnNewPenDue As Global.System.Data.DataColumn
        
        Private columnFieldName As Global.System.Data.DataColumn
        
        Private columnPrevGMonth As Global.System.Data.DataColumn
        
        Private columnGDateEsta As Global.System.Data.DataColumn
        
        Private columnGMonthPaid As Global.System.Data.DataColumn
        
        Private columnDATE_ESTA As Global.System.Data.DataColumn
        
        Private columnYearPeriod As Global.System.Data.DataColumn
        
        Private columnNotEdit As Global.System.Data.DataColumn
        
        Private columnNotDel As Global.System.Data.DataColumn
        
        Private columnAssessTotal As Global.System.Data.DataColumn
        
        Private columnUsedTCred As Global.System.Data.DataColumn
        
        Private columnForClose As Global.System.Data.DataColumn
        
        Private columnxORNO As Global.System.Data.DataColumn
        
        Private columnxSRS As Global.System.Data.DataColumn
        
        Private columnxTotal As Global.System.Data.DataColumn
        
        Private columnRASSESBY As Global.System.Data.DataColumn
        
        Private columnxSQUENCELocal As Global.System.Data.DataColumn
        
        Private columnxSQUENCEPen As Global.System.Data.DataColumn
        
        Private columnxSQUENCE As Global.System.Data.DataColumn
        
        Private columnArea As Global.System.Data.DataColumn
        
        Private columnQDUE As Global.System.Data.DataColumn
        
        Private columnADUE As Global.System.Data.DataColumn
        
        Private columnQAMT As Global.System.Data.DataColumn
        
        Private columnAAMT As Global.System.Data.DataColumn
        
        Private columnRES1 As Global.System.Data.DataColumn
        
        Private columnRES2 As Global.System.Data.DataColumn
        
        Private columnRES3 As Global.System.Data.DataColumn
        
        Private columnRES4 As Global.System.Data.DataColumn
        
        Private columnRES5 As Global.System.Data.DataColumn
        
        Private columnIsRegBill As Global.System.Data.DataColumn
        
        Private columnRES As Global.System.Data.DataColumn
        
        Private columnPenYear As Global.System.Data.DataColumn
        
        Private columnNotDelete As Global.System.Data.DataColumn
        
        Private columnI_YEAR1 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT1 As Global.System.Data.DataColumn
        
        Private columnI_YEAR2 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT2 As Global.System.Data.DataColumn
        
        Private columnI_YEAR3 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT3 As Global.System.Data.DataColumn
        
        Private columnI_YEAR4 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT4 As Global.System.Data.DataColumn
        
        Private columnEDITEDBY As Global.System.Data.DataColumn
        
        Private columnX1 As Global.System.Data.DataColumn
        
        Private columnX2 As Global.System.Data.DataColumn
        
        Private columnX3 As Global.System.Data.DataColumn
        
        Private columnX4 As Global.System.Data.DataColumn
        
        Private columnX5 As Global.System.Data.DataColumn
        
        Private columnBLGFSORT As Global.System.Data.DataColumn
        
        Private columnProvision As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnxMainAcctCode As Global.System.Data.DataColumn
        
        Private columnxMainAcctDesc As Global.System.Data.DataColumn
        
        Private columnxSubAcctCode As Global.System.Data.DataColumn
        
        Private columnxSubAcctDesc As Global.System.Data.DataColumn
        
        Private columnxMainAcctCodePen As Global.System.Data.DataColumn
        
        Private columnxMainAcctDescPen As Global.System.Data.DataColumn
        
        Private columnxSubAcctCodePen As Global.System.Data.DataColumn
        
        Private columnxSubAcctDescPen As Global.System.Data.DataColumn
        
        Private columnTRANSTYPE As Global.System.Data.DataColumn
        
        Private columnORIGDUEFEEADJ As Global.System.Data.DataColumn
        
        Private columnXDEPT As Global.System.Data.DataColumn
        
        Private columnFROMSP As Global.System.Data.DataColumn
        
        Private columnFEEPEN As Global.System.Data.DataColumn
        
        Private columnPRODUCT As Global.System.Data.DataColumn
        
        Private columnBPLOTOIMS As Global.System.Data.DataColumn
        
        Private columnBILLTYPE As Global.System.Data.DataColumn
        
        Private columnNEW5 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "chy"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ForyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bus_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBus_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Desc1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesc1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxbaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxbase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnnualdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnnualdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PenDueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPenDue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_PdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_Pd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_PenPdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_PenPd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevqtrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevqtr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Qtryr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtryr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Qtryr2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtryr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QtrPaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtrPaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Remarks0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Remarks1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PresColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPres
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrevColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrev
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ASSESSNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSESSNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewswColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewsw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModePColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModeP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GradFixColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGradFix
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CapitalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCapital
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XsortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXsort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatePaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatePaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BrgyCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrgyCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LocaCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocaCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property L_DatePDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnL_DatePD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_Pd1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_Pd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_PenPd1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_PenPd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewAmt_PdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewAmt_Pd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewAmt_PenPdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewAmt_PenPd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewTaxdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTaxdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewPenDueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewPenDue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrevGMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevGMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GDateEstaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGDateEsta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GMonthPaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGMonthPaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATE_ESTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_ESTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YearPeriodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYearPeriod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotEditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotEdit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotDelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotDel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AssessTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAssessTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UsedTCredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsedTCred
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ForCloseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForClose
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xORNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxORNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSRSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSRS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RASSESBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRASSESBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSQUENCELocalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSQUENCELocal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSQUENCEPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSQUENCEPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSQUENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSQUENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QDUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQDUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsRegBillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsRegBill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PenYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPenYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotDeleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotDelete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EDITEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BLGFSORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBLGFSORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProvisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORIGDUEFEEADJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGDUEFEEADJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XDEPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXDEPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FROMSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFROMSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FEEPENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFEEPEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BPLOTOIMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBPLOTOIMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BILLTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBILLTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NEW5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEW5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As chyRow
            Get
                Return CType(Me.Rows(index),chyRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chyRowChanging As chyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chyRowChanged As chyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chyRowDeleting As chyRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chyRowDeleted As chyRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddchyRow(ByVal row As chyRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddchyRow( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal Desc1 As String,  _
                    ByVal Taxbase As Decimal,  _
                    ByVal Annualdue As Decimal,  _
                    ByVal Taxdue As Decimal,  _
                    ByVal PenDue As Decimal,  _
                    ByVal Totdue As Decimal,  _
                    ByVal Amt_Pd As Decimal,  _
                    ByVal Amt_PenPd As Decimal,  _
                    ByVal Discount As Decimal,  _
                    ByVal Taxcode As String,  _
                    ByVal prevqtr As String,  _
                    ByVal Qtryr1 As String,  _
                    ByVal Qtryr2 As String,  _
                    ByVal QtrPaid As String,  _
                    ByVal Remarks0 As String,  _
                    ByVal Remarks1 As String,  _
                    ByVal Pres As String,  _
                    ByVal Prev As String,  _
                    ByVal Statcode As String,  _
                    ByVal ASSESSNO As String,  _
                    ByVal Newsw As String,  _
                    ByVal ModeP As String,  _
                    ByVal GradFix As String,  _
                    ByVal Capital As Decimal,  _
                    ByVal Xsort As String,  _
                    ByVal ORNo As String,  _
                    ByVal DatePaid As Date,  _
                    ByVal BrgyCode As String,  _
                    ByVal LocaCode As String,  _
                    ByVal L_DatePD As Date,  _
                    ByVal MainAcctCode As String,  _
                    ByVal MainAcctDesc As String,  _
                    ByVal SubAcctCode As String,  _
                    ByVal SubAcctDesc As String,  _
                    ByVal MainAcctCodePen As String,  _
                    ByVal MainAcctDescPen As String,  _
                    ByVal SubAcctCodePen As String,  _
                    ByVal SubAcctDescPen As String,  _
                    ByVal Amt_Pd1 As Decimal,  _
                    ByVal Amt_PenPd1 As Decimal,  _
                    ByVal NewAmt_Pd As Decimal,  _
                    ByVal NewAmt_PenPd As Decimal,  _
                    ByVal NewTaxdue As Decimal,  _
                    ByVal NewPenDue As Decimal,  _
                    ByVal FieldName As String,  _
                    ByVal PrevGMonth As String,  _
                    ByVal GDateEsta As Date,  _
                    ByVal GMonthPaid As String,  _
                    ByVal DATE_ESTA As Date,  _
                    ByVal YearPeriod As String,  _
                    ByVal NotEdit As String,  _
                    ByVal NotDel As String,  _
                    ByVal AssessTotal As String,  _
                    ByVal UsedTCred As Short,  _
                    ByVal ForClose As String,  _
                    ByVal xORNO As String,  _
                    ByVal xSRS As String,  _
                    ByVal xTotal As Decimal,  _
                    ByVal RASSESBY As String,  _
                    ByVal xSQUENCELocal As String,  _
                    ByVal xSQUENCEPen As String,  _
                    ByVal xSQUENCE As String,  _
                    ByVal Area As Double,  _
                    ByVal QDUE As Decimal,  _
                    ByVal ADUE As Decimal,  _
                    ByVal QAMT As Decimal,  _
                    ByVal AAMT As Decimal,  _
                    ByVal RES1 As Decimal,  _
                    ByVal RES2 As Decimal,  _
                    ByVal RES3 As Decimal,  _
                    ByVal RES4 As Decimal,  _
                    ByVal RES5 As String,  _
                    ByVal IsRegBill As String,  _
                    ByVal RES As String,  _
                    ByVal PenYear As String,  _
                    ByVal NotDelete As String,  _
                    ByVal I_YEAR1 As String,  _
                    ByVal I_DISCOUNT1 As Decimal,  _
                    ByVal I_YEAR2 As String,  _
                    ByVal I_DISCOUNT2 As Decimal,  _
                    ByVal I_YEAR3 As String,  _
                    ByVal I_DISCOUNT3 As Decimal,  _
                    ByVal I_YEAR4 As String,  _
                    ByVal I_DISCOUNT4 As Decimal,  _
                    ByVal EDITEDBY As String,  _
                    ByVal X1 As String,  _
                    ByVal X2 As String,  _
                    ByVal X3 As String,  _
                    ByVal X4 As String,  _
                    ByVal X5 As String,  _
                    ByVal BLGFSORT As String,  _
                    ByVal Provision As String,  _
                    ByVal Remarks As String,  _
                    ByVal xMainAcctCode As String,  _
                    ByVal xMainAcctDesc As String,  _
                    ByVal xSubAcctCode As String,  _
                    ByVal xSubAcctDesc As String,  _
                    ByVal xMainAcctCodePen As String,  _
                    ByVal xMainAcctDescPen As String,  _
                    ByVal xSubAcctCodePen As String,  _
                    ByVal xSubAcctDescPen As String,  _
                    ByVal TRANSTYPE As String,  _
                    ByVal ORIGDUEFEEADJ As Decimal,  _
                    ByVal XDEPT As String,  _
                    ByVal FROMSP As String,  _
                    ByVal FEEPEN As String,  _
                    ByVal PRODUCT As String,  _
                    ByVal BPLOTOIMS As String,  _
                    ByVal BILLTYPE As String,  _
                    ByVal NEW5 As String) As chyRow
            Dim rowchyRow As chyRow = CType(Me.NewRow,chyRow)
            Dim columnValuesArray() As Object = New Object() {Acctno, Foryear, Bus_Code, Desc1, Taxbase, Annualdue, Taxdue, PenDue, Totdue, Amt_Pd, Amt_PenPd, Discount, Taxcode, prevqtr, Qtryr1, Qtryr2, QtrPaid, Remarks0, Remarks1, Pres, Prev, Statcode, ASSESSNO, Newsw, ModeP, GradFix, Capital, Xsort, ORNo, DatePaid, BrgyCode, LocaCode, L_DatePD, MainAcctCode, MainAcctDesc, SubAcctCode, SubAcctDesc, MainAcctCodePen, MainAcctDescPen, SubAcctCodePen, SubAcctDescPen, Amt_Pd1, Amt_PenPd1, NewAmt_Pd, NewAmt_PenPd, NewTaxdue, NewPenDue, FieldName, PrevGMonth, GDateEsta, GMonthPaid, DATE_ESTA, YearPeriod, NotEdit, NotDel, AssessTotal, UsedTCred, ForClose, xORNO, xSRS, xTotal, RASSESBY, xSQUENCELocal, xSQUENCEPen, xSQUENCE, Area, QDUE, ADUE, QAMT, AAMT, RES1, RES2, RES3, RES4, RES5, IsRegBill, RES, PenYear, NotDelete, I_YEAR1, I_DISCOUNT1, I_YEAR2, I_DISCOUNT2, I_YEAR3, I_DISCOUNT3, I_YEAR4, I_DISCOUNT4, EDITEDBY, X1, X2, X3, X4, X5, BLGFSORT, Provision, Remarks, xMainAcctCode, xMainAcctDesc, xSubAcctCode, xSubAcctDesc, xMainAcctCodePen, xMainAcctDescPen, xSubAcctCodePen, xSubAcctDescPen, TRANSTYPE, ORIGDUEFEEADJ, XDEPT, FROMSP, FEEPEN, PRODUCT, BPLOTOIMS, BILLTYPE, NEW5}
            rowchyRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowchyRow)
            Return rowchyRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As chyDataTable = CType(MyBase.Clone,chyDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New chyDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAcctno = MyBase.Columns("Acctno")
            Me.columnForyear = MyBase.Columns("Foryear")
            Me.columnBus_Code = MyBase.Columns("Bus_Code")
            Me.columnDesc1 = MyBase.Columns("Desc1")
            Me.columnTaxbase = MyBase.Columns("Taxbase")
            Me.columnAnnualdue = MyBase.Columns("Annualdue")
            Me.columnTaxdue = MyBase.Columns("Taxdue")
            Me.columnPenDue = MyBase.Columns("PenDue")
            Me.columnTotdue = MyBase.Columns("Totdue")
            Me.columnAmt_Pd = MyBase.Columns("Amt_Pd")
            Me.columnAmt_PenPd = MyBase.Columns("Amt_PenPd")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnTaxcode = MyBase.Columns("Taxcode")
            Me.columnprevqtr = MyBase.Columns("prevqtr")
            Me.columnQtryr1 = MyBase.Columns("Qtryr1")
            Me.columnQtryr2 = MyBase.Columns("Qtryr2")
            Me.columnQtrPaid = MyBase.Columns("QtrPaid")
            Me.columnRemarks0 = MyBase.Columns("Remarks0")
            Me.columnRemarks1 = MyBase.Columns("Remarks1")
            Me.columnPres = MyBase.Columns("Pres")
            Me.columnPrev = MyBase.Columns("Prev")
            Me.columnStatcode = MyBase.Columns("Statcode")
            Me.columnASSESSNO = MyBase.Columns("ASSESSNO")
            Me.columnNewsw = MyBase.Columns("Newsw")
            Me.columnModeP = MyBase.Columns("ModeP")
            Me.columnGradFix = MyBase.Columns("GradFix")
            Me.columnCapital = MyBase.Columns("Capital")
            Me.columnXsort = MyBase.Columns("Xsort")
            Me.columnORNo = MyBase.Columns("ORNo")
            Me.columnDatePaid = MyBase.Columns("DatePaid")
            Me.columnBrgyCode = MyBase.Columns("BrgyCode")
            Me.columnLocaCode = MyBase.Columns("LocaCode")
            Me.columnL_DatePD = MyBase.Columns("L_DatePD")
            Me.columnMainAcctCode = MyBase.Columns("MainAcctCode")
            Me.columnMainAcctDesc = MyBase.Columns("MainAcctDesc")
            Me.columnSubAcctCode = MyBase.Columns("SubAcctCode")
            Me.columnSubAcctDesc = MyBase.Columns("SubAcctDesc")
            Me.columnMainAcctCodePen = MyBase.Columns("MainAcctCodePen")
            Me.columnMainAcctDescPen = MyBase.Columns("MainAcctDescPen")
            Me.columnSubAcctCodePen = MyBase.Columns("SubAcctCodePen")
            Me.columnSubAcctDescPen = MyBase.Columns("SubAcctDescPen")
            Me.columnAmt_Pd1 = MyBase.Columns("Amt_Pd1")
            Me.columnAmt_PenPd1 = MyBase.Columns("Amt_PenPd1")
            Me.columnNewAmt_Pd = MyBase.Columns("NewAmt_Pd")
            Me.columnNewAmt_PenPd = MyBase.Columns("NewAmt_PenPd")
            Me.columnNewTaxdue = MyBase.Columns("NewTaxdue")
            Me.columnNewPenDue = MyBase.Columns("NewPenDue")
            Me.columnFieldName = MyBase.Columns("FieldName")
            Me.columnPrevGMonth = MyBase.Columns("PrevGMonth")
            Me.columnGDateEsta = MyBase.Columns("GDateEsta")
            Me.columnGMonthPaid = MyBase.Columns("GMonthPaid")
            Me.columnDATE_ESTA = MyBase.Columns("DATE_ESTA")
            Me.columnYearPeriod = MyBase.Columns("YearPeriod")
            Me.columnNotEdit = MyBase.Columns("NotEdit")
            Me.columnNotDel = MyBase.Columns("NotDel")
            Me.columnAssessTotal = MyBase.Columns("AssessTotal")
            Me.columnUsedTCred = MyBase.Columns("UsedTCred")
            Me.columnForClose = MyBase.Columns("ForClose")
            Me.columnxORNO = MyBase.Columns("xORNO")
            Me.columnxSRS = MyBase.Columns("xSRS")
            Me.columnxTotal = MyBase.Columns("xTotal")
            Me.columnRASSESBY = MyBase.Columns("RASSESBY")
            Me.columnxSQUENCELocal = MyBase.Columns("xSQUENCELocal")
            Me.columnxSQUENCEPen = MyBase.Columns("xSQUENCEPen")
            Me.columnxSQUENCE = MyBase.Columns("xSQUENCE")
            Me.columnArea = MyBase.Columns("Area")
            Me.columnQDUE = MyBase.Columns("QDUE")
            Me.columnADUE = MyBase.Columns("ADUE")
            Me.columnQAMT = MyBase.Columns("QAMT")
            Me.columnAAMT = MyBase.Columns("AAMT")
            Me.columnRES1 = MyBase.Columns("RES1")
            Me.columnRES2 = MyBase.Columns("RES2")
            Me.columnRES3 = MyBase.Columns("RES3")
            Me.columnRES4 = MyBase.Columns("RES4")
            Me.columnRES5 = MyBase.Columns("RES5")
            Me.columnIsRegBill = MyBase.Columns("IsRegBill")
            Me.columnRES = MyBase.Columns("RES")
            Me.columnPenYear = MyBase.Columns("PenYear")
            Me.columnNotDelete = MyBase.Columns("NotDelete")
            Me.columnI_YEAR1 = MyBase.Columns("I_YEAR1")
            Me.columnI_DISCOUNT1 = MyBase.Columns("I_DISCOUNT1")
            Me.columnI_YEAR2 = MyBase.Columns("I_YEAR2")
            Me.columnI_DISCOUNT2 = MyBase.Columns("I_DISCOUNT2")
            Me.columnI_YEAR3 = MyBase.Columns("I_YEAR3")
            Me.columnI_DISCOUNT3 = MyBase.Columns("I_DISCOUNT3")
            Me.columnI_YEAR4 = MyBase.Columns("I_YEAR4")
            Me.columnI_DISCOUNT4 = MyBase.Columns("I_DISCOUNT4")
            Me.columnEDITEDBY = MyBase.Columns("EDITEDBY")
            Me.columnX1 = MyBase.Columns("X1")
            Me.columnX2 = MyBase.Columns("X2")
            Me.columnX3 = MyBase.Columns("X3")
            Me.columnX4 = MyBase.Columns("X4")
            Me.columnX5 = MyBase.Columns("X5")
            Me.columnBLGFSORT = MyBase.Columns("BLGFSORT")
            Me.columnProvision = MyBase.Columns("Provision")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnxMainAcctCode = MyBase.Columns("xMainAcctCode")
            Me.columnxMainAcctDesc = MyBase.Columns("xMainAcctDesc")
            Me.columnxSubAcctCode = MyBase.Columns("xSubAcctCode")
            Me.columnxSubAcctDesc = MyBase.Columns("xSubAcctDesc")
            Me.columnxMainAcctCodePen = MyBase.Columns("xMainAcctCodePen")
            Me.columnxMainAcctDescPen = MyBase.Columns("xMainAcctDescPen")
            Me.columnxSubAcctCodePen = MyBase.Columns("xSubAcctCodePen")
            Me.columnxSubAcctDescPen = MyBase.Columns("xSubAcctDescPen")
            Me.columnTRANSTYPE = MyBase.Columns("TRANSTYPE")
            Me.columnORIGDUEFEEADJ = MyBase.Columns("ORIGDUEFEEADJ")
            Me.columnXDEPT = MyBase.Columns("XDEPT")
            Me.columnFROMSP = MyBase.Columns("FROMSP")
            Me.columnFEEPEN = MyBase.Columns("FEEPEN")
            Me.columnPRODUCT = MyBase.Columns("PRODUCT")
            Me.columnBPLOTOIMS = MyBase.Columns("BPLOTOIMS")
            Me.columnBILLTYPE = MyBase.Columns("BILLTYPE")
            Me.columnNEW5 = MyBase.Columns("NEW5")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAcctno = New Global.System.Data.DataColumn("Acctno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctno)
            Me.columnForyear = New Global.System.Data.DataColumn("Foryear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForyear)
            Me.columnBus_Code = New Global.System.Data.DataColumn("Bus_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBus_Code)
            Me.columnDesc1 = New Global.System.Data.DataColumn("Desc1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesc1)
            Me.columnTaxbase = New Global.System.Data.DataColumn("Taxbase", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxbase)
            Me.columnAnnualdue = New Global.System.Data.DataColumn("Annualdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnnualdue)
            Me.columnTaxdue = New Global.System.Data.DataColumn("Taxdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxdue)
            Me.columnPenDue = New Global.System.Data.DataColumn("PenDue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPenDue)
            Me.columnTotdue = New Global.System.Data.DataColumn("Totdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotdue)
            Me.columnAmt_Pd = New Global.System.Data.DataColumn("Amt_Pd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_Pd)
            Me.columnAmt_PenPd = New Global.System.Data.DataColumn("Amt_PenPd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_PenPd)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnTaxcode = New Global.System.Data.DataColumn("Taxcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxcode)
            Me.columnprevqtr = New Global.System.Data.DataColumn("prevqtr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevqtr)
            Me.columnQtryr1 = New Global.System.Data.DataColumn("Qtryr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtryr1)
            Me.columnQtryr2 = New Global.System.Data.DataColumn("Qtryr2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtryr2)
            Me.columnQtrPaid = New Global.System.Data.DataColumn("QtrPaid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtrPaid)
            Me.columnRemarks0 = New Global.System.Data.DataColumn("Remarks0", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks0)
            Me.columnRemarks1 = New Global.System.Data.DataColumn("Remarks1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks1)
            Me.columnPres = New Global.System.Data.DataColumn("Pres", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPres)
            Me.columnPrev = New Global.System.Data.DataColumn("Prev", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrev)
            Me.columnStatcode = New Global.System.Data.DataColumn("Statcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatcode)
            Me.columnASSESSNO = New Global.System.Data.DataColumn("ASSESSNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSESSNO)
            Me.columnNewsw = New Global.System.Data.DataColumn("Newsw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewsw)
            Me.columnModeP = New Global.System.Data.DataColumn("ModeP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModeP)
            Me.columnGradFix = New Global.System.Data.DataColumn("GradFix", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGradFix)
            Me.columnCapital = New Global.System.Data.DataColumn("Capital", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCapital)
            Me.columnXsort = New Global.System.Data.DataColumn("Xsort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXsort)
            Me.columnORNo = New Global.System.Data.DataColumn("ORNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORNo)
            Me.columnDatePaid = New Global.System.Data.DataColumn("DatePaid", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatePaid)
            Me.columnBrgyCode = New Global.System.Data.DataColumn("BrgyCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrgyCode)
            Me.columnLocaCode = New Global.System.Data.DataColumn("LocaCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocaCode)
            Me.columnL_DatePD = New Global.System.Data.DataColumn("L_DatePD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnL_DatePD)
            Me.columnMainAcctCode = New Global.System.Data.DataColumn("MainAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctCode)
            Me.columnMainAcctDesc = New Global.System.Data.DataColumn("MainAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctDesc)
            Me.columnSubAcctCode = New Global.System.Data.DataColumn("SubAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctCode)
            Me.columnSubAcctDesc = New Global.System.Data.DataColumn("SubAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctDesc)
            Me.columnMainAcctCodePen = New Global.System.Data.DataColumn("MainAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctCodePen)
            Me.columnMainAcctDescPen = New Global.System.Data.DataColumn("MainAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctDescPen)
            Me.columnSubAcctCodePen = New Global.System.Data.DataColumn("SubAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctCodePen)
            Me.columnSubAcctDescPen = New Global.System.Data.DataColumn("SubAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctDescPen)
            Me.columnAmt_Pd1 = New Global.System.Data.DataColumn("Amt_Pd1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_Pd1)
            Me.columnAmt_PenPd1 = New Global.System.Data.DataColumn("Amt_PenPd1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_PenPd1)
            Me.columnNewAmt_Pd = New Global.System.Data.DataColumn("NewAmt_Pd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewAmt_Pd)
            Me.columnNewAmt_PenPd = New Global.System.Data.DataColumn("NewAmt_PenPd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewAmt_PenPd)
            Me.columnNewTaxdue = New Global.System.Data.DataColumn("NewTaxdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTaxdue)
            Me.columnNewPenDue = New Global.System.Data.DataColumn("NewPenDue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewPenDue)
            Me.columnFieldName = New Global.System.Data.DataColumn("FieldName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldName)
            Me.columnPrevGMonth = New Global.System.Data.DataColumn("PrevGMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevGMonth)
            Me.columnGDateEsta = New Global.System.Data.DataColumn("GDateEsta", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGDateEsta)
            Me.columnGMonthPaid = New Global.System.Data.DataColumn("GMonthPaid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGMonthPaid)
            Me.columnDATE_ESTA = New Global.System.Data.DataColumn("DATE_ESTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_ESTA)
            Me.columnYearPeriod = New Global.System.Data.DataColumn("YearPeriod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYearPeriod)
            Me.columnNotEdit = New Global.System.Data.DataColumn("NotEdit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotEdit)
            Me.columnNotDel = New Global.System.Data.DataColumn("NotDel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotDel)
            Me.columnAssessTotal = New Global.System.Data.DataColumn("AssessTotal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAssessTotal)
            Me.columnUsedTCred = New Global.System.Data.DataColumn("UsedTCred", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsedTCred)
            Me.columnForClose = New Global.System.Data.DataColumn("ForClose", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForClose)
            Me.columnxORNO = New Global.System.Data.DataColumn("xORNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxORNO)
            Me.columnxSRS = New Global.System.Data.DataColumn("xSRS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSRS)
            Me.columnxTotal = New Global.System.Data.DataColumn("xTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxTotal)
            Me.columnRASSESBY = New Global.System.Data.DataColumn("RASSESBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRASSESBY)
            Me.columnxSQUENCELocal = New Global.System.Data.DataColumn("xSQUENCELocal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSQUENCELocal)
            Me.columnxSQUENCEPen = New Global.System.Data.DataColumn("xSQUENCEPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSQUENCEPen)
            Me.columnxSQUENCE = New Global.System.Data.DataColumn("xSQUENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSQUENCE)
            Me.columnArea = New Global.System.Data.DataColumn("Area", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea)
            Me.columnQDUE = New Global.System.Data.DataColumn("QDUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQDUE)
            Me.columnADUE = New Global.System.Data.DataColumn("ADUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADUE)
            Me.columnQAMT = New Global.System.Data.DataColumn("QAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQAMT)
            Me.columnAAMT = New Global.System.Data.DataColumn("AAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAAMT)
            Me.columnRES1 = New Global.System.Data.DataColumn("RES1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES1)
            Me.columnRES2 = New Global.System.Data.DataColumn("RES2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES2)
            Me.columnRES3 = New Global.System.Data.DataColumn("RES3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES3)
            Me.columnRES4 = New Global.System.Data.DataColumn("RES4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES4)
            Me.columnRES5 = New Global.System.Data.DataColumn("RES5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES5)
            Me.columnIsRegBill = New Global.System.Data.DataColumn("IsRegBill", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsRegBill)
            Me.columnRES = New Global.System.Data.DataColumn("RES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES)
            Me.columnPenYear = New Global.System.Data.DataColumn("PenYear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPenYear)
            Me.columnNotDelete = New Global.System.Data.DataColumn("NotDelete", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotDelete)
            Me.columnI_YEAR1 = New Global.System.Data.DataColumn("I_YEAR1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR1)
            Me.columnI_DISCOUNT1 = New Global.System.Data.DataColumn("I_DISCOUNT1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT1)
            Me.columnI_YEAR2 = New Global.System.Data.DataColumn("I_YEAR2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR2)
            Me.columnI_DISCOUNT2 = New Global.System.Data.DataColumn("I_DISCOUNT2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT2)
            Me.columnI_YEAR3 = New Global.System.Data.DataColumn("I_YEAR3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR3)
            Me.columnI_DISCOUNT3 = New Global.System.Data.DataColumn("I_DISCOUNT3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT3)
            Me.columnI_YEAR4 = New Global.System.Data.DataColumn("I_YEAR4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR4)
            Me.columnI_DISCOUNT4 = New Global.System.Data.DataColumn("I_DISCOUNT4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT4)
            Me.columnEDITEDBY = New Global.System.Data.DataColumn("EDITEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITEDBY)
            Me.columnX1 = New Global.System.Data.DataColumn("X1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX1)
            Me.columnX2 = New Global.System.Data.DataColumn("X2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX2)
            Me.columnX3 = New Global.System.Data.DataColumn("X3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX3)
            Me.columnX4 = New Global.System.Data.DataColumn("X4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX4)
            Me.columnX5 = New Global.System.Data.DataColumn("X5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX5)
            Me.columnBLGFSORT = New Global.System.Data.DataColumn("BLGFSORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBLGFSORT)
            Me.columnProvision = New Global.System.Data.DataColumn("Provision", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvision)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnxMainAcctCode = New Global.System.Data.DataColumn("xMainAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctCode)
            Me.columnxMainAcctDesc = New Global.System.Data.DataColumn("xMainAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctDesc)
            Me.columnxSubAcctCode = New Global.System.Data.DataColumn("xSubAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctCode)
            Me.columnxSubAcctDesc = New Global.System.Data.DataColumn("xSubAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctDesc)
            Me.columnxMainAcctCodePen = New Global.System.Data.DataColumn("xMainAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctCodePen)
            Me.columnxMainAcctDescPen = New Global.System.Data.DataColumn("xMainAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctDescPen)
            Me.columnxSubAcctCodePen = New Global.System.Data.DataColumn("xSubAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctCodePen)
            Me.columnxSubAcctDescPen = New Global.System.Data.DataColumn("xSubAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctDescPen)
            Me.columnTRANSTYPE = New Global.System.Data.DataColumn("TRANSTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSTYPE)
            Me.columnORIGDUEFEEADJ = New Global.System.Data.DataColumn("ORIGDUEFEEADJ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGDUEFEEADJ)
            Me.columnXDEPT = New Global.System.Data.DataColumn("XDEPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXDEPT)
            Me.columnFROMSP = New Global.System.Data.DataColumn("FROMSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFROMSP)
            Me.columnFEEPEN = New Global.System.Data.DataColumn("FEEPEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFEEPEN)
            Me.columnPRODUCT = New Global.System.Data.DataColumn("PRODUCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCT)
            Me.columnBPLOTOIMS = New Global.System.Data.DataColumn("BPLOTOIMS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBPLOTOIMS)
            Me.columnBILLTYPE = New Global.System.Data.DataColumn("BILLTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBILLTYPE)
            Me.columnNEW5 = New Global.System.Data.DataColumn("NEW5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEW5)
            Me.columnAcctno.MaxLength = 25
            Me.columnForyear.MaxLength = 10
            Me.columnBus_Code.MaxLength = 10
            Me.columnDesc1.MaxLength = 255
            Me.columnTaxcode.MaxLength = 10
            Me.columnprevqtr.MaxLength = 20
            Me.columnQtryr1.MaxLength = 20
            Me.columnQtryr2.MaxLength = 20
            Me.columnQtrPaid.MaxLength = 10
            Me.columnRemarks0.MaxLength = 50
            Me.columnRemarks1.MaxLength = 50
            Me.columnPres.MaxLength = 20
            Me.columnPrev.MaxLength = 20
            Me.columnStatcode.MaxLength = 5
            Me.columnASSESSNO.MaxLength = 50
            Me.columnNewsw.MaxLength = 5
            Me.columnModeP.MaxLength = 5
            Me.columnGradFix.MaxLength = 10
            Me.columnXsort.MaxLength = 20
            Me.columnORNo.MaxLength = 20
            Me.columnBrgyCode.MaxLength = 5
            Me.columnLocaCode.MaxLength = 5
            Me.columnMainAcctCode.MaxLength = 50
            Me.columnMainAcctDesc.MaxLength = 255
            Me.columnSubAcctCode.MaxLength = 50
            Me.columnSubAcctDesc.MaxLength = 255
            Me.columnMainAcctCodePen.MaxLength = 50
            Me.columnMainAcctDescPen.MaxLength = 255
            Me.columnSubAcctCodePen.MaxLength = 50
            Me.columnSubAcctDescPen.MaxLength = 255
            Me.columnFieldName.MaxLength = 50
            Me.columnPrevGMonth.MaxLength = 50
            Me.columnGMonthPaid.MaxLength = 50
            Me.columnYearPeriod.MaxLength = 50
            Me.columnNotEdit.MaxLength = 50
            Me.columnNotDel.MaxLength = 50
            Me.columnAssessTotal.MaxLength = 50
            Me.columnForClose.MaxLength = 255
            Me.columnxORNO.MaxLength = 20
            Me.columnxSRS.MaxLength = 20
            Me.columnRASSESBY.MaxLength = 50
            Me.columnxSQUENCELocal.MaxLength = 5
            Me.columnxSQUENCEPen.MaxLength = 5
            Me.columnxSQUENCE.MaxLength = 5
            Me.columnRES5.MaxLength = 10
            Me.columnIsRegBill.MaxLength = 10
            Me.columnRES.MaxLength = 50
            Me.columnPenYear.MaxLength = 10
            Me.columnNotDelete.MaxLength = 50
            Me.columnI_YEAR1.MaxLength = 50
            Me.columnI_YEAR2.MaxLength = 50
            Me.columnI_YEAR3.MaxLength = 50
            Me.columnI_YEAR4.MaxLength = 50
            Me.columnEDITEDBY.MaxLength = 50
            Me.columnX1.MaxLength = 50
            Me.columnX2.MaxLength = 50
            Me.columnX3.MaxLength = 50
            Me.columnX4.MaxLength = 50
            Me.columnX5.MaxLength = 50
            Me.columnBLGFSORT.MaxLength = 50
            Me.columnProvision.MaxLength = 50
            Me.columnRemarks.MaxLength = 250
            Me.columnxMainAcctCode.MaxLength = 50
            Me.columnxMainAcctDesc.MaxLength = 255
            Me.columnxSubAcctCode.MaxLength = 50
            Me.columnxSubAcctDesc.MaxLength = 255
            Me.columnxMainAcctCodePen.MaxLength = 50
            Me.columnxMainAcctDescPen.MaxLength = 255
            Me.columnxSubAcctCodePen.MaxLength = 50
            Me.columnxSubAcctDescPen.MaxLength = 255
            Me.columnTRANSTYPE.MaxLength = 50
            Me.columnXDEPT.MaxLength = 50
            Me.columnFROMSP.MaxLength = 5
            Me.columnFEEPEN.MaxLength = 5
            Me.columnPRODUCT.MaxLength = 2000
            Me.columnBPLOTOIMS.MaxLength = 10
            Me.columnBILLTYPE.MaxLength = 50
            Me.columnNEW5.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewchyRow() As chyRow
            Return CType(Me.NewRow,chyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New chyRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(chyRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.chyRowChangedEvent) Is Nothing) Then
                RaiseEvent chyRowChanged(Me, New chyRowChangeEvent(CType(e.Row,chyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.chyRowChangingEvent) Is Nothing) Then
                RaiseEvent chyRowChanging(Me, New chyRowChangeEvent(CType(e.Row,chyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.chyRowDeletedEvent) Is Nothing) Then
                RaiseEvent chyRowDeleted(Me, New chyRowChangeEvent(CType(e.Row,chyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.chyRowDeletingEvent) Is Nothing) Then
                RaiseEvent chyRowDeleting(Me, New chyRowChangeEvent(CType(e.Row,chyRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovechyRow(ByVal row As chyRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "chyDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class chy_1DataTable
        Inherits Global.System.Data.TypedTableBase(Of chy_1Row)
        
        Private columnAcctno As Global.System.Data.DataColumn
        
        Private columnForyear As Global.System.Data.DataColumn
        
        Private columnBus_Code As Global.System.Data.DataColumn
        
        Private columnDesc1 As Global.System.Data.DataColumn
        
        Private columnTaxbase As Global.System.Data.DataColumn
        
        Private columnAnnualdue As Global.System.Data.DataColumn
        
        Private columnTaxdue As Global.System.Data.DataColumn
        
        Private columnPenDue As Global.System.Data.DataColumn
        
        Private columnTotdue As Global.System.Data.DataColumn
        
        Private columnAmt_Pd As Global.System.Data.DataColumn
        
        Private columnAmt_PenPd As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnTaxcode As Global.System.Data.DataColumn
        
        Private columnprevqtr As Global.System.Data.DataColumn
        
        Private columnQtryr1 As Global.System.Data.DataColumn
        
        Private columnQtryr2 As Global.System.Data.DataColumn
        
        Private columnQtrPaid As Global.System.Data.DataColumn
        
        Private columnRemarks0 As Global.System.Data.DataColumn
        
        Private columnRemarks1 As Global.System.Data.DataColumn
        
        Private columnPres As Global.System.Data.DataColumn
        
        Private columnPrev As Global.System.Data.DataColumn
        
        Private columnStatcode As Global.System.Data.DataColumn
        
        Private columnASSESSNO As Global.System.Data.DataColumn
        
        Private columnNewsw As Global.System.Data.DataColumn
        
        Private columnModeP As Global.System.Data.DataColumn
        
        Private columnGradFix As Global.System.Data.DataColumn
        
        Private columnCapital As Global.System.Data.DataColumn
        
        Private columnXsort As Global.System.Data.DataColumn
        
        Private columnORNo As Global.System.Data.DataColumn
        
        Private columnDatePaid As Global.System.Data.DataColumn
        
        Private columnBrgyCode As Global.System.Data.DataColumn
        
        Private columnLocaCode As Global.System.Data.DataColumn
        
        Private columnL_DatePD As Global.System.Data.DataColumn
        
        Private columnMainAcctCode As Global.System.Data.DataColumn
        
        Private columnMainAcctDesc As Global.System.Data.DataColumn
        
        Private columnSubAcctCode As Global.System.Data.DataColumn
        
        Private columnSubAcctDesc As Global.System.Data.DataColumn
        
        Private columnMainAcctCodePen As Global.System.Data.DataColumn
        
        Private columnMainAcctDescPen As Global.System.Data.DataColumn
        
        Private columnSubAcctCodePen As Global.System.Data.DataColumn
        
        Private columnSubAcctDescPen As Global.System.Data.DataColumn
        
        Private columnAmt_Pd1 As Global.System.Data.DataColumn
        
        Private columnAmt_PenPd1 As Global.System.Data.DataColumn
        
        Private columnNewAmt_Pd As Global.System.Data.DataColumn
        
        Private columnNewAmt_PenPd As Global.System.Data.DataColumn
        
        Private columnNewTaxdue As Global.System.Data.DataColumn
        
        Private columnNewPenDue As Global.System.Data.DataColumn
        
        Private columnFieldName As Global.System.Data.DataColumn
        
        Private columnPrevGMonth As Global.System.Data.DataColumn
        
        Private columnGDateEsta As Global.System.Data.DataColumn
        
        Private columnGMonthPaid As Global.System.Data.DataColumn
        
        Private columnDATE_ESTA As Global.System.Data.DataColumn
        
        Private columnYearPeriod As Global.System.Data.DataColumn
        
        Private columnNotEdit As Global.System.Data.DataColumn
        
        Private columnNotDel As Global.System.Data.DataColumn
        
        Private columnAssessTotal As Global.System.Data.DataColumn
        
        Private columnUsedTCred As Global.System.Data.DataColumn
        
        Private columnForClose As Global.System.Data.DataColumn
        
        Private columnxORNO As Global.System.Data.DataColumn
        
        Private columnxSRS As Global.System.Data.DataColumn
        
        Private columnxTotal As Global.System.Data.DataColumn
        
        Private columnRASSESBY As Global.System.Data.DataColumn
        
        Private columnxSQUENCELocal As Global.System.Data.DataColumn
        
        Private columnxSQUENCEPen As Global.System.Data.DataColumn
        
        Private columnxSQUENCE As Global.System.Data.DataColumn
        
        Private columnArea As Global.System.Data.DataColumn
        
        Private columnQDUE As Global.System.Data.DataColumn
        
        Private columnADUE As Global.System.Data.DataColumn
        
        Private columnQAMT As Global.System.Data.DataColumn
        
        Private columnAAMT As Global.System.Data.DataColumn
        
        Private columnRES1 As Global.System.Data.DataColumn
        
        Private columnRES2 As Global.System.Data.DataColumn
        
        Private columnRES3 As Global.System.Data.DataColumn
        
        Private columnRES4 As Global.System.Data.DataColumn
        
        Private columnRES5 As Global.System.Data.DataColumn
        
        Private columnIsRegBill As Global.System.Data.DataColumn
        
        Private columnRES As Global.System.Data.DataColumn
        
        Private columnPenYear As Global.System.Data.DataColumn
        
        Private columnNotDelete As Global.System.Data.DataColumn
        
        Private columnI_YEAR1 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT1 As Global.System.Data.DataColumn
        
        Private columnI_YEAR2 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT2 As Global.System.Data.DataColumn
        
        Private columnI_YEAR3 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT3 As Global.System.Data.DataColumn
        
        Private columnI_YEAR4 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT4 As Global.System.Data.DataColumn
        
        Private columnEDITEDBY As Global.System.Data.DataColumn
        
        Private columnX1 As Global.System.Data.DataColumn
        
        Private columnX2 As Global.System.Data.DataColumn
        
        Private columnX3 As Global.System.Data.DataColumn
        
        Private columnX4 As Global.System.Data.DataColumn
        
        Private columnX5 As Global.System.Data.DataColumn
        
        Private columnBLGFSORT As Global.System.Data.DataColumn
        
        Private columnProvision As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnxMainAcctCode As Global.System.Data.DataColumn
        
        Private columnxMainAcctDesc As Global.System.Data.DataColumn
        
        Private columnxSubAcctCode As Global.System.Data.DataColumn
        
        Private columnxSubAcctDesc As Global.System.Data.DataColumn
        
        Private columnxMainAcctCodePen As Global.System.Data.DataColumn
        
        Private columnxMainAcctDescPen As Global.System.Data.DataColumn
        
        Private columnxSubAcctCodePen As Global.System.Data.DataColumn
        
        Private columnxSubAcctDescPen As Global.System.Data.DataColumn
        
        Private columnTRANSTYPE As Global.System.Data.DataColumn
        
        Private columnORIGDUEFEEADJ As Global.System.Data.DataColumn
        
        Private columnXDEPT As Global.System.Data.DataColumn
        
        Private columnFROMSP As Global.System.Data.DataColumn
        
        Private columnFEEPEN As Global.System.Data.DataColumn
        
        Private columnPRODUCT As Global.System.Data.DataColumn
        
        Private columnBPLOTOIMS As Global.System.Data.DataColumn
        
        Private columnBILLTYPE As Global.System.Data.DataColumn
        
        Private columnNEW5 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "chy_1"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ForyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bus_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBus_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Desc1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesc1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxbaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxbase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnnualdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnnualdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PenDueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPenDue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_PdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_Pd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_PenPdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_PenPd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevqtrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevqtr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Qtryr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtryr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Qtryr2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtryr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QtrPaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtrPaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Remarks0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Remarks1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PresColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPres
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrevColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrev
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ASSESSNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSESSNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewswColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewsw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModePColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModeP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GradFixColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGradFix
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CapitalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCapital
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XsortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXsort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatePaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatePaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BrgyCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrgyCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LocaCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocaCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property L_DatePDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnL_DatePD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_Pd1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_Pd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_PenPd1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_PenPd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewAmt_PdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewAmt_Pd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewAmt_PenPdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewAmt_PenPd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewTaxdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTaxdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewPenDueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewPenDue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrevGMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevGMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GDateEstaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGDateEsta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GMonthPaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGMonthPaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATE_ESTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_ESTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YearPeriodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYearPeriod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotEditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotEdit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotDelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotDel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AssessTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAssessTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UsedTCredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsedTCred
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ForCloseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForClose
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xORNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxORNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSRSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSRS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RASSESBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRASSESBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSQUENCELocalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSQUENCELocal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSQUENCEPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSQUENCEPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSQUENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSQUENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QDUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQDUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsRegBillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsRegBill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PenYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPenYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotDeleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotDelete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EDITEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BLGFSORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBLGFSORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProvisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORIGDUEFEEADJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGDUEFEEADJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XDEPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXDEPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FROMSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFROMSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FEEPENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFEEPEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BPLOTOIMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBPLOTOIMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BILLTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBILLTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NEW5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEW5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As chy_1Row
            Get
                Return CType(Me.Rows(index),chy_1Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chy_1RowChanging As chy_1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chy_1RowChanged As chy_1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chy_1RowDeleting As chy_1RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chy_1RowDeleted As chy_1RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addchy_1Row(ByVal row As chy_1Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addchy_1Row( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal Desc1 As String,  _
                    ByVal Taxbase As Decimal,  _
                    ByVal Annualdue As Decimal,  _
                    ByVal Taxdue As Decimal,  _
                    ByVal PenDue As Decimal,  _
                    ByVal Totdue As Decimal,  _
                    ByVal Amt_Pd As Decimal,  _
                    ByVal Amt_PenPd As Decimal,  _
                    ByVal Discount As Decimal,  _
                    ByVal Taxcode As String,  _
                    ByVal prevqtr As String,  _
                    ByVal Qtryr1 As String,  _
                    ByVal Qtryr2 As String,  _
                    ByVal QtrPaid As String,  _
                    ByVal Remarks0 As String,  _
                    ByVal Remarks1 As String,  _
                    ByVal Pres As String,  _
                    ByVal Prev As String,  _
                    ByVal Statcode As String,  _
                    ByVal ASSESSNO As String,  _
                    ByVal Newsw As String,  _
                    ByVal ModeP As String,  _
                    ByVal GradFix As String,  _
                    ByVal Capital As Decimal,  _
                    ByVal Xsort As String,  _
                    ByVal ORNo As String,  _
                    ByVal DatePaid As Date,  _
                    ByVal BrgyCode As String,  _
                    ByVal LocaCode As String,  _
                    ByVal L_DatePD As Date,  _
                    ByVal MainAcctCode As String,  _
                    ByVal MainAcctDesc As String,  _
                    ByVal SubAcctCode As String,  _
                    ByVal SubAcctDesc As String,  _
                    ByVal MainAcctCodePen As String,  _
                    ByVal MainAcctDescPen As String,  _
                    ByVal SubAcctCodePen As String,  _
                    ByVal SubAcctDescPen As String,  _
                    ByVal Amt_Pd1 As Decimal,  _
                    ByVal Amt_PenPd1 As Decimal,  _
                    ByVal NewAmt_Pd As Decimal,  _
                    ByVal NewAmt_PenPd As Decimal,  _
                    ByVal NewTaxdue As Decimal,  _
                    ByVal NewPenDue As Decimal,  _
                    ByVal FieldName As String,  _
                    ByVal PrevGMonth As String,  _
                    ByVal GDateEsta As Date,  _
                    ByVal GMonthPaid As String,  _
                    ByVal DATE_ESTA As Date,  _
                    ByVal YearPeriod As String,  _
                    ByVal NotEdit As String,  _
                    ByVal NotDel As String,  _
                    ByVal AssessTotal As String,  _
                    ByVal UsedTCred As Short,  _
                    ByVal ForClose As String,  _
                    ByVal xORNO As String,  _
                    ByVal xSRS As String,  _
                    ByVal xTotal As Decimal,  _
                    ByVal RASSESBY As String,  _
                    ByVal xSQUENCELocal As String,  _
                    ByVal xSQUENCEPen As String,  _
                    ByVal xSQUENCE As String,  _
                    ByVal Area As Double,  _
                    ByVal QDUE As Decimal,  _
                    ByVal ADUE As Decimal,  _
                    ByVal QAMT As Decimal,  _
                    ByVal AAMT As Decimal,  _
                    ByVal RES1 As Decimal,  _
                    ByVal RES2 As Decimal,  _
                    ByVal RES3 As Decimal,  _
                    ByVal RES4 As Decimal,  _
                    ByVal RES5 As String,  _
                    ByVal IsRegBill As String,  _
                    ByVal RES As String,  _
                    ByVal PenYear As String,  _
                    ByVal NotDelete As String,  _
                    ByVal I_YEAR1 As String,  _
                    ByVal I_DISCOUNT1 As Decimal,  _
                    ByVal I_YEAR2 As String,  _
                    ByVal I_DISCOUNT2 As Decimal,  _
                    ByVal I_YEAR3 As String,  _
                    ByVal I_DISCOUNT3 As Decimal,  _
                    ByVal I_YEAR4 As String,  _
                    ByVal I_DISCOUNT4 As Decimal,  _
                    ByVal EDITEDBY As String,  _
                    ByVal X1 As String,  _
                    ByVal X2 As String,  _
                    ByVal X3 As String,  _
                    ByVal X4 As String,  _
                    ByVal X5 As String,  _
                    ByVal BLGFSORT As String,  _
                    ByVal Provision As String,  _
                    ByVal Remarks As String,  _
                    ByVal xMainAcctCode As String,  _
                    ByVal xMainAcctDesc As String,  _
                    ByVal xSubAcctCode As String,  _
                    ByVal xSubAcctDesc As String,  _
                    ByVal xMainAcctCodePen As String,  _
                    ByVal xMainAcctDescPen As String,  _
                    ByVal xSubAcctCodePen As String,  _
                    ByVal xSubAcctDescPen As String,  _
                    ByVal TRANSTYPE As String,  _
                    ByVal ORIGDUEFEEADJ As Decimal,  _
                    ByVal XDEPT As String,  _
                    ByVal FROMSP As String,  _
                    ByVal FEEPEN As String,  _
                    ByVal PRODUCT As String,  _
                    ByVal BPLOTOIMS As String,  _
                    ByVal BILLTYPE As String,  _
                    ByVal NEW5 As String) As chy_1Row
            Dim rowchy_1Row As chy_1Row = CType(Me.NewRow,chy_1Row)
            Dim columnValuesArray() As Object = New Object() {Acctno, Foryear, Bus_Code, Desc1, Taxbase, Annualdue, Taxdue, PenDue, Totdue, Amt_Pd, Amt_PenPd, Discount, Taxcode, prevqtr, Qtryr1, Qtryr2, QtrPaid, Remarks0, Remarks1, Pres, Prev, Statcode, ASSESSNO, Newsw, ModeP, GradFix, Capital, Xsort, ORNo, DatePaid, BrgyCode, LocaCode, L_DatePD, MainAcctCode, MainAcctDesc, SubAcctCode, SubAcctDesc, MainAcctCodePen, MainAcctDescPen, SubAcctCodePen, SubAcctDescPen, Amt_Pd1, Amt_PenPd1, NewAmt_Pd, NewAmt_PenPd, NewTaxdue, NewPenDue, FieldName, PrevGMonth, GDateEsta, GMonthPaid, DATE_ESTA, YearPeriod, NotEdit, NotDel, AssessTotal, UsedTCred, ForClose, xORNO, xSRS, xTotal, RASSESBY, xSQUENCELocal, xSQUENCEPen, xSQUENCE, Area, QDUE, ADUE, QAMT, AAMT, RES1, RES2, RES3, RES4, RES5, IsRegBill, RES, PenYear, NotDelete, I_YEAR1, I_DISCOUNT1, I_YEAR2, I_DISCOUNT2, I_YEAR3, I_DISCOUNT3, I_YEAR4, I_DISCOUNT4, EDITEDBY, X1, X2, X3, X4, X5, BLGFSORT, Provision, Remarks, xMainAcctCode, xMainAcctDesc, xSubAcctCode, xSubAcctDesc, xMainAcctCodePen, xMainAcctDescPen, xSubAcctCodePen, xSubAcctDescPen, TRANSTYPE, ORIGDUEFEEADJ, XDEPT, FROMSP, FEEPEN, PRODUCT, BPLOTOIMS, BILLTYPE, NEW5}
            rowchy_1Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowchy_1Row)
            Return rowchy_1Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As chy_1DataTable = CType(MyBase.Clone,chy_1DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New chy_1DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAcctno = MyBase.Columns("Acctno")
            Me.columnForyear = MyBase.Columns("Foryear")
            Me.columnBus_Code = MyBase.Columns("Bus_Code")
            Me.columnDesc1 = MyBase.Columns("Desc1")
            Me.columnTaxbase = MyBase.Columns("Taxbase")
            Me.columnAnnualdue = MyBase.Columns("Annualdue")
            Me.columnTaxdue = MyBase.Columns("Taxdue")
            Me.columnPenDue = MyBase.Columns("PenDue")
            Me.columnTotdue = MyBase.Columns("Totdue")
            Me.columnAmt_Pd = MyBase.Columns("Amt_Pd")
            Me.columnAmt_PenPd = MyBase.Columns("Amt_PenPd")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnTaxcode = MyBase.Columns("Taxcode")
            Me.columnprevqtr = MyBase.Columns("prevqtr")
            Me.columnQtryr1 = MyBase.Columns("Qtryr1")
            Me.columnQtryr2 = MyBase.Columns("Qtryr2")
            Me.columnQtrPaid = MyBase.Columns("QtrPaid")
            Me.columnRemarks0 = MyBase.Columns("Remarks0")
            Me.columnRemarks1 = MyBase.Columns("Remarks1")
            Me.columnPres = MyBase.Columns("Pres")
            Me.columnPrev = MyBase.Columns("Prev")
            Me.columnStatcode = MyBase.Columns("Statcode")
            Me.columnASSESSNO = MyBase.Columns("ASSESSNO")
            Me.columnNewsw = MyBase.Columns("Newsw")
            Me.columnModeP = MyBase.Columns("ModeP")
            Me.columnGradFix = MyBase.Columns("GradFix")
            Me.columnCapital = MyBase.Columns("Capital")
            Me.columnXsort = MyBase.Columns("Xsort")
            Me.columnORNo = MyBase.Columns("ORNo")
            Me.columnDatePaid = MyBase.Columns("DatePaid")
            Me.columnBrgyCode = MyBase.Columns("BrgyCode")
            Me.columnLocaCode = MyBase.Columns("LocaCode")
            Me.columnL_DatePD = MyBase.Columns("L_DatePD")
            Me.columnMainAcctCode = MyBase.Columns("MainAcctCode")
            Me.columnMainAcctDesc = MyBase.Columns("MainAcctDesc")
            Me.columnSubAcctCode = MyBase.Columns("SubAcctCode")
            Me.columnSubAcctDesc = MyBase.Columns("SubAcctDesc")
            Me.columnMainAcctCodePen = MyBase.Columns("MainAcctCodePen")
            Me.columnMainAcctDescPen = MyBase.Columns("MainAcctDescPen")
            Me.columnSubAcctCodePen = MyBase.Columns("SubAcctCodePen")
            Me.columnSubAcctDescPen = MyBase.Columns("SubAcctDescPen")
            Me.columnAmt_Pd1 = MyBase.Columns("Amt_Pd1")
            Me.columnAmt_PenPd1 = MyBase.Columns("Amt_PenPd1")
            Me.columnNewAmt_Pd = MyBase.Columns("NewAmt_Pd")
            Me.columnNewAmt_PenPd = MyBase.Columns("NewAmt_PenPd")
            Me.columnNewTaxdue = MyBase.Columns("NewTaxdue")
            Me.columnNewPenDue = MyBase.Columns("NewPenDue")
            Me.columnFieldName = MyBase.Columns("FieldName")
            Me.columnPrevGMonth = MyBase.Columns("PrevGMonth")
            Me.columnGDateEsta = MyBase.Columns("GDateEsta")
            Me.columnGMonthPaid = MyBase.Columns("GMonthPaid")
            Me.columnDATE_ESTA = MyBase.Columns("DATE_ESTA")
            Me.columnYearPeriod = MyBase.Columns("YearPeriod")
            Me.columnNotEdit = MyBase.Columns("NotEdit")
            Me.columnNotDel = MyBase.Columns("NotDel")
            Me.columnAssessTotal = MyBase.Columns("AssessTotal")
            Me.columnUsedTCred = MyBase.Columns("UsedTCred")
            Me.columnForClose = MyBase.Columns("ForClose")
            Me.columnxORNO = MyBase.Columns("xORNO")
            Me.columnxSRS = MyBase.Columns("xSRS")
            Me.columnxTotal = MyBase.Columns("xTotal")
            Me.columnRASSESBY = MyBase.Columns("RASSESBY")
            Me.columnxSQUENCELocal = MyBase.Columns("xSQUENCELocal")
            Me.columnxSQUENCEPen = MyBase.Columns("xSQUENCEPen")
            Me.columnxSQUENCE = MyBase.Columns("xSQUENCE")
            Me.columnArea = MyBase.Columns("Area")
            Me.columnQDUE = MyBase.Columns("QDUE")
            Me.columnADUE = MyBase.Columns("ADUE")
            Me.columnQAMT = MyBase.Columns("QAMT")
            Me.columnAAMT = MyBase.Columns("AAMT")
            Me.columnRES1 = MyBase.Columns("RES1")
            Me.columnRES2 = MyBase.Columns("RES2")
            Me.columnRES3 = MyBase.Columns("RES3")
            Me.columnRES4 = MyBase.Columns("RES4")
            Me.columnRES5 = MyBase.Columns("RES5")
            Me.columnIsRegBill = MyBase.Columns("IsRegBill")
            Me.columnRES = MyBase.Columns("RES")
            Me.columnPenYear = MyBase.Columns("PenYear")
            Me.columnNotDelete = MyBase.Columns("NotDelete")
            Me.columnI_YEAR1 = MyBase.Columns("I_YEAR1")
            Me.columnI_DISCOUNT1 = MyBase.Columns("I_DISCOUNT1")
            Me.columnI_YEAR2 = MyBase.Columns("I_YEAR2")
            Me.columnI_DISCOUNT2 = MyBase.Columns("I_DISCOUNT2")
            Me.columnI_YEAR3 = MyBase.Columns("I_YEAR3")
            Me.columnI_DISCOUNT3 = MyBase.Columns("I_DISCOUNT3")
            Me.columnI_YEAR4 = MyBase.Columns("I_YEAR4")
            Me.columnI_DISCOUNT4 = MyBase.Columns("I_DISCOUNT4")
            Me.columnEDITEDBY = MyBase.Columns("EDITEDBY")
            Me.columnX1 = MyBase.Columns("X1")
            Me.columnX2 = MyBase.Columns("X2")
            Me.columnX3 = MyBase.Columns("X3")
            Me.columnX4 = MyBase.Columns("X4")
            Me.columnX5 = MyBase.Columns("X5")
            Me.columnBLGFSORT = MyBase.Columns("BLGFSORT")
            Me.columnProvision = MyBase.Columns("Provision")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnxMainAcctCode = MyBase.Columns("xMainAcctCode")
            Me.columnxMainAcctDesc = MyBase.Columns("xMainAcctDesc")
            Me.columnxSubAcctCode = MyBase.Columns("xSubAcctCode")
            Me.columnxSubAcctDesc = MyBase.Columns("xSubAcctDesc")
            Me.columnxMainAcctCodePen = MyBase.Columns("xMainAcctCodePen")
            Me.columnxMainAcctDescPen = MyBase.Columns("xMainAcctDescPen")
            Me.columnxSubAcctCodePen = MyBase.Columns("xSubAcctCodePen")
            Me.columnxSubAcctDescPen = MyBase.Columns("xSubAcctDescPen")
            Me.columnTRANSTYPE = MyBase.Columns("TRANSTYPE")
            Me.columnORIGDUEFEEADJ = MyBase.Columns("ORIGDUEFEEADJ")
            Me.columnXDEPT = MyBase.Columns("XDEPT")
            Me.columnFROMSP = MyBase.Columns("FROMSP")
            Me.columnFEEPEN = MyBase.Columns("FEEPEN")
            Me.columnPRODUCT = MyBase.Columns("PRODUCT")
            Me.columnBPLOTOIMS = MyBase.Columns("BPLOTOIMS")
            Me.columnBILLTYPE = MyBase.Columns("BILLTYPE")
            Me.columnNEW5 = MyBase.Columns("NEW5")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAcctno = New Global.System.Data.DataColumn("Acctno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctno)
            Me.columnForyear = New Global.System.Data.DataColumn("Foryear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForyear)
            Me.columnBus_Code = New Global.System.Data.DataColumn("Bus_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBus_Code)
            Me.columnDesc1 = New Global.System.Data.DataColumn("Desc1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesc1)
            Me.columnTaxbase = New Global.System.Data.DataColumn("Taxbase", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxbase)
            Me.columnAnnualdue = New Global.System.Data.DataColumn("Annualdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnnualdue)
            Me.columnTaxdue = New Global.System.Data.DataColumn("Taxdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxdue)
            Me.columnPenDue = New Global.System.Data.DataColumn("PenDue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPenDue)
            Me.columnTotdue = New Global.System.Data.DataColumn("Totdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotdue)
            Me.columnAmt_Pd = New Global.System.Data.DataColumn("Amt_Pd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_Pd)
            Me.columnAmt_PenPd = New Global.System.Data.DataColumn("Amt_PenPd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_PenPd)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnTaxcode = New Global.System.Data.DataColumn("Taxcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxcode)
            Me.columnprevqtr = New Global.System.Data.DataColumn("prevqtr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevqtr)
            Me.columnQtryr1 = New Global.System.Data.DataColumn("Qtryr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtryr1)
            Me.columnQtryr2 = New Global.System.Data.DataColumn("Qtryr2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtryr2)
            Me.columnQtrPaid = New Global.System.Data.DataColumn("QtrPaid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtrPaid)
            Me.columnRemarks0 = New Global.System.Data.DataColumn("Remarks0", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks0)
            Me.columnRemarks1 = New Global.System.Data.DataColumn("Remarks1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks1)
            Me.columnPres = New Global.System.Data.DataColumn("Pres", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPres)
            Me.columnPrev = New Global.System.Data.DataColumn("Prev", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrev)
            Me.columnStatcode = New Global.System.Data.DataColumn("Statcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatcode)
            Me.columnASSESSNO = New Global.System.Data.DataColumn("ASSESSNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSESSNO)
            Me.columnNewsw = New Global.System.Data.DataColumn("Newsw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewsw)
            Me.columnModeP = New Global.System.Data.DataColumn("ModeP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModeP)
            Me.columnGradFix = New Global.System.Data.DataColumn("GradFix", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGradFix)
            Me.columnCapital = New Global.System.Data.DataColumn("Capital", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCapital)
            Me.columnXsort = New Global.System.Data.DataColumn("Xsort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXsort)
            Me.columnORNo = New Global.System.Data.DataColumn("ORNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORNo)
            Me.columnDatePaid = New Global.System.Data.DataColumn("DatePaid", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatePaid)
            Me.columnBrgyCode = New Global.System.Data.DataColumn("BrgyCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrgyCode)
            Me.columnLocaCode = New Global.System.Data.DataColumn("LocaCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocaCode)
            Me.columnL_DatePD = New Global.System.Data.DataColumn("L_DatePD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnL_DatePD)
            Me.columnMainAcctCode = New Global.System.Data.DataColumn("MainAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctCode)
            Me.columnMainAcctDesc = New Global.System.Data.DataColumn("MainAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctDesc)
            Me.columnSubAcctCode = New Global.System.Data.DataColumn("SubAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctCode)
            Me.columnSubAcctDesc = New Global.System.Data.DataColumn("SubAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctDesc)
            Me.columnMainAcctCodePen = New Global.System.Data.DataColumn("MainAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctCodePen)
            Me.columnMainAcctDescPen = New Global.System.Data.DataColumn("MainAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctDescPen)
            Me.columnSubAcctCodePen = New Global.System.Data.DataColumn("SubAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctCodePen)
            Me.columnSubAcctDescPen = New Global.System.Data.DataColumn("SubAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctDescPen)
            Me.columnAmt_Pd1 = New Global.System.Data.DataColumn("Amt_Pd1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_Pd1)
            Me.columnAmt_PenPd1 = New Global.System.Data.DataColumn("Amt_PenPd1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_PenPd1)
            Me.columnNewAmt_Pd = New Global.System.Data.DataColumn("NewAmt_Pd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewAmt_Pd)
            Me.columnNewAmt_PenPd = New Global.System.Data.DataColumn("NewAmt_PenPd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewAmt_PenPd)
            Me.columnNewTaxdue = New Global.System.Data.DataColumn("NewTaxdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTaxdue)
            Me.columnNewPenDue = New Global.System.Data.DataColumn("NewPenDue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewPenDue)
            Me.columnFieldName = New Global.System.Data.DataColumn("FieldName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldName)
            Me.columnPrevGMonth = New Global.System.Data.DataColumn("PrevGMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevGMonth)
            Me.columnGDateEsta = New Global.System.Data.DataColumn("GDateEsta", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGDateEsta)
            Me.columnGMonthPaid = New Global.System.Data.DataColumn("GMonthPaid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGMonthPaid)
            Me.columnDATE_ESTA = New Global.System.Data.DataColumn("DATE_ESTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_ESTA)
            Me.columnYearPeriod = New Global.System.Data.DataColumn("YearPeriod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYearPeriod)
            Me.columnNotEdit = New Global.System.Data.DataColumn("NotEdit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotEdit)
            Me.columnNotDel = New Global.System.Data.DataColumn("NotDel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotDel)
            Me.columnAssessTotal = New Global.System.Data.DataColumn("AssessTotal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAssessTotal)
            Me.columnUsedTCred = New Global.System.Data.DataColumn("UsedTCred", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsedTCred)
            Me.columnForClose = New Global.System.Data.DataColumn("ForClose", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForClose)
            Me.columnxORNO = New Global.System.Data.DataColumn("xORNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxORNO)
            Me.columnxSRS = New Global.System.Data.DataColumn("xSRS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSRS)
            Me.columnxTotal = New Global.System.Data.DataColumn("xTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxTotal)
            Me.columnRASSESBY = New Global.System.Data.DataColumn("RASSESBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRASSESBY)
            Me.columnxSQUENCELocal = New Global.System.Data.DataColumn("xSQUENCELocal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSQUENCELocal)
            Me.columnxSQUENCEPen = New Global.System.Data.DataColumn("xSQUENCEPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSQUENCEPen)
            Me.columnxSQUENCE = New Global.System.Data.DataColumn("xSQUENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSQUENCE)
            Me.columnArea = New Global.System.Data.DataColumn("Area", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea)
            Me.columnQDUE = New Global.System.Data.DataColumn("QDUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQDUE)
            Me.columnADUE = New Global.System.Data.DataColumn("ADUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADUE)
            Me.columnQAMT = New Global.System.Data.DataColumn("QAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQAMT)
            Me.columnAAMT = New Global.System.Data.DataColumn("AAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAAMT)
            Me.columnRES1 = New Global.System.Data.DataColumn("RES1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES1)
            Me.columnRES2 = New Global.System.Data.DataColumn("RES2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES2)
            Me.columnRES3 = New Global.System.Data.DataColumn("RES3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES3)
            Me.columnRES4 = New Global.System.Data.DataColumn("RES4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES4)
            Me.columnRES5 = New Global.System.Data.DataColumn("RES5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES5)
            Me.columnIsRegBill = New Global.System.Data.DataColumn("IsRegBill", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsRegBill)
            Me.columnRES = New Global.System.Data.DataColumn("RES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES)
            Me.columnPenYear = New Global.System.Data.DataColumn("PenYear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPenYear)
            Me.columnNotDelete = New Global.System.Data.DataColumn("NotDelete", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotDelete)
            Me.columnI_YEAR1 = New Global.System.Data.DataColumn("I_YEAR1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR1)
            Me.columnI_DISCOUNT1 = New Global.System.Data.DataColumn("I_DISCOUNT1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT1)
            Me.columnI_YEAR2 = New Global.System.Data.DataColumn("I_YEAR2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR2)
            Me.columnI_DISCOUNT2 = New Global.System.Data.DataColumn("I_DISCOUNT2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT2)
            Me.columnI_YEAR3 = New Global.System.Data.DataColumn("I_YEAR3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR3)
            Me.columnI_DISCOUNT3 = New Global.System.Data.DataColumn("I_DISCOUNT3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT3)
            Me.columnI_YEAR4 = New Global.System.Data.DataColumn("I_YEAR4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR4)
            Me.columnI_DISCOUNT4 = New Global.System.Data.DataColumn("I_DISCOUNT4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT4)
            Me.columnEDITEDBY = New Global.System.Data.DataColumn("EDITEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITEDBY)
            Me.columnX1 = New Global.System.Data.DataColumn("X1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX1)
            Me.columnX2 = New Global.System.Data.DataColumn("X2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX2)
            Me.columnX3 = New Global.System.Data.DataColumn("X3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX3)
            Me.columnX4 = New Global.System.Data.DataColumn("X4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX4)
            Me.columnX5 = New Global.System.Data.DataColumn("X5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX5)
            Me.columnBLGFSORT = New Global.System.Data.DataColumn("BLGFSORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBLGFSORT)
            Me.columnProvision = New Global.System.Data.DataColumn("Provision", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvision)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnxMainAcctCode = New Global.System.Data.DataColumn("xMainAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctCode)
            Me.columnxMainAcctDesc = New Global.System.Data.DataColumn("xMainAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctDesc)
            Me.columnxSubAcctCode = New Global.System.Data.DataColumn("xSubAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctCode)
            Me.columnxSubAcctDesc = New Global.System.Data.DataColumn("xSubAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctDesc)
            Me.columnxMainAcctCodePen = New Global.System.Data.DataColumn("xMainAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctCodePen)
            Me.columnxMainAcctDescPen = New Global.System.Data.DataColumn("xMainAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctDescPen)
            Me.columnxSubAcctCodePen = New Global.System.Data.DataColumn("xSubAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctCodePen)
            Me.columnxSubAcctDescPen = New Global.System.Data.DataColumn("xSubAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctDescPen)
            Me.columnTRANSTYPE = New Global.System.Data.DataColumn("TRANSTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSTYPE)
            Me.columnORIGDUEFEEADJ = New Global.System.Data.DataColumn("ORIGDUEFEEADJ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGDUEFEEADJ)
            Me.columnXDEPT = New Global.System.Data.DataColumn("XDEPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXDEPT)
            Me.columnFROMSP = New Global.System.Data.DataColumn("FROMSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFROMSP)
            Me.columnFEEPEN = New Global.System.Data.DataColumn("FEEPEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFEEPEN)
            Me.columnPRODUCT = New Global.System.Data.DataColumn("PRODUCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCT)
            Me.columnBPLOTOIMS = New Global.System.Data.DataColumn("BPLOTOIMS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBPLOTOIMS)
            Me.columnBILLTYPE = New Global.System.Data.DataColumn("BILLTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBILLTYPE)
            Me.columnNEW5 = New Global.System.Data.DataColumn("NEW5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEW5)
            Me.columnAcctno.MaxLength = 25
            Me.columnForyear.MaxLength = 10
            Me.columnBus_Code.MaxLength = 10
            Me.columnDesc1.MaxLength = 255
            Me.columnTaxcode.MaxLength = 10
            Me.columnprevqtr.MaxLength = 20
            Me.columnQtryr1.MaxLength = 20
            Me.columnQtryr2.MaxLength = 20
            Me.columnQtrPaid.MaxLength = 10
            Me.columnRemarks0.MaxLength = 50
            Me.columnRemarks1.MaxLength = 50
            Me.columnPres.MaxLength = 20
            Me.columnPrev.MaxLength = 20
            Me.columnStatcode.MaxLength = 5
            Me.columnASSESSNO.MaxLength = 50
            Me.columnNewsw.MaxLength = 5
            Me.columnModeP.MaxLength = 5
            Me.columnGradFix.MaxLength = 10
            Me.columnXsort.MaxLength = 20
            Me.columnORNo.MaxLength = 20
            Me.columnBrgyCode.MaxLength = 5
            Me.columnLocaCode.MaxLength = 5
            Me.columnMainAcctCode.MaxLength = 50
            Me.columnMainAcctDesc.MaxLength = 255
            Me.columnSubAcctCode.MaxLength = 50
            Me.columnSubAcctDesc.MaxLength = 255
            Me.columnMainAcctCodePen.MaxLength = 50
            Me.columnMainAcctDescPen.MaxLength = 255
            Me.columnSubAcctCodePen.MaxLength = 50
            Me.columnSubAcctDescPen.MaxLength = 255
            Me.columnFieldName.MaxLength = 50
            Me.columnPrevGMonth.MaxLength = 50
            Me.columnGMonthPaid.MaxLength = 50
            Me.columnYearPeriod.MaxLength = 50
            Me.columnNotEdit.MaxLength = 50
            Me.columnNotDel.MaxLength = 50
            Me.columnAssessTotal.MaxLength = 50
            Me.columnForClose.MaxLength = 255
            Me.columnxORNO.MaxLength = 20
            Me.columnxSRS.MaxLength = 20
            Me.columnRASSESBY.MaxLength = 50
            Me.columnxSQUENCELocal.MaxLength = 5
            Me.columnxSQUENCEPen.MaxLength = 5
            Me.columnxSQUENCE.MaxLength = 5
            Me.columnRES5.MaxLength = 10
            Me.columnIsRegBill.MaxLength = 10
            Me.columnRES.MaxLength = 50
            Me.columnPenYear.MaxLength = 10
            Me.columnNotDelete.MaxLength = 50
            Me.columnI_YEAR1.MaxLength = 50
            Me.columnI_YEAR2.MaxLength = 50
            Me.columnI_YEAR3.MaxLength = 50
            Me.columnI_YEAR4.MaxLength = 50
            Me.columnEDITEDBY.MaxLength = 50
            Me.columnX1.MaxLength = 50
            Me.columnX2.MaxLength = 50
            Me.columnX3.MaxLength = 50
            Me.columnX4.MaxLength = 50
            Me.columnX5.MaxLength = 50
            Me.columnBLGFSORT.MaxLength = 50
            Me.columnProvision.MaxLength = 50
            Me.columnRemarks.MaxLength = 250
            Me.columnxMainAcctCode.MaxLength = 50
            Me.columnxMainAcctDesc.MaxLength = 255
            Me.columnxSubAcctCode.MaxLength = 50
            Me.columnxSubAcctDesc.MaxLength = 255
            Me.columnxMainAcctCodePen.MaxLength = 50
            Me.columnxMainAcctDescPen.MaxLength = 255
            Me.columnxSubAcctCodePen.MaxLength = 50
            Me.columnxSubAcctDescPen.MaxLength = 255
            Me.columnTRANSTYPE.MaxLength = 50
            Me.columnXDEPT.MaxLength = 50
            Me.columnFROMSP.MaxLength = 5
            Me.columnFEEPEN.MaxLength = 5
            Me.columnPRODUCT.MaxLength = 2000
            Me.columnBPLOTOIMS.MaxLength = 10
            Me.columnBILLTYPE.MaxLength = 50
            Me.columnNEW5.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newchy_1Row() As chy_1Row
            Return CType(Me.NewRow,chy_1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New chy_1Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(chy_1Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.chy_1RowChangedEvent) Is Nothing) Then
                RaiseEvent chy_1RowChanged(Me, New chy_1RowChangeEvent(CType(e.Row,chy_1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.chy_1RowChangingEvent) Is Nothing) Then
                RaiseEvent chy_1RowChanging(Me, New chy_1RowChangeEvent(CType(e.Row,chy_1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.chy_1RowDeletedEvent) Is Nothing) Then
                RaiseEvent chy_1RowDeleted(Me, New chy_1RowChangeEvent(CType(e.Row,chy_1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.chy_1RowDeletingEvent) Is Nothing) Then
                RaiseEvent chy_1RowDeleting(Me, New chy_1RowChangeEvent(CType(e.Row,chy_1Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removechy_1Row(ByVal row As chy_1Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "chy_1DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class chy_2DataTable
        Inherits Global.System.Data.TypedTableBase(Of chy_2Row)
        
        Private columnAcctno As Global.System.Data.DataColumn
        
        Private columnForyear As Global.System.Data.DataColumn
        
        Private columnBus_Code As Global.System.Data.DataColumn
        
        Private columnDesc1 As Global.System.Data.DataColumn
        
        Private columnTaxbase As Global.System.Data.DataColumn
        
        Private columnAnnualdue As Global.System.Data.DataColumn
        
        Private columnTaxdue As Global.System.Data.DataColumn
        
        Private columnPenDue As Global.System.Data.DataColumn
        
        Private columnTotdue As Global.System.Data.DataColumn
        
        Private columnAmt_Pd As Global.System.Data.DataColumn
        
        Private columnAmt_PenPd As Global.System.Data.DataColumn
        
        Private columnDiscount As Global.System.Data.DataColumn
        
        Private columnTaxcode As Global.System.Data.DataColumn
        
        Private columnprevqtr As Global.System.Data.DataColumn
        
        Private columnQtryr1 As Global.System.Data.DataColumn
        
        Private columnQtryr2 As Global.System.Data.DataColumn
        
        Private columnQtrPaid As Global.System.Data.DataColumn
        
        Private columnRemarks0 As Global.System.Data.DataColumn
        
        Private columnRemarks1 As Global.System.Data.DataColumn
        
        Private columnPres As Global.System.Data.DataColumn
        
        Private columnPrev As Global.System.Data.DataColumn
        
        Private columnStatcode As Global.System.Data.DataColumn
        
        Private columnASSESSNO As Global.System.Data.DataColumn
        
        Private columnNewsw As Global.System.Data.DataColumn
        
        Private columnModeP As Global.System.Data.DataColumn
        
        Private columnGradFix As Global.System.Data.DataColumn
        
        Private columnCapital As Global.System.Data.DataColumn
        
        Private columnXsort As Global.System.Data.DataColumn
        
        Private columnORNo As Global.System.Data.DataColumn
        
        Private columnDatePaid As Global.System.Data.DataColumn
        
        Private columnBrgyCode As Global.System.Data.DataColumn
        
        Private columnLocaCode As Global.System.Data.DataColumn
        
        Private columnL_DatePD As Global.System.Data.DataColumn
        
        Private columnMainAcctCode As Global.System.Data.DataColumn
        
        Private columnMainAcctDesc As Global.System.Data.DataColumn
        
        Private columnSubAcctCode As Global.System.Data.DataColumn
        
        Private columnSubAcctDesc As Global.System.Data.DataColumn
        
        Private columnMainAcctCodePen As Global.System.Data.DataColumn
        
        Private columnMainAcctDescPen As Global.System.Data.DataColumn
        
        Private columnSubAcctCodePen As Global.System.Data.DataColumn
        
        Private columnSubAcctDescPen As Global.System.Data.DataColumn
        
        Private columnAmt_Pd1 As Global.System.Data.DataColumn
        
        Private columnAmt_PenPd1 As Global.System.Data.DataColumn
        
        Private columnNewAmt_Pd As Global.System.Data.DataColumn
        
        Private columnNewAmt_PenPd As Global.System.Data.DataColumn
        
        Private columnNewTaxdue As Global.System.Data.DataColumn
        
        Private columnNewPenDue As Global.System.Data.DataColumn
        
        Private columnFieldName As Global.System.Data.DataColumn
        
        Private columnPrevGMonth As Global.System.Data.DataColumn
        
        Private columnGDateEsta As Global.System.Data.DataColumn
        
        Private columnGMonthPaid As Global.System.Data.DataColumn
        
        Private columnDATE_ESTA As Global.System.Data.DataColumn
        
        Private columnYearPeriod As Global.System.Data.DataColumn
        
        Private columnNotEdit As Global.System.Data.DataColumn
        
        Private columnNotDel As Global.System.Data.DataColumn
        
        Private columnAssessTotal As Global.System.Data.DataColumn
        
        Private columnUsedTCred As Global.System.Data.DataColumn
        
        Private columnForClose As Global.System.Data.DataColumn
        
        Private columnxORNO As Global.System.Data.DataColumn
        
        Private columnxSRS As Global.System.Data.DataColumn
        
        Private columnxTotal As Global.System.Data.DataColumn
        
        Private columnRASSESBY As Global.System.Data.DataColumn
        
        Private columnxSQUENCELocal As Global.System.Data.DataColumn
        
        Private columnxSQUENCEPen As Global.System.Data.DataColumn
        
        Private columnxSQUENCE As Global.System.Data.DataColumn
        
        Private columnArea As Global.System.Data.DataColumn
        
        Private columnQDUE As Global.System.Data.DataColumn
        
        Private columnADUE As Global.System.Data.DataColumn
        
        Private columnQAMT As Global.System.Data.DataColumn
        
        Private columnAAMT As Global.System.Data.DataColumn
        
        Private columnRES1 As Global.System.Data.DataColumn
        
        Private columnRES2 As Global.System.Data.DataColumn
        
        Private columnRES3 As Global.System.Data.DataColumn
        
        Private columnRES4 As Global.System.Data.DataColumn
        
        Private columnRES5 As Global.System.Data.DataColumn
        
        Private columnIsRegBill As Global.System.Data.DataColumn
        
        Private columnRES As Global.System.Data.DataColumn
        
        Private columnPenYear As Global.System.Data.DataColumn
        
        Private columnNotDelete As Global.System.Data.DataColumn
        
        Private columnI_YEAR1 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT1 As Global.System.Data.DataColumn
        
        Private columnI_YEAR2 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT2 As Global.System.Data.DataColumn
        
        Private columnI_YEAR3 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT3 As Global.System.Data.DataColumn
        
        Private columnI_YEAR4 As Global.System.Data.DataColumn
        
        Private columnI_DISCOUNT4 As Global.System.Data.DataColumn
        
        Private columnEDITEDBY As Global.System.Data.DataColumn
        
        Private columnX1 As Global.System.Data.DataColumn
        
        Private columnX2 As Global.System.Data.DataColumn
        
        Private columnX3 As Global.System.Data.DataColumn
        
        Private columnX4 As Global.System.Data.DataColumn
        
        Private columnX5 As Global.System.Data.DataColumn
        
        Private columnBLGFSORT As Global.System.Data.DataColumn
        
        Private columnProvision As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnxMainAcctCode As Global.System.Data.DataColumn
        
        Private columnxMainAcctDesc As Global.System.Data.DataColumn
        
        Private columnxSubAcctCode As Global.System.Data.DataColumn
        
        Private columnxSubAcctDesc As Global.System.Data.DataColumn
        
        Private columnxMainAcctCodePen As Global.System.Data.DataColumn
        
        Private columnxMainAcctDescPen As Global.System.Data.DataColumn
        
        Private columnxSubAcctCodePen As Global.System.Data.DataColumn
        
        Private columnxSubAcctDescPen As Global.System.Data.DataColumn
        
        Private columnTRANSTYPE As Global.System.Data.DataColumn
        
        Private columnORIGDUEFEEADJ As Global.System.Data.DataColumn
        
        Private columnXDEPT As Global.System.Data.DataColumn
        
        Private columnFROMSP As Global.System.Data.DataColumn
        
        Private columnFEEPEN As Global.System.Data.DataColumn
        
        Private columnPRODUCT As Global.System.Data.DataColumn
        
        Private columnBPLOTOIMS As Global.System.Data.DataColumn
        
        Private columnBILLTYPE As Global.System.Data.DataColumn
        
        Private columnNEW5 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "chy_2"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ForyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bus_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBus_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Desc1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesc1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxbaseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxbase
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AnnualdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnnualdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PenDueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPenDue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_PdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_Pd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_PenPdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_PenPd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiscountColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiscount
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TaxcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTaxcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property prevqtrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprevqtr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Qtryr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtryr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Qtryr2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtryr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QtrPaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQtrPaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Remarks0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Remarks1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PresColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPres
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrevColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrev
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property StatcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ASSESSNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSESSNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewswColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewsw
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ModePColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModeP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GradFixColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGradFix
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CapitalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCapital
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XsortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXsort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DatePaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDatePaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BrgyCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBrgyCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LocaCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLocaCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property L_DatePDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnL_DatePD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MainAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMainAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_Pd1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_Pd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Amt_PenPd1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnAmt_PenPd1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewAmt_PdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewAmt_Pd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewAmt_PenPdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewAmt_PenPd
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewTaxdueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewTaxdue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NewPenDueColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewPenDue
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FieldNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFieldName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PrevGMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrevGMonth
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GDateEstaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGDateEsta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GMonthPaidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGMonthPaid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DATE_ESTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDATE_ESTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property YearPeriodColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnYearPeriod
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotEditColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotEdit
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotDelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotDel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AssessTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAssessTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UsedTCredColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUsedTCred
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ForCloseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForClose
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xORNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxORNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSRSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSRS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xTotalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxTotal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RASSESBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRASSESBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSQUENCELocalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSQUENCELocal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSQUENCEPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSQUENCEPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSQUENCEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSQUENCE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AreaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnArea
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QDUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQDUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ADUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AAMTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAAMT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsRegBillColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsRegBill
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PenYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPenYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotDeleteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotDelete
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_YEAR4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_YEAR4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property I_DISCOUNT4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnI_DISCOUNT4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EDITEDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEDITEDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property X5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnX5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BLGFSORTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBLGFSORT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProvisionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProvision
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xMainAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxMainAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctCodePenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctCodePen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xSubAcctDescPenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxSubAcctDescPen
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORIGDUEFEEADJColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORIGDUEFEEADJ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property XDEPTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXDEPT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FROMSPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFROMSP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FEEPENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFEEPEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BPLOTOIMSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBPLOTOIMS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BILLTYPEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBILLTYPE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NEW5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEW5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As chy_2Row
            Get
                Return CType(Me.Rows(index),chy_2Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chy_2RowChanging As chy_2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chy_2RowChanged As chy_2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chy_2RowDeleting As chy_2RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chy_2RowDeleted As chy_2RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub Addchy_2Row(ByVal row As chy_2Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function Addchy_2Row( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal Desc1 As String,  _
                    ByVal Taxbase As Decimal,  _
                    ByVal Annualdue As Decimal,  _
                    ByVal Taxdue As Decimal,  _
                    ByVal PenDue As Decimal,  _
                    ByVal Totdue As Decimal,  _
                    ByVal Amt_Pd As Decimal,  _
                    ByVal Amt_PenPd As Decimal,  _
                    ByVal Discount As Decimal,  _
                    ByVal Taxcode As String,  _
                    ByVal prevqtr As String,  _
                    ByVal Qtryr1 As String,  _
                    ByVal Qtryr2 As String,  _
                    ByVal QtrPaid As String,  _
                    ByVal Remarks0 As String,  _
                    ByVal Remarks1 As String,  _
                    ByVal Pres As String,  _
                    ByVal Prev As String,  _
                    ByVal Statcode As String,  _
                    ByVal ASSESSNO As String,  _
                    ByVal Newsw As String,  _
                    ByVal ModeP As String,  _
                    ByVal GradFix As String,  _
                    ByVal Capital As Decimal,  _
                    ByVal Xsort As String,  _
                    ByVal ORNo As String,  _
                    ByVal DatePaid As Date,  _
                    ByVal BrgyCode As String,  _
                    ByVal LocaCode As String,  _
                    ByVal L_DatePD As Date,  _
                    ByVal MainAcctCode As String,  _
                    ByVal MainAcctDesc As String,  _
                    ByVal SubAcctCode As String,  _
                    ByVal SubAcctDesc As String,  _
                    ByVal MainAcctCodePen As String,  _
                    ByVal MainAcctDescPen As String,  _
                    ByVal SubAcctCodePen As String,  _
                    ByVal SubAcctDescPen As String,  _
                    ByVal Amt_Pd1 As Decimal,  _
                    ByVal Amt_PenPd1 As Decimal,  _
                    ByVal NewAmt_Pd As Decimal,  _
                    ByVal NewAmt_PenPd As Decimal,  _
                    ByVal NewTaxdue As Decimal,  _
                    ByVal NewPenDue As Decimal,  _
                    ByVal FieldName As String,  _
                    ByVal PrevGMonth As String,  _
                    ByVal GDateEsta As Date,  _
                    ByVal GMonthPaid As String,  _
                    ByVal DATE_ESTA As Date,  _
                    ByVal YearPeriod As String,  _
                    ByVal NotEdit As String,  _
                    ByVal NotDel As String,  _
                    ByVal AssessTotal As String,  _
                    ByVal UsedTCred As Short,  _
                    ByVal ForClose As String,  _
                    ByVal xORNO As String,  _
                    ByVal xSRS As String,  _
                    ByVal xTotal As Decimal,  _
                    ByVal RASSESBY As String,  _
                    ByVal xSQUENCELocal As String,  _
                    ByVal xSQUENCEPen As String,  _
                    ByVal xSQUENCE As String,  _
                    ByVal Area As Double,  _
                    ByVal QDUE As Decimal,  _
                    ByVal ADUE As Decimal,  _
                    ByVal QAMT As Decimal,  _
                    ByVal AAMT As Decimal,  _
                    ByVal RES1 As Decimal,  _
                    ByVal RES2 As Decimal,  _
                    ByVal RES3 As Decimal,  _
                    ByVal RES4 As Decimal,  _
                    ByVal RES5 As String,  _
                    ByVal IsRegBill As String,  _
                    ByVal RES As String,  _
                    ByVal PenYear As String,  _
                    ByVal NotDelete As String,  _
                    ByVal I_YEAR1 As String,  _
                    ByVal I_DISCOUNT1 As Decimal,  _
                    ByVal I_YEAR2 As String,  _
                    ByVal I_DISCOUNT2 As Decimal,  _
                    ByVal I_YEAR3 As String,  _
                    ByVal I_DISCOUNT3 As Decimal,  _
                    ByVal I_YEAR4 As String,  _
                    ByVal I_DISCOUNT4 As Decimal,  _
                    ByVal EDITEDBY As String,  _
                    ByVal X1 As String,  _
                    ByVal X2 As String,  _
                    ByVal X3 As String,  _
                    ByVal X4 As String,  _
                    ByVal X5 As String,  _
                    ByVal BLGFSORT As String,  _
                    ByVal Provision As String,  _
                    ByVal Remarks As String,  _
                    ByVal xMainAcctCode As String,  _
                    ByVal xMainAcctDesc As String,  _
                    ByVal xSubAcctCode As String,  _
                    ByVal xSubAcctDesc As String,  _
                    ByVal xMainAcctCodePen As String,  _
                    ByVal xMainAcctDescPen As String,  _
                    ByVal xSubAcctCodePen As String,  _
                    ByVal xSubAcctDescPen As String,  _
                    ByVal TRANSTYPE As String,  _
                    ByVal ORIGDUEFEEADJ As Decimal,  _
                    ByVal XDEPT As String,  _
                    ByVal FROMSP As String,  _
                    ByVal FEEPEN As String,  _
                    ByVal PRODUCT As String,  _
                    ByVal BPLOTOIMS As String,  _
                    ByVal BILLTYPE As String,  _
                    ByVal NEW5 As String) As chy_2Row
            Dim rowchy_2Row As chy_2Row = CType(Me.NewRow,chy_2Row)
            Dim columnValuesArray() As Object = New Object() {Acctno, Foryear, Bus_Code, Desc1, Taxbase, Annualdue, Taxdue, PenDue, Totdue, Amt_Pd, Amt_PenPd, Discount, Taxcode, prevqtr, Qtryr1, Qtryr2, QtrPaid, Remarks0, Remarks1, Pres, Prev, Statcode, ASSESSNO, Newsw, ModeP, GradFix, Capital, Xsort, ORNo, DatePaid, BrgyCode, LocaCode, L_DatePD, MainAcctCode, MainAcctDesc, SubAcctCode, SubAcctDesc, MainAcctCodePen, MainAcctDescPen, SubAcctCodePen, SubAcctDescPen, Amt_Pd1, Amt_PenPd1, NewAmt_Pd, NewAmt_PenPd, NewTaxdue, NewPenDue, FieldName, PrevGMonth, GDateEsta, GMonthPaid, DATE_ESTA, YearPeriod, NotEdit, NotDel, AssessTotal, UsedTCred, ForClose, xORNO, xSRS, xTotal, RASSESBY, xSQUENCELocal, xSQUENCEPen, xSQUENCE, Area, QDUE, ADUE, QAMT, AAMT, RES1, RES2, RES3, RES4, RES5, IsRegBill, RES, PenYear, NotDelete, I_YEAR1, I_DISCOUNT1, I_YEAR2, I_DISCOUNT2, I_YEAR3, I_DISCOUNT3, I_YEAR4, I_DISCOUNT4, EDITEDBY, X1, X2, X3, X4, X5, BLGFSORT, Provision, Remarks, xMainAcctCode, xMainAcctDesc, xSubAcctCode, xSubAcctDesc, xMainAcctCodePen, xMainAcctDescPen, xSubAcctCodePen, xSubAcctDescPen, TRANSTYPE, ORIGDUEFEEADJ, XDEPT, FROMSP, FEEPEN, PRODUCT, BPLOTOIMS, BILLTYPE, NEW5}
            rowchy_2Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowchy_2Row)
            Return rowchy_2Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As chy_2DataTable = CType(MyBase.Clone,chy_2DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New chy_2DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAcctno = MyBase.Columns("Acctno")
            Me.columnForyear = MyBase.Columns("Foryear")
            Me.columnBus_Code = MyBase.Columns("Bus_Code")
            Me.columnDesc1 = MyBase.Columns("Desc1")
            Me.columnTaxbase = MyBase.Columns("Taxbase")
            Me.columnAnnualdue = MyBase.Columns("Annualdue")
            Me.columnTaxdue = MyBase.Columns("Taxdue")
            Me.columnPenDue = MyBase.Columns("PenDue")
            Me.columnTotdue = MyBase.Columns("Totdue")
            Me.columnAmt_Pd = MyBase.Columns("Amt_Pd")
            Me.columnAmt_PenPd = MyBase.Columns("Amt_PenPd")
            Me.columnDiscount = MyBase.Columns("Discount")
            Me.columnTaxcode = MyBase.Columns("Taxcode")
            Me.columnprevqtr = MyBase.Columns("prevqtr")
            Me.columnQtryr1 = MyBase.Columns("Qtryr1")
            Me.columnQtryr2 = MyBase.Columns("Qtryr2")
            Me.columnQtrPaid = MyBase.Columns("QtrPaid")
            Me.columnRemarks0 = MyBase.Columns("Remarks0")
            Me.columnRemarks1 = MyBase.Columns("Remarks1")
            Me.columnPres = MyBase.Columns("Pres")
            Me.columnPrev = MyBase.Columns("Prev")
            Me.columnStatcode = MyBase.Columns("Statcode")
            Me.columnASSESSNO = MyBase.Columns("ASSESSNO")
            Me.columnNewsw = MyBase.Columns("Newsw")
            Me.columnModeP = MyBase.Columns("ModeP")
            Me.columnGradFix = MyBase.Columns("GradFix")
            Me.columnCapital = MyBase.Columns("Capital")
            Me.columnXsort = MyBase.Columns("Xsort")
            Me.columnORNo = MyBase.Columns("ORNo")
            Me.columnDatePaid = MyBase.Columns("DatePaid")
            Me.columnBrgyCode = MyBase.Columns("BrgyCode")
            Me.columnLocaCode = MyBase.Columns("LocaCode")
            Me.columnL_DatePD = MyBase.Columns("L_DatePD")
            Me.columnMainAcctCode = MyBase.Columns("MainAcctCode")
            Me.columnMainAcctDesc = MyBase.Columns("MainAcctDesc")
            Me.columnSubAcctCode = MyBase.Columns("SubAcctCode")
            Me.columnSubAcctDesc = MyBase.Columns("SubAcctDesc")
            Me.columnMainAcctCodePen = MyBase.Columns("MainAcctCodePen")
            Me.columnMainAcctDescPen = MyBase.Columns("MainAcctDescPen")
            Me.columnSubAcctCodePen = MyBase.Columns("SubAcctCodePen")
            Me.columnSubAcctDescPen = MyBase.Columns("SubAcctDescPen")
            Me.columnAmt_Pd1 = MyBase.Columns("Amt_Pd1")
            Me.columnAmt_PenPd1 = MyBase.Columns("Amt_PenPd1")
            Me.columnNewAmt_Pd = MyBase.Columns("NewAmt_Pd")
            Me.columnNewAmt_PenPd = MyBase.Columns("NewAmt_PenPd")
            Me.columnNewTaxdue = MyBase.Columns("NewTaxdue")
            Me.columnNewPenDue = MyBase.Columns("NewPenDue")
            Me.columnFieldName = MyBase.Columns("FieldName")
            Me.columnPrevGMonth = MyBase.Columns("PrevGMonth")
            Me.columnGDateEsta = MyBase.Columns("GDateEsta")
            Me.columnGMonthPaid = MyBase.Columns("GMonthPaid")
            Me.columnDATE_ESTA = MyBase.Columns("DATE_ESTA")
            Me.columnYearPeriod = MyBase.Columns("YearPeriod")
            Me.columnNotEdit = MyBase.Columns("NotEdit")
            Me.columnNotDel = MyBase.Columns("NotDel")
            Me.columnAssessTotal = MyBase.Columns("AssessTotal")
            Me.columnUsedTCred = MyBase.Columns("UsedTCred")
            Me.columnForClose = MyBase.Columns("ForClose")
            Me.columnxORNO = MyBase.Columns("xORNO")
            Me.columnxSRS = MyBase.Columns("xSRS")
            Me.columnxTotal = MyBase.Columns("xTotal")
            Me.columnRASSESBY = MyBase.Columns("RASSESBY")
            Me.columnxSQUENCELocal = MyBase.Columns("xSQUENCELocal")
            Me.columnxSQUENCEPen = MyBase.Columns("xSQUENCEPen")
            Me.columnxSQUENCE = MyBase.Columns("xSQUENCE")
            Me.columnArea = MyBase.Columns("Area")
            Me.columnQDUE = MyBase.Columns("QDUE")
            Me.columnADUE = MyBase.Columns("ADUE")
            Me.columnQAMT = MyBase.Columns("QAMT")
            Me.columnAAMT = MyBase.Columns("AAMT")
            Me.columnRES1 = MyBase.Columns("RES1")
            Me.columnRES2 = MyBase.Columns("RES2")
            Me.columnRES3 = MyBase.Columns("RES3")
            Me.columnRES4 = MyBase.Columns("RES4")
            Me.columnRES5 = MyBase.Columns("RES5")
            Me.columnIsRegBill = MyBase.Columns("IsRegBill")
            Me.columnRES = MyBase.Columns("RES")
            Me.columnPenYear = MyBase.Columns("PenYear")
            Me.columnNotDelete = MyBase.Columns("NotDelete")
            Me.columnI_YEAR1 = MyBase.Columns("I_YEAR1")
            Me.columnI_DISCOUNT1 = MyBase.Columns("I_DISCOUNT1")
            Me.columnI_YEAR2 = MyBase.Columns("I_YEAR2")
            Me.columnI_DISCOUNT2 = MyBase.Columns("I_DISCOUNT2")
            Me.columnI_YEAR3 = MyBase.Columns("I_YEAR3")
            Me.columnI_DISCOUNT3 = MyBase.Columns("I_DISCOUNT3")
            Me.columnI_YEAR4 = MyBase.Columns("I_YEAR4")
            Me.columnI_DISCOUNT4 = MyBase.Columns("I_DISCOUNT4")
            Me.columnEDITEDBY = MyBase.Columns("EDITEDBY")
            Me.columnX1 = MyBase.Columns("X1")
            Me.columnX2 = MyBase.Columns("X2")
            Me.columnX3 = MyBase.Columns("X3")
            Me.columnX4 = MyBase.Columns("X4")
            Me.columnX5 = MyBase.Columns("X5")
            Me.columnBLGFSORT = MyBase.Columns("BLGFSORT")
            Me.columnProvision = MyBase.Columns("Provision")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnxMainAcctCode = MyBase.Columns("xMainAcctCode")
            Me.columnxMainAcctDesc = MyBase.Columns("xMainAcctDesc")
            Me.columnxSubAcctCode = MyBase.Columns("xSubAcctCode")
            Me.columnxSubAcctDesc = MyBase.Columns("xSubAcctDesc")
            Me.columnxMainAcctCodePen = MyBase.Columns("xMainAcctCodePen")
            Me.columnxMainAcctDescPen = MyBase.Columns("xMainAcctDescPen")
            Me.columnxSubAcctCodePen = MyBase.Columns("xSubAcctCodePen")
            Me.columnxSubAcctDescPen = MyBase.Columns("xSubAcctDescPen")
            Me.columnTRANSTYPE = MyBase.Columns("TRANSTYPE")
            Me.columnORIGDUEFEEADJ = MyBase.Columns("ORIGDUEFEEADJ")
            Me.columnXDEPT = MyBase.Columns("XDEPT")
            Me.columnFROMSP = MyBase.Columns("FROMSP")
            Me.columnFEEPEN = MyBase.Columns("FEEPEN")
            Me.columnPRODUCT = MyBase.Columns("PRODUCT")
            Me.columnBPLOTOIMS = MyBase.Columns("BPLOTOIMS")
            Me.columnBILLTYPE = MyBase.Columns("BILLTYPE")
            Me.columnNEW5 = MyBase.Columns("NEW5")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAcctno = New Global.System.Data.DataColumn("Acctno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctno)
            Me.columnForyear = New Global.System.Data.DataColumn("Foryear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForyear)
            Me.columnBus_Code = New Global.System.Data.DataColumn("Bus_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBus_Code)
            Me.columnDesc1 = New Global.System.Data.DataColumn("Desc1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesc1)
            Me.columnTaxbase = New Global.System.Data.DataColumn("Taxbase", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxbase)
            Me.columnAnnualdue = New Global.System.Data.DataColumn("Annualdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnnualdue)
            Me.columnTaxdue = New Global.System.Data.DataColumn("Taxdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxdue)
            Me.columnPenDue = New Global.System.Data.DataColumn("PenDue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPenDue)
            Me.columnTotdue = New Global.System.Data.DataColumn("Totdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotdue)
            Me.columnAmt_Pd = New Global.System.Data.DataColumn("Amt_Pd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_Pd)
            Me.columnAmt_PenPd = New Global.System.Data.DataColumn("Amt_PenPd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_PenPd)
            Me.columnDiscount = New Global.System.Data.DataColumn("Discount", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiscount)
            Me.columnTaxcode = New Global.System.Data.DataColumn("Taxcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTaxcode)
            Me.columnprevqtr = New Global.System.Data.DataColumn("prevqtr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprevqtr)
            Me.columnQtryr1 = New Global.System.Data.DataColumn("Qtryr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtryr1)
            Me.columnQtryr2 = New Global.System.Data.DataColumn("Qtryr2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtryr2)
            Me.columnQtrPaid = New Global.System.Data.DataColumn("QtrPaid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQtrPaid)
            Me.columnRemarks0 = New Global.System.Data.DataColumn("Remarks0", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks0)
            Me.columnRemarks1 = New Global.System.Data.DataColumn("Remarks1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks1)
            Me.columnPres = New Global.System.Data.DataColumn("Pres", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPres)
            Me.columnPrev = New Global.System.Data.DataColumn("Prev", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrev)
            Me.columnStatcode = New Global.System.Data.DataColumn("Statcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatcode)
            Me.columnASSESSNO = New Global.System.Data.DataColumn("ASSESSNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSESSNO)
            Me.columnNewsw = New Global.System.Data.DataColumn("Newsw", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewsw)
            Me.columnModeP = New Global.System.Data.DataColumn("ModeP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModeP)
            Me.columnGradFix = New Global.System.Data.DataColumn("GradFix", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGradFix)
            Me.columnCapital = New Global.System.Data.DataColumn("Capital", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCapital)
            Me.columnXsort = New Global.System.Data.DataColumn("Xsort", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXsort)
            Me.columnORNo = New Global.System.Data.DataColumn("ORNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORNo)
            Me.columnDatePaid = New Global.System.Data.DataColumn("DatePaid", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDatePaid)
            Me.columnBrgyCode = New Global.System.Data.DataColumn("BrgyCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBrgyCode)
            Me.columnLocaCode = New Global.System.Data.DataColumn("LocaCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLocaCode)
            Me.columnL_DatePD = New Global.System.Data.DataColumn("L_DatePD", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnL_DatePD)
            Me.columnMainAcctCode = New Global.System.Data.DataColumn("MainAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctCode)
            Me.columnMainAcctDesc = New Global.System.Data.DataColumn("MainAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctDesc)
            Me.columnSubAcctCode = New Global.System.Data.DataColumn("SubAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctCode)
            Me.columnSubAcctDesc = New Global.System.Data.DataColumn("SubAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctDesc)
            Me.columnMainAcctCodePen = New Global.System.Data.DataColumn("MainAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctCodePen)
            Me.columnMainAcctDescPen = New Global.System.Data.DataColumn("MainAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMainAcctDescPen)
            Me.columnSubAcctCodePen = New Global.System.Data.DataColumn("SubAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctCodePen)
            Me.columnSubAcctDescPen = New Global.System.Data.DataColumn("SubAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubAcctDescPen)
            Me.columnAmt_Pd1 = New Global.System.Data.DataColumn("Amt_Pd1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_Pd1)
            Me.columnAmt_PenPd1 = New Global.System.Data.DataColumn("Amt_PenPd1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAmt_PenPd1)
            Me.columnNewAmt_Pd = New Global.System.Data.DataColumn("NewAmt_Pd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewAmt_Pd)
            Me.columnNewAmt_PenPd = New Global.System.Data.DataColumn("NewAmt_PenPd", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewAmt_PenPd)
            Me.columnNewTaxdue = New Global.System.Data.DataColumn("NewTaxdue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewTaxdue)
            Me.columnNewPenDue = New Global.System.Data.DataColumn("NewPenDue", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewPenDue)
            Me.columnFieldName = New Global.System.Data.DataColumn("FieldName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFieldName)
            Me.columnPrevGMonth = New Global.System.Data.DataColumn("PrevGMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrevGMonth)
            Me.columnGDateEsta = New Global.System.Data.DataColumn("GDateEsta", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGDateEsta)
            Me.columnGMonthPaid = New Global.System.Data.DataColumn("GMonthPaid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGMonthPaid)
            Me.columnDATE_ESTA = New Global.System.Data.DataColumn("DATE_ESTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDATE_ESTA)
            Me.columnYearPeriod = New Global.System.Data.DataColumn("YearPeriod", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnYearPeriod)
            Me.columnNotEdit = New Global.System.Data.DataColumn("NotEdit", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotEdit)
            Me.columnNotDel = New Global.System.Data.DataColumn("NotDel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotDel)
            Me.columnAssessTotal = New Global.System.Data.DataColumn("AssessTotal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAssessTotal)
            Me.columnUsedTCred = New Global.System.Data.DataColumn("UsedTCred", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUsedTCred)
            Me.columnForClose = New Global.System.Data.DataColumn("ForClose", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForClose)
            Me.columnxORNO = New Global.System.Data.DataColumn("xORNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxORNO)
            Me.columnxSRS = New Global.System.Data.DataColumn("xSRS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSRS)
            Me.columnxTotal = New Global.System.Data.DataColumn("xTotal", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxTotal)
            Me.columnRASSESBY = New Global.System.Data.DataColumn("RASSESBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRASSESBY)
            Me.columnxSQUENCELocal = New Global.System.Data.DataColumn("xSQUENCELocal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSQUENCELocal)
            Me.columnxSQUENCEPen = New Global.System.Data.DataColumn("xSQUENCEPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSQUENCEPen)
            Me.columnxSQUENCE = New Global.System.Data.DataColumn("xSQUENCE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSQUENCE)
            Me.columnArea = New Global.System.Data.DataColumn("Area", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnArea)
            Me.columnQDUE = New Global.System.Data.DataColumn("QDUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQDUE)
            Me.columnADUE = New Global.System.Data.DataColumn("ADUE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADUE)
            Me.columnQAMT = New Global.System.Data.DataColumn("QAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQAMT)
            Me.columnAAMT = New Global.System.Data.DataColumn("AAMT", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAAMT)
            Me.columnRES1 = New Global.System.Data.DataColumn("RES1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES1)
            Me.columnRES2 = New Global.System.Data.DataColumn("RES2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES2)
            Me.columnRES3 = New Global.System.Data.DataColumn("RES3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES3)
            Me.columnRES4 = New Global.System.Data.DataColumn("RES4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES4)
            Me.columnRES5 = New Global.System.Data.DataColumn("RES5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES5)
            Me.columnIsRegBill = New Global.System.Data.DataColumn("IsRegBill", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsRegBill)
            Me.columnRES = New Global.System.Data.DataColumn("RES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES)
            Me.columnPenYear = New Global.System.Data.DataColumn("PenYear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPenYear)
            Me.columnNotDelete = New Global.System.Data.DataColumn("NotDelete", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotDelete)
            Me.columnI_YEAR1 = New Global.System.Data.DataColumn("I_YEAR1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR1)
            Me.columnI_DISCOUNT1 = New Global.System.Data.DataColumn("I_DISCOUNT1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT1)
            Me.columnI_YEAR2 = New Global.System.Data.DataColumn("I_YEAR2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR2)
            Me.columnI_DISCOUNT2 = New Global.System.Data.DataColumn("I_DISCOUNT2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT2)
            Me.columnI_YEAR3 = New Global.System.Data.DataColumn("I_YEAR3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR3)
            Me.columnI_DISCOUNT3 = New Global.System.Data.DataColumn("I_DISCOUNT3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT3)
            Me.columnI_YEAR4 = New Global.System.Data.DataColumn("I_YEAR4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_YEAR4)
            Me.columnI_DISCOUNT4 = New Global.System.Data.DataColumn("I_DISCOUNT4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnI_DISCOUNT4)
            Me.columnEDITEDBY = New Global.System.Data.DataColumn("EDITEDBY", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEDITEDBY)
            Me.columnX1 = New Global.System.Data.DataColumn("X1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX1)
            Me.columnX2 = New Global.System.Data.DataColumn("X2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX2)
            Me.columnX3 = New Global.System.Data.DataColumn("X3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX3)
            Me.columnX4 = New Global.System.Data.DataColumn("X4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX4)
            Me.columnX5 = New Global.System.Data.DataColumn("X5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnX5)
            Me.columnBLGFSORT = New Global.System.Data.DataColumn("BLGFSORT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBLGFSORT)
            Me.columnProvision = New Global.System.Data.DataColumn("Provision", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProvision)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnxMainAcctCode = New Global.System.Data.DataColumn("xMainAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctCode)
            Me.columnxMainAcctDesc = New Global.System.Data.DataColumn("xMainAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctDesc)
            Me.columnxSubAcctCode = New Global.System.Data.DataColumn("xSubAcctCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctCode)
            Me.columnxSubAcctDesc = New Global.System.Data.DataColumn("xSubAcctDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctDesc)
            Me.columnxMainAcctCodePen = New Global.System.Data.DataColumn("xMainAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctCodePen)
            Me.columnxMainAcctDescPen = New Global.System.Data.DataColumn("xMainAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxMainAcctDescPen)
            Me.columnxSubAcctCodePen = New Global.System.Data.DataColumn("xSubAcctCodePen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctCodePen)
            Me.columnxSubAcctDescPen = New Global.System.Data.DataColumn("xSubAcctDescPen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxSubAcctDescPen)
            Me.columnTRANSTYPE = New Global.System.Data.DataColumn("TRANSTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSTYPE)
            Me.columnORIGDUEFEEADJ = New Global.System.Data.DataColumn("ORIGDUEFEEADJ", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORIGDUEFEEADJ)
            Me.columnXDEPT = New Global.System.Data.DataColumn("XDEPT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXDEPT)
            Me.columnFROMSP = New Global.System.Data.DataColumn("FROMSP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFROMSP)
            Me.columnFEEPEN = New Global.System.Data.DataColumn("FEEPEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFEEPEN)
            Me.columnPRODUCT = New Global.System.Data.DataColumn("PRODUCT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCT)
            Me.columnBPLOTOIMS = New Global.System.Data.DataColumn("BPLOTOIMS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBPLOTOIMS)
            Me.columnBILLTYPE = New Global.System.Data.DataColumn("BILLTYPE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBILLTYPE)
            Me.columnNEW5 = New Global.System.Data.DataColumn("NEW5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEW5)
            Me.columnAcctno.MaxLength = 25
            Me.columnForyear.MaxLength = 10
            Me.columnBus_Code.MaxLength = 10
            Me.columnDesc1.MaxLength = 255
            Me.columnTaxcode.MaxLength = 10
            Me.columnprevqtr.MaxLength = 20
            Me.columnQtryr1.MaxLength = 20
            Me.columnQtryr2.MaxLength = 20
            Me.columnQtrPaid.MaxLength = 10
            Me.columnRemarks0.MaxLength = 50
            Me.columnRemarks1.MaxLength = 50
            Me.columnPres.MaxLength = 20
            Me.columnPrev.MaxLength = 20
            Me.columnStatcode.MaxLength = 5
            Me.columnASSESSNO.MaxLength = 50
            Me.columnNewsw.MaxLength = 5
            Me.columnModeP.MaxLength = 5
            Me.columnGradFix.MaxLength = 10
            Me.columnXsort.MaxLength = 20
            Me.columnORNo.MaxLength = 20
            Me.columnBrgyCode.MaxLength = 5
            Me.columnLocaCode.MaxLength = 5
            Me.columnMainAcctCode.MaxLength = 50
            Me.columnMainAcctDesc.MaxLength = 255
            Me.columnSubAcctCode.MaxLength = 50
            Me.columnSubAcctDesc.MaxLength = 255
            Me.columnMainAcctCodePen.MaxLength = 50
            Me.columnMainAcctDescPen.MaxLength = 255
            Me.columnSubAcctCodePen.MaxLength = 50
            Me.columnSubAcctDescPen.MaxLength = 255
            Me.columnFieldName.MaxLength = 50
            Me.columnPrevGMonth.MaxLength = 50
            Me.columnGMonthPaid.MaxLength = 50
            Me.columnYearPeriod.MaxLength = 50
            Me.columnNotEdit.MaxLength = 50
            Me.columnNotDel.MaxLength = 50
            Me.columnAssessTotal.MaxLength = 50
            Me.columnForClose.MaxLength = 255
            Me.columnxORNO.MaxLength = 20
            Me.columnxSRS.MaxLength = 20
            Me.columnRASSESBY.MaxLength = 50
            Me.columnxSQUENCELocal.MaxLength = 5
            Me.columnxSQUENCEPen.MaxLength = 5
            Me.columnxSQUENCE.MaxLength = 5
            Me.columnRES5.MaxLength = 10
            Me.columnIsRegBill.MaxLength = 10
            Me.columnRES.MaxLength = 50
            Me.columnPenYear.MaxLength = 10
            Me.columnNotDelete.MaxLength = 50
            Me.columnI_YEAR1.MaxLength = 50
            Me.columnI_YEAR2.MaxLength = 50
            Me.columnI_YEAR3.MaxLength = 50
            Me.columnI_YEAR4.MaxLength = 50
            Me.columnEDITEDBY.MaxLength = 50
            Me.columnX1.MaxLength = 50
            Me.columnX2.MaxLength = 50
            Me.columnX3.MaxLength = 50
            Me.columnX4.MaxLength = 50
            Me.columnX5.MaxLength = 50
            Me.columnBLGFSORT.MaxLength = 50
            Me.columnProvision.MaxLength = 50
            Me.columnRemarks.MaxLength = 250
            Me.columnxMainAcctCode.MaxLength = 50
            Me.columnxMainAcctDesc.MaxLength = 255
            Me.columnxSubAcctCode.MaxLength = 50
            Me.columnxSubAcctDesc.MaxLength = 255
            Me.columnxMainAcctCodePen.MaxLength = 50
            Me.columnxMainAcctDescPen.MaxLength = 255
            Me.columnxSubAcctCodePen.MaxLength = 50
            Me.columnxSubAcctDescPen.MaxLength = 255
            Me.columnTRANSTYPE.MaxLength = 50
            Me.columnXDEPT.MaxLength = 50
            Me.columnFROMSP.MaxLength = 5
            Me.columnFEEPEN.MaxLength = 5
            Me.columnPRODUCT.MaxLength = 2000
            Me.columnBPLOTOIMS.MaxLength = 10
            Me.columnBILLTYPE.MaxLength = 50
            Me.columnNEW5.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Newchy_2Row() As chy_2Row
            Return CType(Me.NewRow,chy_2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New chy_2Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(chy_2Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.chy_2RowChangedEvent) Is Nothing) Then
                RaiseEvent chy_2RowChanged(Me, New chy_2RowChangeEvent(CType(e.Row,chy_2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.chy_2RowChangingEvent) Is Nothing) Then
                RaiseEvent chy_2RowChanging(Me, New chy_2RowChangeEvent(CType(e.Row,chy_2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.chy_2RowDeletedEvent) Is Nothing) Then
                RaiseEvent chy_2RowDeleted(Me, New chy_2RowChangeEvent(CType(e.Row,chy_2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.chy_2RowDeletingEvent) Is Nothing) Then
                RaiseEvent chy_2RowDeleting(Me, New chy_2RowChangeEvent(CType(e.Row,chy_2Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Removechy_2Row(ByVal row As chy_2Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "chy_2DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class chyADDLEXTNDataTable
        Inherits Global.System.Data.TypedTableBase(Of chyADDLEXTNRow)
        
        Private columnAcctno As Global.System.Data.DataColumn
        
        Private columnForyear As Global.System.Data.DataColumn
        
        Private columnBus_Code As Global.System.Data.DataColumn
        
        Private columnZONE As Global.System.Data.DataColumn
        
        Private columnRTC As Global.System.Data.DataColumn
        
        Private columnPNP As Global.System.Data.DataColumn
        
        Private columnFISCAL As Global.System.Data.DataColumn
        
        Private columnBUILDING As Global.System.Data.DataColumn
        
        Private columnMECHANICAL As Global.System.Data.DataColumn
        
        Private columnELECTRICAL As Global.System.Data.DataColumn
        
        Private columnPLUMBING As Global.System.Data.DataColumn
        
        Private columnSIGNBILL As Global.System.Data.DataColumn
        
        Private columnOTHER As Global.System.Data.DataColumn
        
        Private columnSTICKER As Global.System.Data.DataColumn
        
        Private columnMEDICAL As Global.System.Data.DataColumn
        
        Private columnWMEASURES As Global.System.Data.DataColumn
        
        Private columnFIRECODE As Global.System.Data.DataColumn
        
        Private columnRF1 As Global.System.Data.DataColumn
        
        Private columnRF2 As Global.System.Data.DataColumn
        
        Private columnRF3 As Global.System.Data.DataColumn
        
        Private columnRF4 As Global.System.Data.DataColumn
        
        Private columnRF5 As Global.System.Data.DataColumn
        
        Private columnRF6 As Global.System.Data.DataColumn
        
        Private columnRF7 As Global.System.Data.DataColumn
        
        Private columnRF8 As Global.System.Data.DataColumn
        
        Private columnRF9 As Global.System.Data.DataColumn
        
        Private columnRF10 As Global.System.Data.DataColumn
        
        Private columnRF11 As Global.System.Data.DataColumn
        
        Private columnRF12 As Global.System.Data.DataColumn
        
        Private columnRF13 As Global.System.Data.DataColumn
        
        Private columnRF14 As Global.System.Data.DataColumn
        
        Private columnRF15 As Global.System.Data.DataColumn
        
        Private columnZONE_HP As Global.System.Data.DataColumn
        
        Private columnRTC_HP As Global.System.Data.DataColumn
        
        Private columnPNP_HP As Global.System.Data.DataColumn
        
        Private columnFISCAL_HP As Global.System.Data.DataColumn
        
        Private columnBUILDING_HP As Global.System.Data.DataColumn
        
        Private columnMECHANICAL_HP As Global.System.Data.DataColumn
        
        Private columnELECTRICAL_HP As Global.System.Data.DataColumn
        
        Private columnPLUMBING_HP As Global.System.Data.DataColumn
        
        Private columnSIGNBILL_HP As Global.System.Data.DataColumn
        
        Private columnOTHER_HP As Global.System.Data.DataColumn
        
        Private columnSTICKER_HP As Global.System.Data.DataColumn
        
        Private columnMEDICAL_HP As Global.System.Data.DataColumn
        
        Private columnWMEASURES_HP As Global.System.Data.DataColumn
        
        Private columnFIRECODE_HP As Global.System.Data.DataColumn
        
        Private columnRF1_HP As Global.System.Data.DataColumn
        
        Private columnRF2_HP As Global.System.Data.DataColumn
        
        Private columnRF3_HP As Global.System.Data.DataColumn
        
        Private columnRF4_HP As Global.System.Data.DataColumn
        
        Private columnRF5_HP As Global.System.Data.DataColumn
        
        Private columnRF6_HP As Global.System.Data.DataColumn
        
        Private columnRF7_HP As Global.System.Data.DataColumn
        
        Private columnRF8_HP As Global.System.Data.DataColumn
        
        Private columnRF9_HP As Global.System.Data.DataColumn
        
        Private columnRF10_HP As Global.System.Data.DataColumn
        
        Private columnRF11_HP As Global.System.Data.DataColumn
        
        Private columnRF12_HP As Global.System.Data.DataColumn
        
        Private columnRF13_HP As Global.System.Data.DataColumn
        
        Private columnRF14_HP As Global.System.Data.DataColumn
        
        Private columnRF15_HP As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "chyADDLEXTN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ForyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bus_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBus_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PNPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FISCALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFISCAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BUILDINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUILDING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MECHANICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMECHANICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELECTRICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnELECTRICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLUMBINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLUMBING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIGNBILLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGNBILL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STICKERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTICKER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEDICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEDICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WMEASURESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWMEASURES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIRECODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRECODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZONE_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONE_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RTC_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRTC_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PNP_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNP_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FISCAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFISCAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BUILDING_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUILDING_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MECHANICAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMECHANICAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELECTRICAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnELECTRICAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLUMBING_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLUMBING_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIGNBILL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGNBILL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTHER_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STICKER_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTICKER_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEDICAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEDICAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WMEASURES_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWMEASURES_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIRECODE_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRECODE_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF1_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF1_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF2_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF2_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF3_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF3_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF4_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF4_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF5_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF5_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF6_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF6_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF7_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF7_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF8_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF8_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF9_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF9_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF10_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF10_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF11_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF11_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF12_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF12_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF13_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF13_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF14_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF14_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF15_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF15_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As chyADDLEXTNRow
            Get
                Return CType(Me.Rows(index),chyADDLEXTNRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chyADDLEXTNRowChanging As chyADDLEXTNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chyADDLEXTNRowChanged As chyADDLEXTNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chyADDLEXTNRowDeleting As chyADDLEXTNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event chyADDLEXTNRowDeleted As chyADDLEXTNRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddchyADDLEXTNRow(ByVal row As chyADDLEXTNRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddchyADDLEXTNRow( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal ZONE As Decimal,  _
                    ByVal RTC As Decimal,  _
                    ByVal PNP As Decimal,  _
                    ByVal FISCAL As Decimal,  _
                    ByVal BUILDING As Decimal,  _
                    ByVal MECHANICAL As Decimal,  _
                    ByVal ELECTRICAL As Decimal,  _
                    ByVal PLUMBING As Decimal,  _
                    ByVal SIGNBILL As Decimal,  _
                    ByVal OTHER As Decimal,  _
                    ByVal STICKER As Decimal,  _
                    ByVal MEDICAL As Decimal,  _
                    ByVal WMEASURES As Decimal,  _
                    ByVal FIRECODE As Decimal,  _
                    ByVal RF1 As Decimal,  _
                    ByVal RF2 As Decimal,  _
                    ByVal RF3 As Decimal,  _
                    ByVal RF4 As Decimal,  _
                    ByVal RF5 As Decimal,  _
                    ByVal RF6 As Decimal,  _
                    ByVal RF7 As Decimal,  _
                    ByVal RF8 As Decimal,  _
                    ByVal RF9 As Decimal,  _
                    ByVal RF10 As Decimal,  _
                    ByVal RF11 As Decimal,  _
                    ByVal RF12 As Decimal,  _
                    ByVal RF13 As Decimal,  _
                    ByVal RF14 As Decimal,  _
                    ByVal RF15 As Decimal,  _
                    ByVal ZONE_HP As String,  _
                    ByVal RTC_HP As String,  _
                    ByVal PNP_HP As String,  _
                    ByVal FISCAL_HP As String,  _
                    ByVal BUILDING_HP As String,  _
                    ByVal MECHANICAL_HP As String,  _
                    ByVal ELECTRICAL_HP As String,  _
                    ByVal PLUMBING_HP As String,  _
                    ByVal SIGNBILL_HP As String,  _
                    ByVal OTHER_HP As String,  _
                    ByVal STICKER_HP As String,  _
                    ByVal MEDICAL_HP As String,  _
                    ByVal WMEASURES_HP As String,  _
                    ByVal FIRECODE_HP As String,  _
                    ByVal RF1_HP As String,  _
                    ByVal RF2_HP As String,  _
                    ByVal RF3_HP As String,  _
                    ByVal RF4_HP As String,  _
                    ByVal RF5_HP As String,  _
                    ByVal RF6_HP As String,  _
                    ByVal RF7_HP As String,  _
                    ByVal RF8_HP As String,  _
                    ByVal RF9_HP As String,  _
                    ByVal RF10_HP As String,  _
                    ByVal RF11_HP As String,  _
                    ByVal RF12_HP As String,  _
                    ByVal RF13_HP As String,  _
                    ByVal RF14_HP As String,  _
                    ByVal RF15_HP As String) As chyADDLEXTNRow
            Dim rowchyADDLEXTNRow As chyADDLEXTNRow = CType(Me.NewRow,chyADDLEXTNRow)
            Dim columnValuesArray() As Object = New Object() {Acctno, Foryear, Bus_Code, ZONE, RTC, PNP, FISCAL, BUILDING, MECHANICAL, ELECTRICAL, PLUMBING, SIGNBILL, OTHER, STICKER, MEDICAL, WMEASURES, FIRECODE, RF1, RF2, RF3, RF4, RF5, RF6, RF7, RF8, RF9, RF10, RF11, RF12, RF13, RF14, RF15, ZONE_HP, RTC_HP, PNP_HP, FISCAL_HP, BUILDING_HP, MECHANICAL_HP, ELECTRICAL_HP, PLUMBING_HP, SIGNBILL_HP, OTHER_HP, STICKER_HP, MEDICAL_HP, WMEASURES_HP, FIRECODE_HP, RF1_HP, RF2_HP, RF3_HP, RF4_HP, RF5_HP, RF6_HP, RF7_HP, RF8_HP, RF9_HP, RF10_HP, RF11_HP, RF12_HP, RF13_HP, RF14_HP, RF15_HP}
            rowchyADDLEXTNRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowchyADDLEXTNRow)
            Return rowchyADDLEXTNRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As chyADDLEXTNDataTable = CType(MyBase.Clone,chyADDLEXTNDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New chyADDLEXTNDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAcctno = MyBase.Columns("Acctno")
            Me.columnForyear = MyBase.Columns("Foryear")
            Me.columnBus_Code = MyBase.Columns("Bus_Code")
            Me.columnZONE = MyBase.Columns("ZONE")
            Me.columnRTC = MyBase.Columns("RTC")
            Me.columnPNP = MyBase.Columns("PNP")
            Me.columnFISCAL = MyBase.Columns("FISCAL")
            Me.columnBUILDING = MyBase.Columns("BUILDING")
            Me.columnMECHANICAL = MyBase.Columns("MECHANICAL")
            Me.columnELECTRICAL = MyBase.Columns("ELECTRICAL")
            Me.columnPLUMBING = MyBase.Columns("PLUMBING")
            Me.columnSIGNBILL = MyBase.Columns("SIGNBILL")
            Me.columnOTHER = MyBase.Columns("OTHER")
            Me.columnSTICKER = MyBase.Columns("STICKER")
            Me.columnMEDICAL = MyBase.Columns("MEDICAL")
            Me.columnWMEASURES = MyBase.Columns("WMEASURES")
            Me.columnFIRECODE = MyBase.Columns("FIRECODE")
            Me.columnRF1 = MyBase.Columns("RF1")
            Me.columnRF2 = MyBase.Columns("RF2")
            Me.columnRF3 = MyBase.Columns("RF3")
            Me.columnRF4 = MyBase.Columns("RF4")
            Me.columnRF5 = MyBase.Columns("RF5")
            Me.columnRF6 = MyBase.Columns("RF6")
            Me.columnRF7 = MyBase.Columns("RF7")
            Me.columnRF8 = MyBase.Columns("RF8")
            Me.columnRF9 = MyBase.Columns("RF9")
            Me.columnRF10 = MyBase.Columns("RF10")
            Me.columnRF11 = MyBase.Columns("RF11")
            Me.columnRF12 = MyBase.Columns("RF12")
            Me.columnRF13 = MyBase.Columns("RF13")
            Me.columnRF14 = MyBase.Columns("RF14")
            Me.columnRF15 = MyBase.Columns("RF15")
            Me.columnZONE_HP = MyBase.Columns("ZONE_HP")
            Me.columnRTC_HP = MyBase.Columns("RTC_HP")
            Me.columnPNP_HP = MyBase.Columns("PNP_HP")
            Me.columnFISCAL_HP = MyBase.Columns("FISCAL_HP")
            Me.columnBUILDING_HP = MyBase.Columns("BUILDING_HP")
            Me.columnMECHANICAL_HP = MyBase.Columns("MECHANICAL_HP")
            Me.columnELECTRICAL_HP = MyBase.Columns("ELECTRICAL_HP")
            Me.columnPLUMBING_HP = MyBase.Columns("PLUMBING_HP")
            Me.columnSIGNBILL_HP = MyBase.Columns("SIGNBILL_HP")
            Me.columnOTHER_HP = MyBase.Columns("OTHER_HP")
            Me.columnSTICKER_HP = MyBase.Columns("STICKER_HP")
            Me.columnMEDICAL_HP = MyBase.Columns("MEDICAL_HP")
            Me.columnWMEASURES_HP = MyBase.Columns("WMEASURES_HP")
            Me.columnFIRECODE_HP = MyBase.Columns("FIRECODE_HP")
            Me.columnRF1_HP = MyBase.Columns("RF1_HP")
            Me.columnRF2_HP = MyBase.Columns("RF2_HP")
            Me.columnRF3_HP = MyBase.Columns("RF3_HP")
            Me.columnRF4_HP = MyBase.Columns("RF4_HP")
            Me.columnRF5_HP = MyBase.Columns("RF5_HP")
            Me.columnRF6_HP = MyBase.Columns("RF6_HP")
            Me.columnRF7_HP = MyBase.Columns("RF7_HP")
            Me.columnRF8_HP = MyBase.Columns("RF8_HP")
            Me.columnRF9_HP = MyBase.Columns("RF9_HP")
            Me.columnRF10_HP = MyBase.Columns("RF10_HP")
            Me.columnRF11_HP = MyBase.Columns("RF11_HP")
            Me.columnRF12_HP = MyBase.Columns("RF12_HP")
            Me.columnRF13_HP = MyBase.Columns("RF13_HP")
            Me.columnRF14_HP = MyBase.Columns("RF14_HP")
            Me.columnRF15_HP = MyBase.Columns("RF15_HP")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAcctno = New Global.System.Data.DataColumn("Acctno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctno)
            Me.columnForyear = New Global.System.Data.DataColumn("Foryear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForyear)
            Me.columnBus_Code = New Global.System.Data.DataColumn("Bus_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBus_Code)
            Me.columnZONE = New Global.System.Data.DataColumn("ZONE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONE)
            Me.columnRTC = New Global.System.Data.DataColumn("RTC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRTC)
            Me.columnPNP = New Global.System.Data.DataColumn("PNP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNP)
            Me.columnFISCAL = New Global.System.Data.DataColumn("FISCAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFISCAL)
            Me.columnBUILDING = New Global.System.Data.DataColumn("BUILDING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUILDING)
            Me.columnMECHANICAL = New Global.System.Data.DataColumn("MECHANICAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMECHANICAL)
            Me.columnELECTRICAL = New Global.System.Data.DataColumn("ELECTRICAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELECTRICAL)
            Me.columnPLUMBING = New Global.System.Data.DataColumn("PLUMBING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLUMBING)
            Me.columnSIGNBILL = New Global.System.Data.DataColumn("SIGNBILL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGNBILL)
            Me.columnOTHER = New Global.System.Data.DataColumn("OTHER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER)
            Me.columnSTICKER = New Global.System.Data.DataColumn("STICKER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTICKER)
            Me.columnMEDICAL = New Global.System.Data.DataColumn("MEDICAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEDICAL)
            Me.columnWMEASURES = New Global.System.Data.DataColumn("WMEASURES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWMEASURES)
            Me.columnFIRECODE = New Global.System.Data.DataColumn("FIRECODE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRECODE)
            Me.columnRF1 = New Global.System.Data.DataColumn("RF1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF1)
            Me.columnRF2 = New Global.System.Data.DataColumn("RF2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF2)
            Me.columnRF3 = New Global.System.Data.DataColumn("RF3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF3)
            Me.columnRF4 = New Global.System.Data.DataColumn("RF4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF4)
            Me.columnRF5 = New Global.System.Data.DataColumn("RF5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF5)
            Me.columnRF6 = New Global.System.Data.DataColumn("RF6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF6)
            Me.columnRF7 = New Global.System.Data.DataColumn("RF7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF7)
            Me.columnRF8 = New Global.System.Data.DataColumn("RF8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF8)
            Me.columnRF9 = New Global.System.Data.DataColumn("RF9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF9)
            Me.columnRF10 = New Global.System.Data.DataColumn("RF10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF10)
            Me.columnRF11 = New Global.System.Data.DataColumn("RF11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF11)
            Me.columnRF12 = New Global.System.Data.DataColumn("RF12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF12)
            Me.columnRF13 = New Global.System.Data.DataColumn("RF13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF13)
            Me.columnRF14 = New Global.System.Data.DataColumn("RF14", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF14)
            Me.columnRF15 = New Global.System.Data.DataColumn("RF15", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF15)
            Me.columnZONE_HP = New Global.System.Data.DataColumn("ZONE_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONE_HP)
            Me.columnRTC_HP = New Global.System.Data.DataColumn("RTC_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRTC_HP)
            Me.columnPNP_HP = New Global.System.Data.DataColumn("PNP_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNP_HP)
            Me.columnFISCAL_HP = New Global.System.Data.DataColumn("FISCAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFISCAL_HP)
            Me.columnBUILDING_HP = New Global.System.Data.DataColumn("BUILDING_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUILDING_HP)
            Me.columnMECHANICAL_HP = New Global.System.Data.DataColumn("MECHANICAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMECHANICAL_HP)
            Me.columnELECTRICAL_HP = New Global.System.Data.DataColumn("ELECTRICAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELECTRICAL_HP)
            Me.columnPLUMBING_HP = New Global.System.Data.DataColumn("PLUMBING_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLUMBING_HP)
            Me.columnSIGNBILL_HP = New Global.System.Data.DataColumn("SIGNBILL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGNBILL_HP)
            Me.columnOTHER_HP = New Global.System.Data.DataColumn("OTHER_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER_HP)
            Me.columnSTICKER_HP = New Global.System.Data.DataColumn("STICKER_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTICKER_HP)
            Me.columnMEDICAL_HP = New Global.System.Data.DataColumn("MEDICAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEDICAL_HP)
            Me.columnWMEASURES_HP = New Global.System.Data.DataColumn("WMEASURES_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWMEASURES_HP)
            Me.columnFIRECODE_HP = New Global.System.Data.DataColumn("FIRECODE_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRECODE_HP)
            Me.columnRF1_HP = New Global.System.Data.DataColumn("RF1_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF1_HP)
            Me.columnRF2_HP = New Global.System.Data.DataColumn("RF2_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF2_HP)
            Me.columnRF3_HP = New Global.System.Data.DataColumn("RF3_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF3_HP)
            Me.columnRF4_HP = New Global.System.Data.DataColumn("RF4_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF4_HP)
            Me.columnRF5_HP = New Global.System.Data.DataColumn("RF5_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF5_HP)
            Me.columnRF6_HP = New Global.System.Data.DataColumn("RF6_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF6_HP)
            Me.columnRF7_HP = New Global.System.Data.DataColumn("RF7_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF7_HP)
            Me.columnRF8_HP = New Global.System.Data.DataColumn("RF8_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF8_HP)
            Me.columnRF9_HP = New Global.System.Data.DataColumn("RF9_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF9_HP)
            Me.columnRF10_HP = New Global.System.Data.DataColumn("RF10_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF10_HP)
            Me.columnRF11_HP = New Global.System.Data.DataColumn("RF11_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF11_HP)
            Me.columnRF12_HP = New Global.System.Data.DataColumn("RF12_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF12_HP)
            Me.columnRF13_HP = New Global.System.Data.DataColumn("RF13_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF13_HP)
            Me.columnRF14_HP = New Global.System.Data.DataColumn("RF14_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF14_HP)
            Me.columnRF15_HP = New Global.System.Data.DataColumn("RF15_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF15_HP)
            Me.columnAcctno.MaxLength = 25
            Me.columnForyear.MaxLength = 10
            Me.columnBus_Code.MaxLength = 10
            Me.columnZONE_HP.MaxLength = 1
            Me.columnRTC_HP.MaxLength = 1
            Me.columnPNP_HP.MaxLength = 1
            Me.columnFISCAL_HP.MaxLength = 1
            Me.columnBUILDING_HP.MaxLength = 1
            Me.columnMECHANICAL_HP.MaxLength = 1
            Me.columnELECTRICAL_HP.MaxLength = 1
            Me.columnPLUMBING_HP.MaxLength = 1
            Me.columnSIGNBILL_HP.MaxLength = 1
            Me.columnOTHER_HP.MaxLength = 1
            Me.columnSTICKER_HP.MaxLength = 1
            Me.columnMEDICAL_HP.MaxLength = 1
            Me.columnWMEASURES_HP.MaxLength = 1
            Me.columnFIRECODE_HP.MaxLength = 1
            Me.columnRF1_HP.MaxLength = 1
            Me.columnRF2_HP.MaxLength = 1
            Me.columnRF3_HP.MaxLength = 1
            Me.columnRF4_HP.MaxLength = 1
            Me.columnRF5_HP.MaxLength = 1
            Me.columnRF6_HP.MaxLength = 1
            Me.columnRF7_HP.MaxLength = 1
            Me.columnRF8_HP.MaxLength = 1
            Me.columnRF9_HP.MaxLength = 1
            Me.columnRF10_HP.MaxLength = 1
            Me.columnRF11_HP.MaxLength = 1
            Me.columnRF12_HP.MaxLength = 1
            Me.columnRF13_HP.MaxLength = 1
            Me.columnRF14_HP.MaxLength = 1
            Me.columnRF15_HP.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewchyADDLEXTNRow() As chyADDLEXTNRow
            Return CType(Me.NewRow,chyADDLEXTNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New chyADDLEXTNRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(chyADDLEXTNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.chyADDLEXTNRowChangedEvent) Is Nothing) Then
                RaiseEvent chyADDLEXTNRowChanged(Me, New chyADDLEXTNRowChangeEvent(CType(e.Row,chyADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.chyADDLEXTNRowChangingEvent) Is Nothing) Then
                RaiseEvent chyADDLEXTNRowChanging(Me, New chyADDLEXTNRowChangeEvent(CType(e.Row,chyADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.chyADDLEXTNRowDeletedEvent) Is Nothing) Then
                RaiseEvent chyADDLEXTNRowDeleted(Me, New chyADDLEXTNRowChangeEvent(CType(e.Row,chyADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.chyADDLEXTNRowDeletingEvent) Is Nothing) Then
                RaiseEvent chyADDLEXTNRowDeleting(Me, New chyADDLEXTNRowChangeEvent(CType(e.Row,chyADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovechyADDLEXTNRow(ByVal row As chyADDLEXTNRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "chyADDLEXTNDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dennisenriquezADDLEXTNDataTable
        Inherits Global.System.Data.TypedTableBase(Of dennisenriquezADDLEXTNRow)
        
        Private columnAcctno As Global.System.Data.DataColumn
        
        Private columnForyear As Global.System.Data.DataColumn
        
        Private columnBus_Code As Global.System.Data.DataColumn
        
        Private columnZONE As Global.System.Data.DataColumn
        
        Private columnRTC As Global.System.Data.DataColumn
        
        Private columnPNP As Global.System.Data.DataColumn
        
        Private columnFISCAL As Global.System.Data.DataColumn
        
        Private columnBUILDING As Global.System.Data.DataColumn
        
        Private columnMECHANICAL As Global.System.Data.DataColumn
        
        Private columnELECTRICAL As Global.System.Data.DataColumn
        
        Private columnPLUMBING As Global.System.Data.DataColumn
        
        Private columnSIGNBILL As Global.System.Data.DataColumn
        
        Private columnOTHER As Global.System.Data.DataColumn
        
        Private columnSTICKER As Global.System.Data.DataColumn
        
        Private columnMEDICAL As Global.System.Data.DataColumn
        
        Private columnWMEASURES As Global.System.Data.DataColumn
        
        Private columnFIRECODE As Global.System.Data.DataColumn
        
        Private columnRF1 As Global.System.Data.DataColumn
        
        Private columnRF2 As Global.System.Data.DataColumn
        
        Private columnRF3 As Global.System.Data.DataColumn
        
        Private columnRF4 As Global.System.Data.DataColumn
        
        Private columnRF5 As Global.System.Data.DataColumn
        
        Private columnRF6 As Global.System.Data.DataColumn
        
        Private columnRF7 As Global.System.Data.DataColumn
        
        Private columnRF8 As Global.System.Data.DataColumn
        
        Private columnRF9 As Global.System.Data.DataColumn
        
        Private columnRF10 As Global.System.Data.DataColumn
        
        Private columnRF11 As Global.System.Data.DataColumn
        
        Private columnRF12 As Global.System.Data.DataColumn
        
        Private columnRF13 As Global.System.Data.DataColumn
        
        Private columnRF14 As Global.System.Data.DataColumn
        
        Private columnRF15 As Global.System.Data.DataColumn
        
        Private columnZONE_HP As Global.System.Data.DataColumn
        
        Private columnRTC_HP As Global.System.Data.DataColumn
        
        Private columnPNP_HP As Global.System.Data.DataColumn
        
        Private columnFISCAL_HP As Global.System.Data.DataColumn
        
        Private columnBUILDING_HP As Global.System.Data.DataColumn
        
        Private columnMECHANICAL_HP As Global.System.Data.DataColumn
        
        Private columnELECTRICAL_HP As Global.System.Data.DataColumn
        
        Private columnPLUMBING_HP As Global.System.Data.DataColumn
        
        Private columnSIGNBILL_HP As Global.System.Data.DataColumn
        
        Private columnOTHER_HP As Global.System.Data.DataColumn
        
        Private columnSTICKER_HP As Global.System.Data.DataColumn
        
        Private columnMEDICAL_HP As Global.System.Data.DataColumn
        
        Private columnWMEASURES_HP As Global.System.Data.DataColumn
        
        Private columnFIRECODE_HP As Global.System.Data.DataColumn
        
        Private columnRF1_HP As Global.System.Data.DataColumn
        
        Private columnRF2_HP As Global.System.Data.DataColumn
        
        Private columnRF3_HP As Global.System.Data.DataColumn
        
        Private columnRF4_HP As Global.System.Data.DataColumn
        
        Private columnRF5_HP As Global.System.Data.DataColumn
        
        Private columnRF6_HP As Global.System.Data.DataColumn
        
        Private columnRF7_HP As Global.System.Data.DataColumn
        
        Private columnRF8_HP As Global.System.Data.DataColumn
        
        Private columnRF9_HP As Global.System.Data.DataColumn
        
        Private columnRF10_HP As Global.System.Data.DataColumn
        
        Private columnRF11_HP As Global.System.Data.DataColumn
        
        Private columnRF12_HP As Global.System.Data.DataColumn
        
        Private columnRF13_HP As Global.System.Data.DataColumn
        
        Private columnRF14_HP As Global.System.Data.DataColumn
        
        Private columnRF15_HP As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dennisenriquezADDLEXTN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ForyearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForyear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bus_CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBus_Code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RTCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRTC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PNPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FISCALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFISCAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BUILDINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUILDING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MECHANICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMECHANICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELECTRICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnELECTRICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLUMBINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLUMBING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIGNBILLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGNBILL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STICKERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTICKER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEDICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEDICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WMEASURESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWMEASURES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIRECODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRECODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF15Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF15
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ZONE_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnZONE_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RTC_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRTC_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PNP_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPNP_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FISCAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFISCAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BUILDING_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUILDING_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MECHANICAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMECHANICAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ELECTRICAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnELECTRICAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLUMBING_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLUMBING_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIGNBILL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIGNBILL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTHER_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STICKER_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTICKER_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEDICAL_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEDICAL_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WMEASURES_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWMEASURES_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIRECODE_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRECODE_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF1_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF1_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF2_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF2_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF3_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF3_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF4_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF4_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF5_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF5_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF6_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF6_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF7_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF7_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF8_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF8_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF9_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF9_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF10_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF10_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF11_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF11_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF12_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF12_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF13_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF13_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF14_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF14_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF15_HPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF15_HP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dennisenriquezADDLEXTNRow
            Get
                Return CType(Me.Rows(index),dennisenriquezADDLEXTNRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dennisenriquezADDLEXTNRowChanging As dennisenriquezADDLEXTNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dennisenriquezADDLEXTNRowChanged As dennisenriquezADDLEXTNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dennisenriquezADDLEXTNRowDeleting As dennisenriquezADDLEXTNRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event dennisenriquezADDLEXTNRowDeleted As dennisenriquezADDLEXTNRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AdddennisenriquezADDLEXTNRow(ByVal row As dennisenriquezADDLEXTNRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AdddennisenriquezADDLEXTNRow( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal ZONE As Decimal,  _
                    ByVal RTC As Decimal,  _
                    ByVal PNP As Decimal,  _
                    ByVal FISCAL As Decimal,  _
                    ByVal BUILDING As Decimal,  _
                    ByVal MECHANICAL As Decimal,  _
                    ByVal ELECTRICAL As Decimal,  _
                    ByVal PLUMBING As Decimal,  _
                    ByVal SIGNBILL As Decimal,  _
                    ByVal OTHER As Decimal,  _
                    ByVal STICKER As Decimal,  _
                    ByVal MEDICAL As Decimal,  _
                    ByVal WMEASURES As Decimal,  _
                    ByVal FIRECODE As Decimal,  _
                    ByVal RF1 As Decimal,  _
                    ByVal RF2 As Decimal,  _
                    ByVal RF3 As Decimal,  _
                    ByVal RF4 As Decimal,  _
                    ByVal RF5 As Decimal,  _
                    ByVal RF6 As Decimal,  _
                    ByVal RF7 As Decimal,  _
                    ByVal RF8 As Decimal,  _
                    ByVal RF9 As Decimal,  _
                    ByVal RF10 As Decimal,  _
                    ByVal RF11 As Decimal,  _
                    ByVal RF12 As Decimal,  _
                    ByVal RF13 As Decimal,  _
                    ByVal RF14 As Decimal,  _
                    ByVal RF15 As Decimal,  _
                    ByVal ZONE_HP As String,  _
                    ByVal RTC_HP As String,  _
                    ByVal PNP_HP As String,  _
                    ByVal FISCAL_HP As String,  _
                    ByVal BUILDING_HP As String,  _
                    ByVal MECHANICAL_HP As String,  _
                    ByVal ELECTRICAL_HP As String,  _
                    ByVal PLUMBING_HP As String,  _
                    ByVal SIGNBILL_HP As String,  _
                    ByVal OTHER_HP As String,  _
                    ByVal STICKER_HP As String,  _
                    ByVal MEDICAL_HP As String,  _
                    ByVal WMEASURES_HP As String,  _
                    ByVal FIRECODE_HP As String,  _
                    ByVal RF1_HP As String,  _
                    ByVal RF2_HP As String,  _
                    ByVal RF3_HP As String,  _
                    ByVal RF4_HP As String,  _
                    ByVal RF5_HP As String,  _
                    ByVal RF6_HP As String,  _
                    ByVal RF7_HP As String,  _
                    ByVal RF8_HP As String,  _
                    ByVal RF9_HP As String,  _
                    ByVal RF10_HP As String,  _
                    ByVal RF11_HP As String,  _
                    ByVal RF12_HP As String,  _
                    ByVal RF13_HP As String,  _
                    ByVal RF14_HP As String,  _
                    ByVal RF15_HP As String) As dennisenriquezADDLEXTNRow
            Dim rowdennisenriquezADDLEXTNRow As dennisenriquezADDLEXTNRow = CType(Me.NewRow,dennisenriquezADDLEXTNRow)
            Dim columnValuesArray() As Object = New Object() {Acctno, Foryear, Bus_Code, ZONE, RTC, PNP, FISCAL, BUILDING, MECHANICAL, ELECTRICAL, PLUMBING, SIGNBILL, OTHER, STICKER, MEDICAL, WMEASURES, FIRECODE, RF1, RF2, RF3, RF4, RF5, RF6, RF7, RF8, RF9, RF10, RF11, RF12, RF13, RF14, RF15, ZONE_HP, RTC_HP, PNP_HP, FISCAL_HP, BUILDING_HP, MECHANICAL_HP, ELECTRICAL_HP, PLUMBING_HP, SIGNBILL_HP, OTHER_HP, STICKER_HP, MEDICAL_HP, WMEASURES_HP, FIRECODE_HP, RF1_HP, RF2_HP, RF3_HP, RF4_HP, RF5_HP, RF6_HP, RF7_HP, RF8_HP, RF9_HP, RF10_HP, RF11_HP, RF12_HP, RF13_HP, RF14_HP, RF15_HP}
            rowdennisenriquezADDLEXTNRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdennisenriquezADDLEXTNRow)
            Return rowdennisenriquezADDLEXTNRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dennisenriquezADDLEXTNDataTable = CType(MyBase.Clone,dennisenriquezADDLEXTNDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dennisenriquezADDLEXTNDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAcctno = MyBase.Columns("Acctno")
            Me.columnForyear = MyBase.Columns("Foryear")
            Me.columnBus_Code = MyBase.Columns("Bus_Code")
            Me.columnZONE = MyBase.Columns("ZONE")
            Me.columnRTC = MyBase.Columns("RTC")
            Me.columnPNP = MyBase.Columns("PNP")
            Me.columnFISCAL = MyBase.Columns("FISCAL")
            Me.columnBUILDING = MyBase.Columns("BUILDING")
            Me.columnMECHANICAL = MyBase.Columns("MECHANICAL")
            Me.columnELECTRICAL = MyBase.Columns("ELECTRICAL")
            Me.columnPLUMBING = MyBase.Columns("PLUMBING")
            Me.columnSIGNBILL = MyBase.Columns("SIGNBILL")
            Me.columnOTHER = MyBase.Columns("OTHER")
            Me.columnSTICKER = MyBase.Columns("STICKER")
            Me.columnMEDICAL = MyBase.Columns("MEDICAL")
            Me.columnWMEASURES = MyBase.Columns("WMEASURES")
            Me.columnFIRECODE = MyBase.Columns("FIRECODE")
            Me.columnRF1 = MyBase.Columns("RF1")
            Me.columnRF2 = MyBase.Columns("RF2")
            Me.columnRF3 = MyBase.Columns("RF3")
            Me.columnRF4 = MyBase.Columns("RF4")
            Me.columnRF5 = MyBase.Columns("RF5")
            Me.columnRF6 = MyBase.Columns("RF6")
            Me.columnRF7 = MyBase.Columns("RF7")
            Me.columnRF8 = MyBase.Columns("RF8")
            Me.columnRF9 = MyBase.Columns("RF9")
            Me.columnRF10 = MyBase.Columns("RF10")
            Me.columnRF11 = MyBase.Columns("RF11")
            Me.columnRF12 = MyBase.Columns("RF12")
            Me.columnRF13 = MyBase.Columns("RF13")
            Me.columnRF14 = MyBase.Columns("RF14")
            Me.columnRF15 = MyBase.Columns("RF15")
            Me.columnZONE_HP = MyBase.Columns("ZONE_HP")
            Me.columnRTC_HP = MyBase.Columns("RTC_HP")
            Me.columnPNP_HP = MyBase.Columns("PNP_HP")
            Me.columnFISCAL_HP = MyBase.Columns("FISCAL_HP")
            Me.columnBUILDING_HP = MyBase.Columns("BUILDING_HP")
            Me.columnMECHANICAL_HP = MyBase.Columns("MECHANICAL_HP")
            Me.columnELECTRICAL_HP = MyBase.Columns("ELECTRICAL_HP")
            Me.columnPLUMBING_HP = MyBase.Columns("PLUMBING_HP")
            Me.columnSIGNBILL_HP = MyBase.Columns("SIGNBILL_HP")
            Me.columnOTHER_HP = MyBase.Columns("OTHER_HP")
            Me.columnSTICKER_HP = MyBase.Columns("STICKER_HP")
            Me.columnMEDICAL_HP = MyBase.Columns("MEDICAL_HP")
            Me.columnWMEASURES_HP = MyBase.Columns("WMEASURES_HP")
            Me.columnFIRECODE_HP = MyBase.Columns("FIRECODE_HP")
            Me.columnRF1_HP = MyBase.Columns("RF1_HP")
            Me.columnRF2_HP = MyBase.Columns("RF2_HP")
            Me.columnRF3_HP = MyBase.Columns("RF3_HP")
            Me.columnRF4_HP = MyBase.Columns("RF4_HP")
            Me.columnRF5_HP = MyBase.Columns("RF5_HP")
            Me.columnRF6_HP = MyBase.Columns("RF6_HP")
            Me.columnRF7_HP = MyBase.Columns("RF7_HP")
            Me.columnRF8_HP = MyBase.Columns("RF8_HP")
            Me.columnRF9_HP = MyBase.Columns("RF9_HP")
            Me.columnRF10_HP = MyBase.Columns("RF10_HP")
            Me.columnRF11_HP = MyBase.Columns("RF11_HP")
            Me.columnRF12_HP = MyBase.Columns("RF12_HP")
            Me.columnRF13_HP = MyBase.Columns("RF13_HP")
            Me.columnRF14_HP = MyBase.Columns("RF14_HP")
            Me.columnRF15_HP = MyBase.Columns("RF15_HP")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAcctno = New Global.System.Data.DataColumn("Acctno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctno)
            Me.columnForyear = New Global.System.Data.DataColumn("Foryear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForyear)
            Me.columnBus_Code = New Global.System.Data.DataColumn("Bus_Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBus_Code)
            Me.columnZONE = New Global.System.Data.DataColumn("ZONE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONE)
            Me.columnRTC = New Global.System.Data.DataColumn("RTC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRTC)
            Me.columnPNP = New Global.System.Data.DataColumn("PNP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNP)
            Me.columnFISCAL = New Global.System.Data.DataColumn("FISCAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFISCAL)
            Me.columnBUILDING = New Global.System.Data.DataColumn("BUILDING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUILDING)
            Me.columnMECHANICAL = New Global.System.Data.DataColumn("MECHANICAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMECHANICAL)
            Me.columnELECTRICAL = New Global.System.Data.DataColumn("ELECTRICAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELECTRICAL)
            Me.columnPLUMBING = New Global.System.Data.DataColumn("PLUMBING", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLUMBING)
            Me.columnSIGNBILL = New Global.System.Data.DataColumn("SIGNBILL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGNBILL)
            Me.columnOTHER = New Global.System.Data.DataColumn("OTHER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER)
            Me.columnSTICKER = New Global.System.Data.DataColumn("STICKER", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTICKER)
            Me.columnMEDICAL = New Global.System.Data.DataColumn("MEDICAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEDICAL)
            Me.columnWMEASURES = New Global.System.Data.DataColumn("WMEASURES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWMEASURES)
            Me.columnFIRECODE = New Global.System.Data.DataColumn("FIRECODE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRECODE)
            Me.columnRF1 = New Global.System.Data.DataColumn("RF1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF1)
            Me.columnRF2 = New Global.System.Data.DataColumn("RF2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF2)
            Me.columnRF3 = New Global.System.Data.DataColumn("RF3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF3)
            Me.columnRF4 = New Global.System.Data.DataColumn("RF4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF4)
            Me.columnRF5 = New Global.System.Data.DataColumn("RF5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF5)
            Me.columnRF6 = New Global.System.Data.DataColumn("RF6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF6)
            Me.columnRF7 = New Global.System.Data.DataColumn("RF7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF7)
            Me.columnRF8 = New Global.System.Data.DataColumn("RF8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF8)
            Me.columnRF9 = New Global.System.Data.DataColumn("RF9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF9)
            Me.columnRF10 = New Global.System.Data.DataColumn("RF10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF10)
            Me.columnRF11 = New Global.System.Data.DataColumn("RF11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF11)
            Me.columnRF12 = New Global.System.Data.DataColumn("RF12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF12)
            Me.columnRF13 = New Global.System.Data.DataColumn("RF13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF13)
            Me.columnRF14 = New Global.System.Data.DataColumn("RF14", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF14)
            Me.columnRF15 = New Global.System.Data.DataColumn("RF15", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF15)
            Me.columnZONE_HP = New Global.System.Data.DataColumn("ZONE_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnZONE_HP)
            Me.columnRTC_HP = New Global.System.Data.DataColumn("RTC_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRTC_HP)
            Me.columnPNP_HP = New Global.System.Data.DataColumn("PNP_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPNP_HP)
            Me.columnFISCAL_HP = New Global.System.Data.DataColumn("FISCAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFISCAL_HP)
            Me.columnBUILDING_HP = New Global.System.Data.DataColumn("BUILDING_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUILDING_HP)
            Me.columnMECHANICAL_HP = New Global.System.Data.DataColumn("MECHANICAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMECHANICAL_HP)
            Me.columnELECTRICAL_HP = New Global.System.Data.DataColumn("ELECTRICAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnELECTRICAL_HP)
            Me.columnPLUMBING_HP = New Global.System.Data.DataColumn("PLUMBING_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLUMBING_HP)
            Me.columnSIGNBILL_HP = New Global.System.Data.DataColumn("SIGNBILL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIGNBILL_HP)
            Me.columnOTHER_HP = New Global.System.Data.DataColumn("OTHER_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER_HP)
            Me.columnSTICKER_HP = New Global.System.Data.DataColumn("STICKER_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTICKER_HP)
            Me.columnMEDICAL_HP = New Global.System.Data.DataColumn("MEDICAL_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEDICAL_HP)
            Me.columnWMEASURES_HP = New Global.System.Data.DataColumn("WMEASURES_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWMEASURES_HP)
            Me.columnFIRECODE_HP = New Global.System.Data.DataColumn("FIRECODE_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRECODE_HP)
            Me.columnRF1_HP = New Global.System.Data.DataColumn("RF1_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF1_HP)
            Me.columnRF2_HP = New Global.System.Data.DataColumn("RF2_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF2_HP)
            Me.columnRF3_HP = New Global.System.Data.DataColumn("RF3_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF3_HP)
            Me.columnRF4_HP = New Global.System.Data.DataColumn("RF4_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF4_HP)
            Me.columnRF5_HP = New Global.System.Data.DataColumn("RF5_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF5_HP)
            Me.columnRF6_HP = New Global.System.Data.DataColumn("RF6_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF6_HP)
            Me.columnRF7_HP = New Global.System.Data.DataColumn("RF7_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF7_HP)
            Me.columnRF8_HP = New Global.System.Data.DataColumn("RF8_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF8_HP)
            Me.columnRF9_HP = New Global.System.Data.DataColumn("RF9_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF9_HP)
            Me.columnRF10_HP = New Global.System.Data.DataColumn("RF10_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF10_HP)
            Me.columnRF11_HP = New Global.System.Data.DataColumn("RF11_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF11_HP)
            Me.columnRF12_HP = New Global.System.Data.DataColumn("RF12_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF12_HP)
            Me.columnRF13_HP = New Global.System.Data.DataColumn("RF13_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF13_HP)
            Me.columnRF14_HP = New Global.System.Data.DataColumn("RF14_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF14_HP)
            Me.columnRF15_HP = New Global.System.Data.DataColumn("RF15_HP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF15_HP)
            Me.columnAcctno.MaxLength = 25
            Me.columnForyear.MaxLength = 10
            Me.columnBus_Code.MaxLength = 10
            Me.columnZONE_HP.MaxLength = 1
            Me.columnRTC_HP.MaxLength = 1
            Me.columnPNP_HP.MaxLength = 1
            Me.columnFISCAL_HP.MaxLength = 1
            Me.columnBUILDING_HP.MaxLength = 1
            Me.columnMECHANICAL_HP.MaxLength = 1
            Me.columnELECTRICAL_HP.MaxLength = 1
            Me.columnPLUMBING_HP.MaxLength = 1
            Me.columnSIGNBILL_HP.MaxLength = 1
            Me.columnOTHER_HP.MaxLength = 1
            Me.columnSTICKER_HP.MaxLength = 1
            Me.columnMEDICAL_HP.MaxLength = 1
            Me.columnWMEASURES_HP.MaxLength = 1
            Me.columnFIRECODE_HP.MaxLength = 1
            Me.columnRF1_HP.MaxLength = 1
            Me.columnRF2_HP.MaxLength = 1
            Me.columnRF3_HP.MaxLength = 1
            Me.columnRF4_HP.MaxLength = 1
            Me.columnRF5_HP.MaxLength = 1
            Me.columnRF6_HP.MaxLength = 1
            Me.columnRF7_HP.MaxLength = 1
            Me.columnRF8_HP.MaxLength = 1
            Me.columnRF9_HP.MaxLength = 1
            Me.columnRF10_HP.MaxLength = 1
            Me.columnRF11_HP.MaxLength = 1
            Me.columnRF12_HP.MaxLength = 1
            Me.columnRF13_HP.MaxLength = 1
            Me.columnRF14_HP.MaxLength = 1
            Me.columnRF15_HP.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewdennisenriquezADDLEXTNRow() As dennisenriquezADDLEXTNRow
            Return CType(Me.NewRow,dennisenriquezADDLEXTNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dennisenriquezADDLEXTNRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dennisenriquezADDLEXTNRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dennisenriquezADDLEXTNRowChangedEvent) Is Nothing) Then
                RaiseEvent dennisenriquezADDLEXTNRowChanged(Me, New dennisenriquezADDLEXTNRowChangeEvent(CType(e.Row,dennisenriquezADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dennisenriquezADDLEXTNRowChangingEvent) Is Nothing) Then
                RaiseEvent dennisenriquezADDLEXTNRowChanging(Me, New dennisenriquezADDLEXTNRowChangeEvent(CType(e.Row,dennisenriquezADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dennisenriquezADDLEXTNRowDeletedEvent) Is Nothing) Then
                RaiseEvent dennisenriquezADDLEXTNRowDeleted(Me, New dennisenriquezADDLEXTNRowChangeEvent(CType(e.Row,dennisenriquezADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dennisenriquezADDLEXTNRowDeletingEvent) Is Nothing) Then
                RaiseEvent dennisenriquezADDLEXTNRowDeleting(Me, New dennisenriquezADDLEXTNRowChangeEvent(CType(e.Row,dennisenriquezADDLEXTNRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovedennisenriquezADDLEXTNRow(ByVal row As dennisenriquezADDLEXTNRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dennisenriquezADDLEXTNDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DOC_TRACK2019DataTable
        Inherits Global.System.Data.TypedTableBase(Of DOC_TRACK2019Row)
        
        Private columnCounter As Global.System.Data.DataColumn
        
        Private columnForYear As Global.System.Data.DataColumn
        
        Private columnAcctno As Global.System.Data.DataColumn
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnProcessTime As Global.System.Data.DataColumn
        
        Private columnxTransaction As Global.System.Data.DataColumn
        
        Private columnNextStep As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnRemarks1 As Global.System.Data.DataColumn
        
        Private columnLoginName As Global.System.Data.DataColumn
        
        Private columnFullName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DOC_TRACK2019"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CounterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ForYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProcessTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcessTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xTransactionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxTransaction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NextStepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNextStep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Remarks1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LoginNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DOC_TRACK2019Row
            Get
                Return CType(Me.Rows(index),DOC_TRACK2019Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DOC_TRACK2019RowChanging As DOC_TRACK2019RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DOC_TRACK2019RowChanged As DOC_TRACK2019RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DOC_TRACK2019RowDeleting As DOC_TRACK2019RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DOC_TRACK2019RowDeleted As DOC_TRACK2019RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDOC_TRACK2019Row(ByVal row As DOC_TRACK2019Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDOC_TRACK2019Row(ByVal Counter As Integer, ByVal ForYear As String, ByVal Acctno As String, ByVal Name As String, ByVal Address As String, ByVal ProcessTime As Date, ByVal xTransaction As String, ByVal NextStep As String, ByVal Remarks As String, ByVal Remarks1 As String, ByVal LoginName As String, ByVal FullName As String) As DOC_TRACK2019Row
            Dim rowDOC_TRACK2019Row As DOC_TRACK2019Row = CType(Me.NewRow,DOC_TRACK2019Row)
            Dim columnValuesArray() As Object = New Object() {Counter, ForYear, Acctno, Name, Address, ProcessTime, xTransaction, NextStep, Remarks, Remarks1, LoginName, FullName}
            rowDOC_TRACK2019Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowDOC_TRACK2019Row)
            Return rowDOC_TRACK2019Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DOC_TRACK2019DataTable = CType(MyBase.Clone,DOC_TRACK2019DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DOC_TRACK2019DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCounter = MyBase.Columns("Counter")
            Me.columnForYear = MyBase.Columns("ForYear")
            Me.columnAcctno = MyBase.Columns("Acctno")
            Me.columnName = MyBase.Columns("Name")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnProcessTime = MyBase.Columns("ProcessTime")
            Me.columnxTransaction = MyBase.Columns("xTransaction")
            Me.columnNextStep = MyBase.Columns("NextStep")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnRemarks1 = MyBase.Columns("Remarks1")
            Me.columnLoginName = MyBase.Columns("LoginName")
            Me.columnFullName = MyBase.Columns("FullName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCounter = New Global.System.Data.DataColumn("Counter", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounter)
            Me.columnForYear = New Global.System.Data.DataColumn("ForYear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForYear)
            Me.columnAcctno = New Global.System.Data.DataColumn("Acctno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctno)
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnProcessTime = New Global.System.Data.DataColumn("ProcessTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcessTime)
            Me.columnxTransaction = New Global.System.Data.DataColumn("xTransaction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxTransaction)
            Me.columnNextStep = New Global.System.Data.DataColumn("NextStep", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNextStep)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnRemarks1 = New Global.System.Data.DataColumn("Remarks1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks1)
            Me.columnLoginName = New Global.System.Data.DataColumn("LoginName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginName)
            Me.columnFullName = New Global.System.Data.DataColumn("FullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullName)
            Me.columnForYear.MaxLength = 10
            Me.columnAcctno.MaxLength = 50
            Me.columnName.MaxLength = 255
            Me.columnAddress.MaxLength = 300
            Me.columnxTransaction.MaxLength = 255
            Me.columnNextStep.MaxLength = 255
            Me.columnRemarks.MaxLength = 300
            Me.columnRemarks1.MaxLength = 500
            Me.columnLoginName.MaxLength = 255
            Me.columnFullName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDOC_TRACK2019Row() As DOC_TRACK2019Row
            Return CType(Me.NewRow,DOC_TRACK2019Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DOC_TRACK2019Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DOC_TRACK2019Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DOC_TRACK2019RowChangedEvent) Is Nothing) Then
                RaiseEvent DOC_TRACK2019RowChanged(Me, New DOC_TRACK2019RowChangeEvent(CType(e.Row,DOC_TRACK2019Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DOC_TRACK2019RowChangingEvent) Is Nothing) Then
                RaiseEvent DOC_TRACK2019RowChanging(Me, New DOC_TRACK2019RowChangeEvent(CType(e.Row,DOC_TRACK2019Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DOC_TRACK2019RowDeletedEvent) Is Nothing) Then
                RaiseEvent DOC_TRACK2019RowDeleted(Me, New DOC_TRACK2019RowChangeEvent(CType(e.Row,DOC_TRACK2019Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DOC_TRACK2019RowDeletingEvent) Is Nothing) Then
                RaiseEvent DOC_TRACK2019RowDeleting(Me, New DOC_TRACK2019RowChangeEvent(CType(e.Row,DOC_TRACK2019Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDOC_TRACK2019Row(ByVal row As DOC_TRACK2019Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DOC_TRACK2019DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DOC_TRACK2022DataTable
        Inherits Global.System.Data.TypedTableBase(Of DOC_TRACK2022Row)
        
        Private columnCounter As Global.System.Data.DataColumn
        
        Private columnForYear As Global.System.Data.DataColumn
        
        Private columnAcctno As Global.System.Data.DataColumn
        
        Private columnName As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnProcessTime As Global.System.Data.DataColumn
        
        Private columnxTransaction As Global.System.Data.DataColumn
        
        Private columnNextStep As Global.System.Data.DataColumn
        
        Private columnRemarks As Global.System.Data.DataColumn
        
        Private columnRemarks1 As Global.System.Data.DataColumn
        
        Private columnLoginName As Global.System.Data.DataColumn
        
        Private columnFullName As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DOC_TRACK2022"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CounterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCounter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ForYearColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnForYear
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AcctnoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAcctno
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProcessTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProcessTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property xTransactionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnxTransaction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NextStepColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNextStep
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RemarksColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Remarks1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemarks1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LoginNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FullNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFullName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DOC_TRACK2022Row
            Get
                Return CType(Me.Rows(index),DOC_TRACK2022Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DOC_TRACK2022RowChanging As DOC_TRACK2022RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DOC_TRACK2022RowChanged As DOC_TRACK2022RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DOC_TRACK2022RowDeleting As DOC_TRACK2022RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DOC_TRACK2022RowDeleted As DOC_TRACK2022RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDOC_TRACK2022Row(ByVal row As DOC_TRACK2022Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDOC_TRACK2022Row(ByVal Counter As Integer, ByVal ForYear As String, ByVal Acctno As String, ByVal Name As String, ByVal Address As String, ByVal ProcessTime As Date, ByVal xTransaction As String, ByVal NextStep As String, ByVal Remarks As String, ByVal Remarks1 As String, ByVal LoginName As String, ByVal FullName As String) As DOC_TRACK2022Row
            Dim rowDOC_TRACK2022Row As DOC_TRACK2022Row = CType(Me.NewRow,DOC_TRACK2022Row)
            Dim columnValuesArray() As Object = New Object() {Counter, ForYear, Acctno, Name, Address, ProcessTime, xTransaction, NextStep, Remarks, Remarks1, LoginName, FullName}
            rowDOC_TRACK2022Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowDOC_TRACK2022Row)
            Return rowDOC_TRACK2022Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DOC_TRACK2022DataTable = CType(MyBase.Clone,DOC_TRACK2022DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DOC_TRACK2022DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCounter = MyBase.Columns("Counter")
            Me.columnForYear = MyBase.Columns("ForYear")
            Me.columnAcctno = MyBase.Columns("Acctno")
            Me.columnName = MyBase.Columns("Name")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnProcessTime = MyBase.Columns("ProcessTime")
            Me.columnxTransaction = MyBase.Columns("xTransaction")
            Me.columnNextStep = MyBase.Columns("NextStep")
            Me.columnRemarks = MyBase.Columns("Remarks")
            Me.columnRemarks1 = MyBase.Columns("Remarks1")
            Me.columnLoginName = MyBase.Columns("LoginName")
            Me.columnFullName = MyBase.Columns("FullName")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCounter = New Global.System.Data.DataColumn("Counter", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCounter)
            Me.columnForYear = New Global.System.Data.DataColumn("ForYear", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnForYear)
            Me.columnAcctno = New Global.System.Data.DataColumn("Acctno", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAcctno)
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnProcessTime = New Global.System.Data.DataColumn("ProcessTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProcessTime)
            Me.columnxTransaction = New Global.System.Data.DataColumn("xTransaction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnxTransaction)
            Me.columnNextStep = New Global.System.Data.DataColumn("NextStep", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNextStep)
            Me.columnRemarks = New Global.System.Data.DataColumn("Remarks", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks)
            Me.columnRemarks1 = New Global.System.Data.DataColumn("Remarks1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemarks1)
            Me.columnLoginName = New Global.System.Data.DataColumn("LoginName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginName)
            Me.columnFullName = New Global.System.Data.DataColumn("FullName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFullName)
            Me.columnForYear.MaxLength = 10
            Me.columnAcctno.MaxLength = 50
            Me.columnName.MaxLength = 255
            Me.columnAddress.MaxLength = 300
            Me.columnxTransaction.MaxLength = 255
            Me.columnNextStep.MaxLength = 255
            Me.columnRemarks.MaxLength = 300
            Me.columnRemarks1.MaxLength = 500
            Me.columnLoginName.MaxLength = 255
            Me.columnFullName.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDOC_TRACK2022Row() As DOC_TRACK2022Row
            Return CType(Me.NewRow,DOC_TRACK2022Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DOC_TRACK2022Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DOC_TRACK2022Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DOC_TRACK2022RowChangedEvent) Is Nothing) Then
                RaiseEvent DOC_TRACK2022RowChanged(Me, New DOC_TRACK2022RowChangeEvent(CType(e.Row,DOC_TRACK2022Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DOC_TRACK2022RowChangingEvent) Is Nothing) Then
                RaiseEvent DOC_TRACK2022RowChanging(Me, New DOC_TRACK2022RowChangeEvent(CType(e.Row,DOC_TRACK2022Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DOC_TRACK2022RowDeletedEvent) Is Nothing) Then
                RaiseEvent DOC_TRACK2022RowDeleted(Me, New DOC_TRACK2022RowChangeEvent(CType(e.Row,DOC_TRACK2022Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DOC_TRACK2022RowDeletingEvent) Is Nothing) Then
                RaiseEvent DOC_TRACK2022RowDeleting(Me, New DOC_TRACK2022RowChangeEvent(CType(e.Row,DOC_TRACK2022Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDOC_TRACK2022Row(ByVal row As DOC_TRACK2022Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DOC_TRACK2022DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ItemCodeSetupDataTable
        Inherits Global.System.Data.TypedTableBase(Of ItemCodeSetupRow)
        
        Private columnRecordNo As Global.System.Data.DataColumn
        
        Private columnDateInput As Global.System.Data.DataColumn
        
        Private columnItemCode As Global.System.Data.DataColumn
        
        Private columnItemDesc As Global.System.Data.DataColumn
        
        Private columnTotSupply As Global.System.Data.DataColumn
        
        Private columnTotSupplyLeft As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ItemCodeSetup"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RecordNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRecordNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DateInputColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateInput
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemCodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ItemDescColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnItemDesc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotSupplyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotSupply
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotSupplyLeftColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotSupplyLeft
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ItemCodeSetupRow
            Get
                Return CType(Me.Rows(index),ItemCodeSetupRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemCodeSetupRowChanging As ItemCodeSetupRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemCodeSetupRowChanged As ItemCodeSetupRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemCodeSetupRowDeleting As ItemCodeSetupRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ItemCodeSetupRowDeleted As ItemCodeSetupRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddItemCodeSetupRow(ByVal row As ItemCodeSetupRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddItemCodeSetupRow(ByVal RecordNo As String, ByVal DateInput As String, ByVal ItemCode As String, ByVal ItemDesc As String, ByVal TotSupply As String, ByVal TotSupplyLeft As String) As ItemCodeSetupRow
            Dim rowItemCodeSetupRow As ItemCodeSetupRow = CType(Me.NewRow,ItemCodeSetupRow)
            Dim columnValuesArray() As Object = New Object() {RecordNo, DateInput, ItemCode, ItemDesc, TotSupply, TotSupplyLeft}
            rowItemCodeSetupRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowItemCodeSetupRow)
            Return rowItemCodeSetupRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ItemCodeSetupDataTable = CType(MyBase.Clone,ItemCodeSetupDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ItemCodeSetupDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnRecordNo = MyBase.Columns("RecordNo")
            Me.columnDateInput = MyBase.Columns("DateInput")
            Me.columnItemCode = MyBase.Columns("ItemCode")
            Me.columnItemDesc = MyBase.Columns("ItemDesc")
            Me.columnTotSupply = MyBase.Columns("TotSupply")
            Me.columnTotSupplyLeft = MyBase.Columns("TotSupplyLeft")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnRecordNo = New Global.System.Data.DataColumn("RecordNo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRecordNo)
            Me.columnDateInput = New Global.System.Data.DataColumn("DateInput", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateInput)
            Me.columnItemCode = New Global.System.Data.DataColumn("ItemCode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemCode)
            Me.columnItemDesc = New Global.System.Data.DataColumn("ItemDesc", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnItemDesc)
            Me.columnTotSupply = New Global.System.Data.DataColumn("TotSupply", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotSupply)
            Me.columnTotSupplyLeft = New Global.System.Data.DataColumn("TotSupplyLeft", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotSupplyLeft)
            Me.columnRecordNo.MaxLength = 50
            Me.columnDateInput.MaxLength = 50
            Me.columnItemCode.MaxLength = 50
            Me.columnItemDesc.MaxLength = 50
            Me.columnTotSupply.MaxLength = 50
            Me.columnTotSupplyLeft.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewItemCodeSetupRow() As ItemCodeSetupRow
            Return CType(Me.NewRow,ItemCodeSetupRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ItemCodeSetupRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ItemCodeSetupRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ItemCodeSetupRowChangedEvent) Is Nothing) Then
                RaiseEvent ItemCodeSetupRowChanged(Me, New ItemCodeSetupRowChangeEvent(CType(e.Row,ItemCodeSetupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ItemCodeSetupRowChangingEvent) Is Nothing) Then
                RaiseEvent ItemCodeSetupRowChanging(Me, New ItemCodeSetupRowChangeEvent(CType(e.Row,ItemCodeSetupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ItemCodeSetupRowDeletedEvent) Is Nothing) Then
                RaiseEvent ItemCodeSetupRowDeleted(Me, New ItemCodeSetupRowChangeEvent(CType(e.Row,ItemCodeSetupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ItemCodeSetupRowDeletingEvent) Is Nothing) Then
                RaiseEvent ItemCodeSetupRowDeleting(Me, New ItemCodeSetupRowChangeEvent(CType(e.Row,ItemCodeSetupRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveItemCodeSetupRow(ByVal row As ItemCodeSetupRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ItemCodeSetupDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SystemLogDataTable
        Inherits Global.System.Data.TypedTableBase(Of SystemLogRow)
        
        Private columnIP As Global.System.Data.DataColumn
        
        Private columnAppUser As Global.System.Data.DataColumn
        
        Private columnAppModule As Global.System.Data.DataColumn
        
        Private columnlogin_time As Global.System.Data.DataColumn
        
        Private columnLogInApp As Global.System.Data.DataColumn
        
        Private columnHostName As Global.System.Data.DataColumn
        
        Private columnAppName As Global.System.Data.DataColumn
        
        Private columnloginame As Global.System.Data.DataColumn
        
        Private columnnt_domain As Global.System.Data.DataColumn
        
        Private columnnt_username As Global.System.Data.DataColumn
        
        Private columnnet_address As Global.System.Data.DataColumn
        
        Private columnF_Name As Global.System.Data.DataColumn
        
        Private columnOBJ_ID As Global.System.Data.DataColumn
        
        Private columnKeyNum As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SystemLog"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AppUserColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppUser
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AppModuleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppModule
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property login_timeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlogin_time
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LogInAppColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLogInApp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HostNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHostName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AppNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property loginameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnloginame
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nt_domainColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnt_domain
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property nt_usernameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnt_username
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property net_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnet_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property F_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnF_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OBJ_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBJ_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SystemLogRow
            Get
                Return CType(Me.Rows(index),SystemLogRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemLogRowChanging As SystemLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemLogRowChanged As SystemLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemLogRowDeleting As SystemLogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemLogRowDeleted As SystemLogRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSystemLogRow(ByVal row As SystemLogRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSystemLogRow(ByVal IP As String, ByVal AppUser As String, ByVal AppModule As String, ByVal login_time As String, ByVal LogInApp As String, ByVal HostName As String, ByVal AppName As String, ByVal loginame As String, ByVal nt_domain As String, ByVal nt_username As String, ByVal net_address As String, ByVal F_Name As String, ByVal OBJ_ID As Integer) As SystemLogRow
            Dim rowSystemLogRow As SystemLogRow = CType(Me.NewRow,SystemLogRow)
            Dim columnValuesArray() As Object = New Object() {IP, AppUser, AppModule, login_time, LogInApp, HostName, AppName, loginame, nt_domain, nt_username, net_address, F_Name, OBJ_ID, Nothing}
            rowSystemLogRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSystemLogRow)
            Return rowSystemLogRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SystemLogDataTable = CType(MyBase.Clone,SystemLogDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SystemLogDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnIP = MyBase.Columns("IP")
            Me.columnAppUser = MyBase.Columns("AppUser")
            Me.columnAppModule = MyBase.Columns("AppModule")
            Me.columnlogin_time = MyBase.Columns("login_time")
            Me.columnLogInApp = MyBase.Columns("LogInApp")
            Me.columnHostName = MyBase.Columns("HostName")
            Me.columnAppName = MyBase.Columns("AppName")
            Me.columnloginame = MyBase.Columns("loginame")
            Me.columnnt_domain = MyBase.Columns("nt_domain")
            Me.columnnt_username = MyBase.Columns("nt_username")
            Me.columnnet_address = MyBase.Columns("net_address")
            Me.columnF_Name = MyBase.Columns("F_Name")
            Me.columnOBJ_ID = MyBase.Columns("OBJ_ID")
            Me.columnKeyNum = MyBase.Columns("KeyNum")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnIP = New Global.System.Data.DataColumn("IP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIP)
            Me.columnAppUser = New Global.System.Data.DataColumn("AppUser", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppUser)
            Me.columnAppModule = New Global.System.Data.DataColumn("AppModule", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppModule)
            Me.columnlogin_time = New Global.System.Data.DataColumn("login_time", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlogin_time)
            Me.columnLogInApp = New Global.System.Data.DataColumn("LogInApp", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLogInApp)
            Me.columnHostName = New Global.System.Data.DataColumn("HostName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHostName)
            Me.columnAppName = New Global.System.Data.DataColumn("AppName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppName)
            Me.columnloginame = New Global.System.Data.DataColumn("loginame", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnloginame)
            Me.columnnt_domain = New Global.System.Data.DataColumn("nt_domain", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnt_domain)
            Me.columnnt_username = New Global.System.Data.DataColumn("nt_username", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnt_username)
            Me.columnnet_address = New Global.System.Data.DataColumn("net_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnet_address)
            Me.columnF_Name = New Global.System.Data.DataColumn("F_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnF_Name)
            Me.columnOBJ_ID = New Global.System.Data.DataColumn("OBJ_ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBJ_ID)
            Me.columnKeyNum = New Global.System.Data.DataColumn("KeyNum", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyNum)
            Me.columnIP.MaxLength = 250
            Me.columnAppUser.MaxLength = 250
            Me.columnAppModule.MaxLength = 250
            Me.columnlogin_time.MaxLength = 50
            Me.columnLogInApp.MaxLength = 50
            Me.columnHostName.MaxLength = 250
            Me.columnAppName.MaxLength = 250
            Me.columnloginame.MaxLength = 250
            Me.columnnt_domain.MaxLength = 250
            Me.columnnt_username.MaxLength = 250
            Me.columnnet_address.MaxLength = 250
            Me.columnF_Name.MaxLength = 250
            Me.columnKeyNum.AutoIncrement = true
            Me.columnKeyNum.AutoIncrementSeed = -1
            Me.columnKeyNum.AutoIncrementStep = -1
            Me.columnKeyNum.AllowDBNull = false
            Me.columnKeyNum.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSystemLogRow() As SystemLogRow
            Return CType(Me.NewRow,SystemLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SystemLogRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SystemLogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SystemLogRowChangedEvent) Is Nothing) Then
                RaiseEvent SystemLogRowChanged(Me, New SystemLogRowChangeEvent(CType(e.Row,SystemLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SystemLogRowChangingEvent) Is Nothing) Then
                RaiseEvent SystemLogRowChanging(Me, New SystemLogRowChangeEvent(CType(e.Row,SystemLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SystemLogRowDeletedEvent) Is Nothing) Then
                RaiseEvent SystemLogRowDeleted(Me, New SystemLogRowChangeEvent(CType(e.Row,SystemLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SystemLogRowDeletingEvent) Is Nothing) Then
                RaiseEvent SystemLogRowDeleting(Me, New SystemLogRowChangeEvent(CType(e.Row,SystemLogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSystemLogRow(ByVal row As SystemLogRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SystemLogDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SystemTransDataTable
        Inherits Global.System.Data.TypedTableBase(Of SystemTransRow)
        
        Private columnlogin_time As Global.System.Data.DataColumn
        
        Private columnHostName As Global.System.Data.DataColumn
        
        Private columnTDN As Global.System.Data.DataColumn
        
        Private columnASSESSNO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SystemTrans"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property login_timeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlogin_time
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HostNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHostName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TDNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTDN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ASSESSNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASSESSNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SystemTransRow
            Get
                Return CType(Me.Rows(index),SystemTransRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemTransRowChanging As SystemTransRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemTransRowChanged As SystemTransRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemTransRowDeleting As SystemTransRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SystemTransRowDeleted As SystemTransRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSystemTransRow(ByVal row As SystemTransRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSystemTransRow(ByVal login_time As String, ByVal HostName As String, ByVal TDN As String, ByVal ASSESSNO As String) As SystemTransRow
            Dim rowSystemTransRow As SystemTransRow = CType(Me.NewRow,SystemTransRow)
            Dim columnValuesArray() As Object = New Object() {login_time, HostName, TDN, ASSESSNO}
            rowSystemTransRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSystemTransRow)
            Return rowSystemTransRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SystemTransDataTable = CType(MyBase.Clone,SystemTransDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SystemTransDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnlogin_time = MyBase.Columns("login_time")
            Me.columnHostName = MyBase.Columns("HostName")
            Me.columnTDN = MyBase.Columns("TDN")
            Me.columnASSESSNO = MyBase.Columns("ASSESSNO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnlogin_time = New Global.System.Data.DataColumn("login_time", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlogin_time)
            Me.columnHostName = New Global.System.Data.DataColumn("HostName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHostName)
            Me.columnTDN = New Global.System.Data.DataColumn("TDN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTDN)
            Me.columnASSESSNO = New Global.System.Data.DataColumn("ASSESSNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASSESSNO)
            Me.columnlogin_time.AllowDBNull = false
            Me.columnlogin_time.MaxLength = 50
            Me.columnHostName.AllowDBNull = false
            Me.columnHostName.MaxLength = 50
            Me.columnTDN.MaxLength = 50
            Me.columnASSESSNO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSystemTransRow() As SystemTransRow
            Return CType(Me.NewRow,SystemTransRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SystemTransRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SystemTransRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SystemTransRowChangedEvent) Is Nothing) Then
                RaiseEvent SystemTransRowChanged(Me, New SystemTransRowChangeEvent(CType(e.Row,SystemTransRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SystemTransRowChangingEvent) Is Nothing) Then
                RaiseEvent SystemTransRowChanging(Me, New SystemTransRowChangeEvent(CType(e.Row,SystemTransRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SystemTransRowDeletedEvent) Is Nothing) Then
                RaiseEvent SystemTransRowDeleted(Me, New SystemTransRowChangeEvent(CType(e.Row,SystemTransRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SystemTransRowDeletingEvent) Is Nothing) Then
                RaiseEvent SystemTransRowDeleting(Me, New SystemTransRowChangeEvent(CType(e.Row,SystemTransRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSystemTransRow(ByVal row As SystemTransRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SystemTransDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class UserControlDataTable
        Inherits Global.System.Data.TypedTableBase(Of UserControlRow)
        
        Private columnLoginName As Global.System.Data.DataColumn
        
        Private columnSystemAccess As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "UserControl"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LoginNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLoginName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SystemAccessColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSystemAccess
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As UserControlRow
            Get
                Return CType(Me.Rows(index),UserControlRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event UserControlRowChanging As UserControlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event UserControlRowChanged As UserControlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event UserControlRowDeleting As UserControlRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event UserControlRowDeleted As UserControlRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddUserControlRow(ByVal row As UserControlRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddUserControlRow(ByVal LoginName As String, ByVal SystemAccess As String) As UserControlRow
            Dim rowUserControlRow As UserControlRow = CType(Me.NewRow,UserControlRow)
            Dim columnValuesArray() As Object = New Object() {LoginName, SystemAccess}
            rowUserControlRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowUserControlRow)
            Return rowUserControlRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByLoginNameSystemAccess(ByVal LoginName As String, ByVal SystemAccess As String) As UserControlRow
            Return CType(Me.Rows.Find(New Object() {LoginName, SystemAccess}),UserControlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As UserControlDataTable = CType(MyBase.Clone,UserControlDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New UserControlDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnLoginName = MyBase.Columns("LoginName")
            Me.columnSystemAccess = MyBase.Columns("SystemAccess")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnLoginName = New Global.System.Data.DataColumn("LoginName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLoginName)
            Me.columnSystemAccess = New Global.System.Data.DataColumn("SystemAccess", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSystemAccess)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnLoginName, Me.columnSystemAccess}, true))
            Me.columnLoginName.AllowDBNull = false
            Me.columnLoginName.MaxLength = 50
            Me.columnSystemAccess.AllowDBNull = false
            Me.columnSystemAccess.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewUserControlRow() As UserControlRow
            Return CType(Me.NewRow,UserControlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New UserControlRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(UserControlRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.UserControlRowChangedEvent) Is Nothing) Then
                RaiseEvent UserControlRowChanged(Me, New UserControlRowChangeEvent(CType(e.Row,UserControlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.UserControlRowChangingEvent) Is Nothing) Then
                RaiseEvent UserControlRowChanging(Me, New UserControlRowChangeEvent(CType(e.Row,UserControlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.UserControlRowDeletedEvent) Is Nothing) Then
                RaiseEvent UserControlRowDeleted(Me, New UserControlRowChangeEvent(CType(e.Row,UserControlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.UserControlRowDeletingEvent) Is Nothing) Then
                RaiseEvent UserControlRowDeleting(Me, New UserControlRowChangeEvent(CType(e.Row,UserControlRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveUserControlRow(ByVal row As UserControlRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "UserControlDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Z_ASS_AUD_2020DataTable
        Inherits Global.System.Data.TypedTableBase(Of Z_ASS_AUD_2020Row)
        
        Private columnACCTNO As Global.System.Data.DataColumn
        
        Private columnFORYEAR As Global.System.Data.DataColumn
        
        Private columnBUS_CODE As Global.System.Data.DataColumn
        
        Private columnSTATCODE As Global.System.Data.DataColumn
        
        Private columnGARBAGE As Global.System.Data.DataColumn
        
        Private columnMAYORS As Global.System.Data.DataColumn
        
        Private columnSANITARY As Global.System.Data.DataColumn
        
        Private columnFIRE As Global.System.Data.DataColumn
        
        Private columnGARBAGE_O As Global.System.Data.DataColumn
        
        Private columnSanitary_O As Global.System.Data.DataColumn
        
        Private columnFIRE_O As Global.System.Data.DataColumn
        
        Private columnRF12 As Global.System.Data.DataColumn
        
        Private columnDate_Processed As Global.System.Data.DataColumn
        
        Private columnMODULE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Z_ASS_AUD_2020"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACCTNOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACCTNO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FORYEARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFORYEAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BUS_CODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBUS_CODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STATCODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTATCODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GARBAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGARBAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MAYORSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAYORS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SANITARYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSANITARY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GARBAGE_OColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGARBAGE_O
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Sanitary_OColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSanitary_O
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FIRE_OColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFIRE_O
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RF12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnRF12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Date_ProcessedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDate_Processed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODULEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODULE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Z_ASS_AUD_2020Row
            Get
                Return CType(Me.Rows(index),Z_ASS_AUD_2020Row)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Z_ASS_AUD_2020RowChanging As Z_ASS_AUD_2020RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Z_ASS_AUD_2020RowChanged As Z_ASS_AUD_2020RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Z_ASS_AUD_2020RowDeleting As Z_ASS_AUD_2020RowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Z_ASS_AUD_2020RowDeleted As Z_ASS_AUD_2020RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddZ_ASS_AUD_2020Row(ByVal row As Z_ASS_AUD_2020Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddZ_ASS_AUD_2020Row(ByVal ACCTNO As String, ByVal FORYEAR As String, ByVal BUS_CODE As String, ByVal STATCODE As String, ByVal GARBAGE As Decimal, ByVal MAYORS As Decimal, ByVal SANITARY As Decimal, ByVal FIRE As Decimal, ByVal GARBAGE_O As Decimal, ByVal Sanitary_O As Decimal, ByVal FIRE_O As Decimal, ByVal RF12 As Decimal, ByVal Date_Processed As Date, ByVal _MODULE As String) As Z_ASS_AUD_2020Row
            Dim rowZ_ASS_AUD_2020Row As Z_ASS_AUD_2020Row = CType(Me.NewRow,Z_ASS_AUD_2020Row)
            Dim columnValuesArray() As Object = New Object() {ACCTNO, FORYEAR, BUS_CODE, STATCODE, GARBAGE, MAYORS, SANITARY, FIRE, GARBAGE_O, Sanitary_O, FIRE_O, RF12, Date_Processed, _MODULE}
            rowZ_ASS_AUD_2020Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowZ_ASS_AUD_2020Row)
            Return rowZ_ASS_AUD_2020Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Z_ASS_AUD_2020DataTable = CType(MyBase.Clone,Z_ASS_AUD_2020DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Z_ASS_AUD_2020DataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnACCTNO = MyBase.Columns("ACCTNO")
            Me.columnFORYEAR = MyBase.Columns("FORYEAR")
            Me.columnBUS_CODE = MyBase.Columns("BUS_CODE")
            Me.columnSTATCODE = MyBase.Columns("STATCODE")
            Me.columnGARBAGE = MyBase.Columns("GARBAGE")
            Me.columnMAYORS = MyBase.Columns("MAYORS")
            Me.columnSANITARY = MyBase.Columns("SANITARY")
            Me.columnFIRE = MyBase.Columns("FIRE")
            Me.columnGARBAGE_O = MyBase.Columns("GARBAGE_O")
            Me.columnSanitary_O = MyBase.Columns("Sanitary_O")
            Me.columnFIRE_O = MyBase.Columns("FIRE_O")
            Me.columnRF12 = MyBase.Columns("RF12")
            Me.columnDate_Processed = MyBase.Columns("Date_Processed")
            Me.columnMODULE = MyBase.Columns("MODULE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnACCTNO = New Global.System.Data.DataColumn("ACCTNO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACCTNO)
            Me.columnFORYEAR = New Global.System.Data.DataColumn("FORYEAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFORYEAR)
            Me.columnBUS_CODE = New Global.System.Data.DataColumn("BUS_CODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBUS_CODE)
            Me.columnSTATCODE = New Global.System.Data.DataColumn("STATCODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTATCODE)
            Me.columnGARBAGE = New Global.System.Data.DataColumn("GARBAGE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGARBAGE)
            Me.columnMAYORS = New Global.System.Data.DataColumn("MAYORS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAYORS)
            Me.columnSANITARY = New Global.System.Data.DataColumn("SANITARY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSANITARY)
            Me.columnFIRE = New Global.System.Data.DataColumn("FIRE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRE)
            Me.columnGARBAGE_O = New Global.System.Data.DataColumn("GARBAGE_O", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGARBAGE_O)
            Me.columnSanitary_O = New Global.System.Data.DataColumn("Sanitary_O", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSanitary_O)
            Me.columnFIRE_O = New Global.System.Data.DataColumn("FIRE_O", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFIRE_O)
            Me.columnRF12 = New Global.System.Data.DataColumn("RF12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRF12)
            Me.columnDate_Processed = New Global.System.Data.DataColumn("Date_Processed", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDate_Processed)
            Me.columnMODULE = New Global.System.Data.DataColumn("MODULE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnMODULE.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "MODULEColumn")
            Me.columnMODULE.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnMODULE")
            Me.columnMODULE.ExtendedProperties.Add("Generator_UserColumnName", "MODULE")
            MyBase.Columns.Add(Me.columnMODULE)
            Me.columnACCTNO.MaxLength = 20
            Me.columnFORYEAR.MaxLength = 10
            Me.columnBUS_CODE.MaxLength = 10
            Me.columnSTATCODE.MaxLength = 1
            Me.columnMODULE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewZ_ASS_AUD_2020Row() As Z_ASS_AUD_2020Row
            Return CType(Me.NewRow,Z_ASS_AUD_2020Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Z_ASS_AUD_2020Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Z_ASS_AUD_2020Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Z_ASS_AUD_2020RowChangedEvent) Is Nothing) Then
                RaiseEvent Z_ASS_AUD_2020RowChanged(Me, New Z_ASS_AUD_2020RowChangeEvent(CType(e.Row,Z_ASS_AUD_2020Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Z_ASS_AUD_2020RowChangingEvent) Is Nothing) Then
                RaiseEvent Z_ASS_AUD_2020RowChanging(Me, New Z_ASS_AUD_2020RowChangeEvent(CType(e.Row,Z_ASS_AUD_2020Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Z_ASS_AUD_2020RowDeletedEvent) Is Nothing) Then
                RaiseEvent Z_ASS_AUD_2020RowDeleted(Me, New Z_ASS_AUD_2020RowChangeEvent(CType(e.Row,Z_ASS_AUD_2020Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Z_ASS_AUD_2020RowDeletingEvent) Is Nothing) Then
                RaiseEvent Z_ASS_AUD_2020RowDeleting(Me, New Z_ASS_AUD_2020RowChangeEvent(CType(e.Row,Z_ASS_AUD_2020Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveZ_ASS_AUD_2020Row(ByVal row As Z_ASS_AUD_2020Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As BPTOP2023_1 = New BPTOP2023_1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Z_ASS_AUD_2020DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class adminADDLEXTNRow
        Inherits Global.System.Data.DataRow
        
        Private tableadminADDLEXTN As adminADDLEXTNDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableadminADDLEXTN = CType(Me.Table,adminADDLEXTNDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Acctno() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.AcctnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Acctno' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.AcctnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Foryear() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.ForyearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Foryear' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.ForyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bus_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.Bus_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bus_Code' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.Bus_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZONE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.ZONEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZONE' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.ZONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RTC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RTCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RTC' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.PNPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.PNPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FISCAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.FISCALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FISCAL' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.FISCALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BUILDING() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.BUILDINGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUILDING' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.BUILDINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MECHANICAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.MECHANICALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MECHANICAL' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.MECHANICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ELECTRICAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.ELECTRICALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELECTRICAL' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.ELECTRICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLUMBING() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.PLUMBINGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLUMBING' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.PLUMBINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIGNBILL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.SIGNBILLColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGNBILL' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.SIGNBILLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTHER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.OTHERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STICKER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.STICKERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STICKER' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.STICKERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEDICAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.MEDICALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEDICAL' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.MEDICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WMEASURES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.WMEASURESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WMEASURES' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.WMEASURESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIRECODE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.FIRECODEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRECODE' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.FIRECODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF1' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF2' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF3' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF4' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF5' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF6' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF7' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF8' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF9' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF10' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF11' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF12' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF13() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF13Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF13' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF14() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF14Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF14' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF15() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF15Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF15' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZONE_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.ZONE_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZONE_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.ZONE_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RTC_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RTC_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RTC_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RTC_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNP_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.PNP_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNP_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.PNP_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FISCAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.FISCAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FISCAL_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.FISCAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BUILDING_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.BUILDING_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUILDING_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.BUILDING_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MECHANICAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.MECHANICAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MECHANICAL_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.MECHANICAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ELECTRICAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.ELECTRICAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELECTRICAL_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.ELECTRICAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLUMBING_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.PLUMBING_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLUMBING_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.PLUMBING_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIGNBILL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.SIGNBILL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGNBILL_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.SIGNBILL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTHER_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.OTHER_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.OTHER_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STICKER_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.STICKER_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STICKER_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.STICKER_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEDICAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.MEDICAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEDICAL_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.MEDICAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WMEASURES_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.WMEASURES_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WMEASURES_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.WMEASURES_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIRECODE_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.FIRECODE_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRECODE_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.FIRECODE_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF1_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF1_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF1_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF1_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF2_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF2_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF2_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF2_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF3_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF3_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF3_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF3_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF4_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF4_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF4_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF4_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF5_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF5_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF5_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF5_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF6_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF6_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF6_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF6_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF7_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF7_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF7_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF7_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF8_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF8_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF8_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF8_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF9_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF9_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF9_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF9_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF10_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF10_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF10_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF10_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF11_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF11_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF11_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF11_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF12_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF12_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF12_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF12_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF13_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF13_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF13_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF13_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF14_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF14_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF14_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF14_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF15_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tableadminADDLEXTN.RF15_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF15_HP' in table 'adminADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableadminADDLEXTN.RF15_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctnoNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.AcctnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctnoNull()
            Me(Me.tableadminADDLEXTN.AcctnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForyearNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.ForyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForyearNull()
            Me(Me.tableadminADDLEXTN.ForyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBus_CodeNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.Bus_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBus_CodeNull()
            Me(Me.tableadminADDLEXTN.Bus_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZONENull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.ZONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZONENull()
            Me(Me.tableadminADDLEXTN.ZONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRTCNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RTCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRTCNull()
            Me(Me.tableadminADDLEXTN.RTCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPNPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.PNPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPNPNull()
            Me(Me.tableadminADDLEXTN.PNPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFISCALNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.FISCALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFISCALNull()
            Me(Me.tableadminADDLEXTN.FISCALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBUILDINGNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.BUILDINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBUILDINGNull()
            Me(Me.tableadminADDLEXTN.BUILDINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMECHANICALNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.MECHANICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMECHANICALNull()
            Me(Me.tableadminADDLEXTN.MECHANICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsELECTRICALNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.ELECTRICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetELECTRICALNull()
            Me(Me.tableadminADDLEXTN.ELECTRICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLUMBINGNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.PLUMBINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLUMBINGNull()
            Me(Me.tableadminADDLEXTN.PLUMBINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIGNBILLNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.SIGNBILLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIGNBILLNull()
            Me(Me.tableadminADDLEXTN.SIGNBILLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTHERNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTHERNull()
            Me(Me.tableadminADDLEXTN.OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTICKERNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.STICKERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTICKERNull()
            Me(Me.tableadminADDLEXTN.STICKERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEDICALNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.MEDICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEDICALNull()
            Me(Me.tableadminADDLEXTN.MEDICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWMEASURESNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.WMEASURESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWMEASURESNull()
            Me(Me.tableadminADDLEXTN.WMEASURESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIRECODENull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.FIRECODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIRECODENull()
            Me(Me.tableadminADDLEXTN.FIRECODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF1Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF1Null()
            Me(Me.tableadminADDLEXTN.RF1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF2Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF2Null()
            Me(Me.tableadminADDLEXTN.RF2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF3Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF3Null()
            Me(Me.tableadminADDLEXTN.RF3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF4Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF4Null()
            Me(Me.tableadminADDLEXTN.RF4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF5Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF5Null()
            Me(Me.tableadminADDLEXTN.RF5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF6Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF6Null()
            Me(Me.tableadminADDLEXTN.RF6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF7Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF7Null()
            Me(Me.tableadminADDLEXTN.RF7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF8Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF8Null()
            Me(Me.tableadminADDLEXTN.RF8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF9Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF9Null()
            Me(Me.tableadminADDLEXTN.RF9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF10Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF10Null()
            Me(Me.tableadminADDLEXTN.RF10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF11Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF11Null()
            Me(Me.tableadminADDLEXTN.RF11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF12Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF12Null()
            Me(Me.tableadminADDLEXTN.RF12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF13Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF13Null()
            Me(Me.tableadminADDLEXTN.RF13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF14Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF14Null()
            Me(Me.tableadminADDLEXTN.RF14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF15Null() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF15Null()
            Me(Me.tableadminADDLEXTN.RF15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZONE_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.ZONE_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZONE_HPNull()
            Me(Me.tableadminADDLEXTN.ZONE_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRTC_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RTC_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRTC_HPNull()
            Me(Me.tableadminADDLEXTN.RTC_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPNP_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.PNP_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPNP_HPNull()
            Me(Me.tableadminADDLEXTN.PNP_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFISCAL_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.FISCAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFISCAL_HPNull()
            Me(Me.tableadminADDLEXTN.FISCAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBUILDING_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.BUILDING_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBUILDING_HPNull()
            Me(Me.tableadminADDLEXTN.BUILDING_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMECHANICAL_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.MECHANICAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMECHANICAL_HPNull()
            Me(Me.tableadminADDLEXTN.MECHANICAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsELECTRICAL_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.ELECTRICAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetELECTRICAL_HPNull()
            Me(Me.tableadminADDLEXTN.ELECTRICAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLUMBING_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.PLUMBING_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLUMBING_HPNull()
            Me(Me.tableadminADDLEXTN.PLUMBING_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIGNBILL_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.SIGNBILL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIGNBILL_HPNull()
            Me(Me.tableadminADDLEXTN.SIGNBILL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTHER_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.OTHER_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTHER_HPNull()
            Me(Me.tableadminADDLEXTN.OTHER_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTICKER_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.STICKER_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTICKER_HPNull()
            Me(Me.tableadminADDLEXTN.STICKER_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEDICAL_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.MEDICAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEDICAL_HPNull()
            Me(Me.tableadminADDLEXTN.MEDICAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWMEASURES_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.WMEASURES_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWMEASURES_HPNull()
            Me(Me.tableadminADDLEXTN.WMEASURES_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIRECODE_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.FIRECODE_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIRECODE_HPNull()
            Me(Me.tableadminADDLEXTN.FIRECODE_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF1_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF1_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF1_HPNull()
            Me(Me.tableadminADDLEXTN.RF1_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF2_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF2_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF2_HPNull()
            Me(Me.tableadminADDLEXTN.RF2_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF3_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF3_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF3_HPNull()
            Me(Me.tableadminADDLEXTN.RF3_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF4_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF4_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF4_HPNull()
            Me(Me.tableadminADDLEXTN.RF4_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF5_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF5_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF5_HPNull()
            Me(Me.tableadminADDLEXTN.RF5_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF6_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF6_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF6_HPNull()
            Me(Me.tableadminADDLEXTN.RF6_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF7_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF7_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF7_HPNull()
            Me(Me.tableadminADDLEXTN.RF7_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF8_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF8_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF8_HPNull()
            Me(Me.tableadminADDLEXTN.RF8_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF9_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF9_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF9_HPNull()
            Me(Me.tableadminADDLEXTN.RF9_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF10_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF10_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF10_HPNull()
            Me(Me.tableadminADDLEXTN.RF10_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF11_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF11_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF11_HPNull()
            Me(Me.tableadminADDLEXTN.RF11_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF12_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF12_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF12_HPNull()
            Me(Me.tableadminADDLEXTN.RF12_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF13_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF13_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF13_HPNull()
            Me(Me.tableadminADDLEXTN.RF13_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF14_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF14_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF14_HPNull()
            Me(Me.tableadminADDLEXTN.RF14_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF15_HPNull() As Boolean
            Return Me.IsNull(Me.tableadminADDLEXTN.RF15_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF15_HPNull()
            Me(Me.tableadminADDLEXTN.RF15_HPColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BankCodeRow
        Inherits Global.System.Data.DataRow
        
        Private tableBankCode As BankCodeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBankCode = CType(Me.Table,BankCodeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Code() As String
            Get
                Return CType(Me(Me.tableBankCode.CodeColumn),String)
            End Get
            Set
                Me(Me.tableBankCode.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableBankCode.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'BankCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBankCode.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateUpdated() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBankCode.DateUpdatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateUpdated' in table 'BankCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBankCode.DateUpdatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Updater() As String
            Get
                Try 
                    Return CType(Me(Me.tableBankCode.UpdaterColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Updater' in table 'BankCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBankCode.UpdaterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateEncoded() As Date
            Get
                Try 
                    Return CType(Me(Me.tableBankCode.DateEncodedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateEncoded' in table 'BankCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBankCode.DateEncodedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Encoder() As String
            Get
                Try 
                    Return CType(Me(Me.tableBankCode.EncoderColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Encoder' in table 'BankCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBankCode.EncoderColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property rg() As String
            Get
                Try 
                    Return CType(Me(Me.tableBankCode.rgColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'rg' in table 'BankCode' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBankCode.rgColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableBankCode.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableBankCode.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateUpdatedNull() As Boolean
            Return Me.IsNull(Me.tableBankCode.DateUpdatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateUpdatedNull()
            Me(Me.tableBankCode.DateUpdatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUpdaterNull() As Boolean
            Return Me.IsNull(Me.tableBankCode.UpdaterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUpdaterNull()
            Me(Me.tableBankCode.UpdaterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateEncodedNull() As Boolean
            Return Me.IsNull(Me.tableBankCode.DateEncodedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateEncodedNull()
            Me(Me.tableBankCode.DateEncodedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEncoderNull() As Boolean
            Return Me.IsNull(Me.tableBankCode.EncoderColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEncoderNull()
            Me(Me.tableBankCode.EncoderColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsrgNull() As Boolean
            Return Me.IsNull(Me.tableBankCode.rgColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetrgNull()
            Me(Me.tableBankCode.rgColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class chyRow
        Inherits Global.System.Data.DataRow
        
        Private tablechy As chyDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablechy = CType(Me.Table,chyDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Acctno() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.AcctnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Acctno' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.AcctnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Foryear() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.ForyearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Foryear' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.ForyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bus_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.Bus_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bus_Code' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.Bus_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Desc1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.Desc1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Desc1' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.Desc1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Taxbase() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.TaxbaseColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Taxbase' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.TaxbaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Annualdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.AnnualdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Annualdue' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.AnnualdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Taxdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.TaxdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Taxdue' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.TaxdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PenDue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.PenDueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PenDue' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.PenDueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Totdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.TotdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Totdue' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.TotdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_Pd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.Amt_PdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_Pd' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.Amt_PdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_PenPd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.Amt_PenPdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_PenPd' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.Amt_PenPdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.DiscountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Taxcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.TaxcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Taxcode' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.TaxcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevqtr() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.prevqtrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevqtr' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.prevqtrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qtryr1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.Qtryr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qtryr1' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.Qtryr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qtryr2() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.Qtryr2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qtryr2' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.Qtryr2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QtrPaid() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.QtrPaidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QtrPaid' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.QtrPaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks0() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.Remarks0Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks0' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.Remarks0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.Remarks1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks1' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.Remarks1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pres() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.PresColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pres' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.PresColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Prev() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.PrevColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Prev' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.PrevColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Statcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.StatcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Statcode' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.StatcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ASSESSNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.ASSESSNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASSESSNO' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.ASSESSNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Newsw() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.NewswColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Newsw' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.NewswColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModeP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.ModePColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModeP' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.ModePColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GradFix() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.GradFixColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GradFix' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.GradFixColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Capital() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.CapitalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Capital' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.CapitalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Xsort() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.XsortColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Xsort' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.XsortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.ORNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORNo' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.ORNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DatePaid() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy.DatePaidColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DatePaid' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.DatePaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BrgyCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.BrgyCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BrgyCode' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.BrgyCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LocaCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.LocaCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LocaCode' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.LocaCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property L_DatePD() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy.L_DatePDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'L_DatePD' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.L_DatePDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.MainAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctCode' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.MainAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.MainAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctDesc' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.MainAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.SubAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctCode' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.SubAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.SubAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctDesc' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.SubAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.MainAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctCodePen' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.MainAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.MainAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctDescPen' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.MainAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.SubAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctCodePen' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.SubAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.SubAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctDescPen' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.SubAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_Pd1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.Amt_Pd1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_Pd1' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.Amt_Pd1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_PenPd1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.Amt_PenPd1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_PenPd1' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.Amt_PenPd1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewAmt_Pd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.NewAmt_PdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewAmt_Pd' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.NewAmt_PdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewAmt_PenPd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.NewAmt_PenPdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewAmt_PenPd' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.NewAmt_PenPdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewTaxdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.NewTaxdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTaxdue' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.NewTaxdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewPenDue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.NewPenDueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewPenDue' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.NewPenDueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldName() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.FieldNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldName' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.FieldNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PrevGMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.PrevGMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevGMonth' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.PrevGMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GDateEsta() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy.GDateEstaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GDateEsta' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.GDateEstaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GMonthPaid() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.GMonthPaidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GMonthPaid' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.GMonthPaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATE_ESTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy.DATE_ESTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATE_ESTA' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.DATE_ESTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YearPeriod() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.YearPeriodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YearPeriod' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.YearPeriodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NotEdit() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.NotEditColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotEdit' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.NotEditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NotDel() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.NotDelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotDel' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.NotDelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AssessTotal() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.AssessTotalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AssessTotal' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.AssessTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UsedTCred() As Short
            Get
                Try 
                    Return CType(Me(Me.tablechy.UsedTCredColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UsedTCred' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.UsedTCredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ForClose() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.ForCloseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ForClose' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.ForCloseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xORNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xORNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xORNO' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xORNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSRS() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xSRSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSRS' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xSRSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xTotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.xTotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xTotal' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RASSESBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.RASSESBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RASSESBY' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.RASSESBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSQUENCELocal() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xSQUENCELocalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSQUENCELocal' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xSQUENCELocalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSQUENCEPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xSQUENCEPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSQUENCEPen' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xSQUENCEPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSQUENCE() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xSQUENCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSQUENCE' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xSQUENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Area() As Double
            Get
                Try 
                    Return CType(Me(Me.tablechy.AreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.AreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QDUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.QDUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QDUE' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.QDUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.ADUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADUE' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.ADUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.QAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QAMT' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.QAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.AAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AAMT' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.AAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.RES1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES1' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.RES1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.RES2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES2' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.RES2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.RES3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES3' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.RES3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.RES4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES4' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.RES4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES5() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.RES5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES5' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.RES5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsRegBill() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.IsRegBillColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsRegBill' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.IsRegBillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.RESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.RESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PenYear() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.PenYearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PenYear' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.PenYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NotDelete() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.NotDeleteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotDelete' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.NotDeleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.I_YEAR1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR1' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.I_YEAR1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.I_DISCOUNT1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT1' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.I_DISCOUNT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR2() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.I_YEAR2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR2' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.I_YEAR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.I_DISCOUNT2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT2' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.I_DISCOUNT2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR3() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.I_YEAR3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR3' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.I_YEAR3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.I_DISCOUNT3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT3' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.I_DISCOUNT3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR4() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.I_YEAR4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR4' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.I_YEAR4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.I_DISCOUNT4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT4' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.I_DISCOUNT4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EDITEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.EDITEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITEDBY' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.EDITEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.X1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X1' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.X1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X2() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.X2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X2' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.X2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X3() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.X3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X3' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.X3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X4() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.X4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X4' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.X4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X5() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.X5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X5' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.X5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BLGFSORT() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.BLGFSORTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BLGFSORT' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.BLGFSORTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Provision() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.ProvisionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Provision' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.ProvisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xMainAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctCode' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xMainAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xMainAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctDesc' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xMainAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xSubAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctCode' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xSubAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xSubAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctDesc' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xSubAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xMainAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctCodePen' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xMainAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xMainAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctDescPen' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xMainAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xSubAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctCodePen' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xSubAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.xSubAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctDescPen' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.xSubAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.TRANSTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSTYPE' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.TRANSTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORIGDUEFEEADJ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy.ORIGDUEFEEADJColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORIGDUEFEEADJ' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.ORIGDUEFEEADJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XDEPT() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.XDEPTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XDEPT' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.XDEPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FROMSP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.FROMSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FROMSP' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.FROMSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FEEPEN() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.FEEPENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FEEPEN' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.FEEPENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCT() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.PRODUCTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCT' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.PRODUCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BPLOTOIMS() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.BPLOTOIMSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BPLOTOIMS' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.BPLOTOIMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BILLTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.BILLTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BILLTYPE' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.BILLTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NEW5() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy.NEW5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NEW5' in table 'chy' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy.NEW5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctnoNull() As Boolean
            Return Me.IsNull(Me.tablechy.AcctnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctnoNull()
            Me(Me.tablechy.AcctnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForyearNull() As Boolean
            Return Me.IsNull(Me.tablechy.ForyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForyearNull()
            Me(Me.tablechy.ForyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBus_CodeNull() As Boolean
            Return Me.IsNull(Me.tablechy.Bus_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBus_CodeNull()
            Me(Me.tablechy.Bus_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDesc1Null() As Boolean
            Return Me.IsNull(Me.tablechy.Desc1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDesc1Null()
            Me(Me.tablechy.Desc1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxbaseNull() As Boolean
            Return Me.IsNull(Me.tablechy.TaxbaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxbaseNull()
            Me(Me.tablechy.TaxbaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnnualdueNull() As Boolean
            Return Me.IsNull(Me.tablechy.AnnualdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnnualdueNull()
            Me(Me.tablechy.AnnualdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxdueNull() As Boolean
            Return Me.IsNull(Me.tablechy.TaxdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxdueNull()
            Me(Me.tablechy.TaxdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPenDueNull() As Boolean
            Return Me.IsNull(Me.tablechy.PenDueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPenDueNull()
            Me(Me.tablechy.PenDueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotdueNull() As Boolean
            Return Me.IsNull(Me.tablechy.TotdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotdueNull()
            Me(Me.tablechy.TotdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_PdNull() As Boolean
            Return Me.IsNull(Me.tablechy.Amt_PdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_PdNull()
            Me(Me.tablechy.Amt_PdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_PenPdNull() As Boolean
            Return Me.IsNull(Me.tablechy.Amt_PenPdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_PenPdNull()
            Me(Me.tablechy.Amt_PenPdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiscountNull() As Boolean
            Return Me.IsNull(Me.tablechy.DiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiscountNull()
            Me(Me.tablechy.DiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxcodeNull() As Boolean
            Return Me.IsNull(Me.tablechy.TaxcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxcodeNull()
            Me(Me.tablechy.TaxcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevqtrNull() As Boolean
            Return Me.IsNull(Me.tablechy.prevqtrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevqtrNull()
            Me(Me.tablechy.prevqtrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtryr1Null() As Boolean
            Return Me.IsNull(Me.tablechy.Qtryr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtryr1Null()
            Me(Me.tablechy.Qtryr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtryr2Null() As Boolean
            Return Me.IsNull(Me.tablechy.Qtryr2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtryr2Null()
            Me(Me.tablechy.Qtryr2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtrPaidNull() As Boolean
            Return Me.IsNull(Me.tablechy.QtrPaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtrPaidNull()
            Me(Me.tablechy.QtrPaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarks0Null() As Boolean
            Return Me.IsNull(Me.tablechy.Remarks0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarks0Null()
            Me(Me.tablechy.Remarks0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarks1Null() As Boolean
            Return Me.IsNull(Me.tablechy.Remarks1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarks1Null()
            Me(Me.tablechy.Remarks1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPresNull() As Boolean
            Return Me.IsNull(Me.tablechy.PresColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPresNull()
            Me(Me.tablechy.PresColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrevNull() As Boolean
            Return Me.IsNull(Me.tablechy.PrevColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrevNull()
            Me(Me.tablechy.PrevColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatcodeNull() As Boolean
            Return Me.IsNull(Me.tablechy.StatcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatcodeNull()
            Me(Me.tablechy.StatcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsASSESSNONull() As Boolean
            Return Me.IsNull(Me.tablechy.ASSESSNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetASSESSNONull()
            Me(Me.tablechy.ASSESSNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewswNull() As Boolean
            Return Me.IsNull(Me.tablechy.NewswColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewswNull()
            Me(Me.tablechy.NewswColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModePNull() As Boolean
            Return Me.IsNull(Me.tablechy.ModePColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModePNull()
            Me(Me.tablechy.ModePColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGradFixNull() As Boolean
            Return Me.IsNull(Me.tablechy.GradFixColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGradFixNull()
            Me(Me.tablechy.GradFixColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCapitalNull() As Boolean
            Return Me.IsNull(Me.tablechy.CapitalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCapitalNull()
            Me(Me.tablechy.CapitalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXsortNull() As Boolean
            Return Me.IsNull(Me.tablechy.XsortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXsortNull()
            Me(Me.tablechy.XsortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORNoNull() As Boolean
            Return Me.IsNull(Me.tablechy.ORNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORNoNull()
            Me(Me.tablechy.ORNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDatePaidNull() As Boolean
            Return Me.IsNull(Me.tablechy.DatePaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDatePaidNull()
            Me(Me.tablechy.DatePaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBrgyCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy.BrgyCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBrgyCodeNull()
            Me(Me.tablechy.BrgyCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLocaCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy.LocaCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLocaCodeNull()
            Me(Me.tablechy.LocaCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsL_DatePDNull() As Boolean
            Return Me.IsNull(Me.tablechy.L_DatePDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetL_DatePDNull()
            Me(Me.tablechy.L_DatePDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy.MainAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctCodeNull()
            Me(Me.tablechy.MainAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy.MainAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctDescNull()
            Me(Me.tablechy.MainAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy.SubAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctCodeNull()
            Me(Me.tablechy.SubAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy.SubAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctDescNull()
            Me(Me.tablechy.SubAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy.MainAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctCodePenNull()
            Me(Me.tablechy.MainAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy.MainAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctDescPenNull()
            Me(Me.tablechy.MainAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy.SubAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctCodePenNull()
            Me(Me.tablechy.SubAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy.SubAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctDescPenNull()
            Me(Me.tablechy.SubAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_Pd1Null() As Boolean
            Return Me.IsNull(Me.tablechy.Amt_Pd1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_Pd1Null()
            Me(Me.tablechy.Amt_Pd1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_PenPd1Null() As Boolean
            Return Me.IsNull(Me.tablechy.Amt_PenPd1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_PenPd1Null()
            Me(Me.tablechy.Amt_PenPd1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewAmt_PdNull() As Boolean
            Return Me.IsNull(Me.tablechy.NewAmt_PdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewAmt_PdNull()
            Me(Me.tablechy.NewAmt_PdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewAmt_PenPdNull() As Boolean
            Return Me.IsNull(Me.tablechy.NewAmt_PenPdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewAmt_PenPdNull()
            Me(Me.tablechy.NewAmt_PenPdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewTaxdueNull() As Boolean
            Return Me.IsNull(Me.tablechy.NewTaxdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewTaxdueNull()
            Me(Me.tablechy.NewTaxdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewPenDueNull() As Boolean
            Return Me.IsNull(Me.tablechy.NewPenDueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewPenDueNull()
            Me(Me.tablechy.NewPenDueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldNameNull() As Boolean
            Return Me.IsNull(Me.tablechy.FieldNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldNameNull()
            Me(Me.tablechy.FieldNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrevGMonthNull() As Boolean
            Return Me.IsNull(Me.tablechy.PrevGMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrevGMonthNull()
            Me(Me.tablechy.PrevGMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGDateEstaNull() As Boolean
            Return Me.IsNull(Me.tablechy.GDateEstaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGDateEstaNull()
            Me(Me.tablechy.GDateEstaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGMonthPaidNull() As Boolean
            Return Me.IsNull(Me.tablechy.GMonthPaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGMonthPaidNull()
            Me(Me.tablechy.GMonthPaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATE_ESTANull() As Boolean
            Return Me.IsNull(Me.tablechy.DATE_ESTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATE_ESTANull()
            Me(Me.tablechy.DATE_ESTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYearPeriodNull() As Boolean
            Return Me.IsNull(Me.tablechy.YearPeriodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYearPeriodNull()
            Me(Me.tablechy.YearPeriodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotEditNull() As Boolean
            Return Me.IsNull(Me.tablechy.NotEditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotEditNull()
            Me(Me.tablechy.NotEditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotDelNull() As Boolean
            Return Me.IsNull(Me.tablechy.NotDelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotDelNull()
            Me(Me.tablechy.NotDelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAssessTotalNull() As Boolean
            Return Me.IsNull(Me.tablechy.AssessTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAssessTotalNull()
            Me(Me.tablechy.AssessTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUsedTCredNull() As Boolean
            Return Me.IsNull(Me.tablechy.UsedTCredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUsedTCredNull()
            Me(Me.tablechy.UsedTCredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForCloseNull() As Boolean
            Return Me.IsNull(Me.tablechy.ForCloseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForCloseNull()
            Me(Me.tablechy.ForCloseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxORNONull() As Boolean
            Return Me.IsNull(Me.tablechy.xORNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxORNONull()
            Me(Me.tablechy.xORNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSRSNull() As Boolean
            Return Me.IsNull(Me.tablechy.xSRSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSRSNull()
            Me(Me.tablechy.xSRSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxTotalNull() As Boolean
            Return Me.IsNull(Me.tablechy.xTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxTotalNull()
            Me(Me.tablechy.xTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRASSESBYNull() As Boolean
            Return Me.IsNull(Me.tablechy.RASSESBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRASSESBYNull()
            Me(Me.tablechy.RASSESBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSQUENCELocalNull() As Boolean
            Return Me.IsNull(Me.tablechy.xSQUENCELocalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSQUENCELocalNull()
            Me(Me.tablechy.xSQUENCELocalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSQUENCEPenNull() As Boolean
            Return Me.IsNull(Me.tablechy.xSQUENCEPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSQUENCEPenNull()
            Me(Me.tablechy.xSQUENCEPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSQUENCENull() As Boolean
            Return Me.IsNull(Me.tablechy.xSQUENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSQUENCENull()
            Me(Me.tablechy.xSQUENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaNull() As Boolean
            Return Me.IsNull(Me.tablechy.AreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaNull()
            Me(Me.tablechy.AreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQDUENull() As Boolean
            Return Me.IsNull(Me.tablechy.QDUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQDUENull()
            Me(Me.tablechy.QDUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADUENull() As Boolean
            Return Me.IsNull(Me.tablechy.ADUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADUENull()
            Me(Me.tablechy.ADUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQAMTNull() As Boolean
            Return Me.IsNull(Me.tablechy.QAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQAMTNull()
            Me(Me.tablechy.QAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAAMTNull() As Boolean
            Return Me.IsNull(Me.tablechy.AAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAAMTNull()
            Me(Me.tablechy.AAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES1Null() As Boolean
            Return Me.IsNull(Me.tablechy.RES1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES1Null()
            Me(Me.tablechy.RES1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES2Null() As Boolean
            Return Me.IsNull(Me.tablechy.RES2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES2Null()
            Me(Me.tablechy.RES2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES3Null() As Boolean
            Return Me.IsNull(Me.tablechy.RES3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES3Null()
            Me(Me.tablechy.RES3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES4Null() As Boolean
            Return Me.IsNull(Me.tablechy.RES4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES4Null()
            Me(Me.tablechy.RES4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES5Null() As Boolean
            Return Me.IsNull(Me.tablechy.RES5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES5Null()
            Me(Me.tablechy.RES5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsRegBillNull() As Boolean
            Return Me.IsNull(Me.tablechy.IsRegBillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsRegBillNull()
            Me(Me.tablechy.IsRegBillColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRESNull() As Boolean
            Return Me.IsNull(Me.tablechy.RESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRESNull()
            Me(Me.tablechy.RESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPenYearNull() As Boolean
            Return Me.IsNull(Me.tablechy.PenYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPenYearNull()
            Me(Me.tablechy.PenYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotDeleteNull() As Boolean
            Return Me.IsNull(Me.tablechy.NotDeleteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotDeleteNull()
            Me(Me.tablechy.NotDeleteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR1Null() As Boolean
            Return Me.IsNull(Me.tablechy.I_YEAR1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR1Null()
            Me(Me.tablechy.I_YEAR1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT1Null() As Boolean
            Return Me.IsNull(Me.tablechy.I_DISCOUNT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT1Null()
            Me(Me.tablechy.I_DISCOUNT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR2Null() As Boolean
            Return Me.IsNull(Me.tablechy.I_YEAR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR2Null()
            Me(Me.tablechy.I_YEAR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT2Null() As Boolean
            Return Me.IsNull(Me.tablechy.I_DISCOUNT2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT2Null()
            Me(Me.tablechy.I_DISCOUNT2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR3Null() As Boolean
            Return Me.IsNull(Me.tablechy.I_YEAR3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR3Null()
            Me(Me.tablechy.I_YEAR3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT3Null() As Boolean
            Return Me.IsNull(Me.tablechy.I_DISCOUNT3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT3Null()
            Me(Me.tablechy.I_DISCOUNT3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR4Null() As Boolean
            Return Me.IsNull(Me.tablechy.I_YEAR4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR4Null()
            Me(Me.tablechy.I_YEAR4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT4Null() As Boolean
            Return Me.IsNull(Me.tablechy.I_DISCOUNT4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT4Null()
            Me(Me.tablechy.I_DISCOUNT4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEDITEDBYNull() As Boolean
            Return Me.IsNull(Me.tablechy.EDITEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEDITEDBYNull()
            Me(Me.tablechy.EDITEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX1Null() As Boolean
            Return Me.IsNull(Me.tablechy.X1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX1Null()
            Me(Me.tablechy.X1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX2Null() As Boolean
            Return Me.IsNull(Me.tablechy.X2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX2Null()
            Me(Me.tablechy.X2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX3Null() As Boolean
            Return Me.IsNull(Me.tablechy.X3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX3Null()
            Me(Me.tablechy.X3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX4Null() As Boolean
            Return Me.IsNull(Me.tablechy.X4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX4Null()
            Me(Me.tablechy.X4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX5Null() As Boolean
            Return Me.IsNull(Me.tablechy.X5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX5Null()
            Me(Me.tablechy.X5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBLGFSORTNull() As Boolean
            Return Me.IsNull(Me.tablechy.BLGFSORTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBLGFSORTNull()
            Me(Me.tablechy.BLGFSORTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProvisionNull() As Boolean
            Return Me.IsNull(Me.tablechy.ProvisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProvisionNull()
            Me(Me.tablechy.ProvisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tablechy.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tablechy.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy.xMainAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctCodeNull()
            Me(Me.tablechy.xMainAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy.xMainAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctDescNull()
            Me(Me.tablechy.xMainAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy.xSubAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctCodeNull()
            Me(Me.tablechy.xSubAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy.xSubAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctDescNull()
            Me(Me.tablechy.xSubAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy.xMainAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctCodePenNull()
            Me(Me.tablechy.xMainAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy.xMainAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctDescPenNull()
            Me(Me.tablechy.xMainAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy.xSubAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctCodePenNull()
            Me(Me.tablechy.xSubAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy.xSubAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctDescPenNull()
            Me(Me.tablechy.xSubAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSTYPENull() As Boolean
            Return Me.IsNull(Me.tablechy.TRANSTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSTYPENull()
            Me(Me.tablechy.TRANSTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORIGDUEFEEADJNull() As Boolean
            Return Me.IsNull(Me.tablechy.ORIGDUEFEEADJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORIGDUEFEEADJNull()
            Me(Me.tablechy.ORIGDUEFEEADJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXDEPTNull() As Boolean
            Return Me.IsNull(Me.tablechy.XDEPTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXDEPTNull()
            Me(Me.tablechy.XDEPTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFROMSPNull() As Boolean
            Return Me.IsNull(Me.tablechy.FROMSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFROMSPNull()
            Me(Me.tablechy.FROMSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFEEPENNull() As Boolean
            Return Me.IsNull(Me.tablechy.FEEPENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFEEPENNull()
            Me(Me.tablechy.FEEPENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTNull() As Boolean
            Return Me.IsNull(Me.tablechy.PRODUCTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTNull()
            Me(Me.tablechy.PRODUCTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBPLOTOIMSNull() As Boolean
            Return Me.IsNull(Me.tablechy.BPLOTOIMSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBPLOTOIMSNull()
            Me(Me.tablechy.BPLOTOIMSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBILLTYPENull() As Boolean
            Return Me.IsNull(Me.tablechy.BILLTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBILLTYPENull()
            Me(Me.tablechy.BILLTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNEW5Null() As Boolean
            Return Me.IsNull(Me.tablechy.NEW5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNEW5Null()
            Me(Me.tablechy.NEW5Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class chy_1Row
        Inherits Global.System.Data.DataRow
        
        Private tablechy_1 As chy_1DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablechy_1 = CType(Me.Table,chy_1DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Acctno() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.AcctnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Acctno' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.AcctnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Foryear() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.ForyearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Foryear' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.ForyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bus_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.Bus_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bus_Code' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.Bus_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Desc1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.Desc1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Desc1' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.Desc1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Taxbase() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.TaxbaseColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Taxbase' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.TaxbaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Annualdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.AnnualdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Annualdue' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.AnnualdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Taxdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.TaxdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Taxdue' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.TaxdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PenDue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.PenDueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PenDue' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.PenDueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Totdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.TotdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Totdue' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.TotdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_Pd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.Amt_PdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_Pd' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.Amt_PdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_PenPd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.Amt_PenPdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_PenPd' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.Amt_PenPdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.DiscountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Taxcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.TaxcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Taxcode' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.TaxcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevqtr() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.prevqtrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevqtr' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.prevqtrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qtryr1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.Qtryr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qtryr1' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.Qtryr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qtryr2() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.Qtryr2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qtryr2' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.Qtryr2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QtrPaid() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.QtrPaidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QtrPaid' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.QtrPaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks0() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.Remarks0Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks0' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.Remarks0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.Remarks1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks1' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.Remarks1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pres() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.PresColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pres' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.PresColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Prev() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.PrevColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Prev' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.PrevColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Statcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.StatcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Statcode' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.StatcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ASSESSNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.ASSESSNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASSESSNO' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.ASSESSNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Newsw() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.NewswColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Newsw' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.NewswColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModeP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.ModePColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModeP' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.ModePColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GradFix() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.GradFixColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GradFix' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.GradFixColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Capital() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.CapitalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Capital' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.CapitalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Xsort() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.XsortColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Xsort' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.XsortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.ORNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORNo' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.ORNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DatePaid() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.DatePaidColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DatePaid' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.DatePaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BrgyCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.BrgyCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BrgyCode' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.BrgyCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LocaCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.LocaCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LocaCode' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.LocaCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property L_DatePD() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.L_DatePDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'L_DatePD' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.L_DatePDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.MainAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctCode' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.MainAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.MainAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctDesc' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.MainAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.SubAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctCode' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.SubAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.SubAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctDesc' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.SubAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.MainAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctCodePen' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.MainAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.MainAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctDescPen' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.MainAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.SubAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctCodePen' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.SubAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.SubAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctDescPen' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.SubAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_Pd1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.Amt_Pd1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_Pd1' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.Amt_Pd1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_PenPd1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.Amt_PenPd1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_PenPd1' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.Amt_PenPd1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewAmt_Pd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.NewAmt_PdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewAmt_Pd' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.NewAmt_PdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewAmt_PenPd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.NewAmt_PenPdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewAmt_PenPd' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.NewAmt_PenPdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewTaxdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.NewTaxdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTaxdue' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.NewTaxdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewPenDue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.NewPenDueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewPenDue' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.NewPenDueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldName() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.FieldNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldName' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.FieldNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PrevGMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.PrevGMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevGMonth' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.PrevGMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GDateEsta() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.GDateEstaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GDateEsta' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.GDateEstaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GMonthPaid() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.GMonthPaidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GMonthPaid' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.GMonthPaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATE_ESTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.DATE_ESTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATE_ESTA' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.DATE_ESTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YearPeriod() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.YearPeriodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YearPeriod' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.YearPeriodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NotEdit() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.NotEditColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotEdit' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.NotEditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NotDel() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.NotDelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotDel' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.NotDelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AssessTotal() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.AssessTotalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AssessTotal' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.AssessTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UsedTCred() As Short
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.UsedTCredColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UsedTCred' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.UsedTCredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ForClose() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.ForCloseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ForClose' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.ForCloseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xORNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xORNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xORNO' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xORNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSRS() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xSRSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSRS' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xSRSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xTotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xTotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xTotal' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RASSESBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.RASSESBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RASSESBY' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.RASSESBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSQUENCELocal() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xSQUENCELocalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSQUENCELocal' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xSQUENCELocalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSQUENCEPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xSQUENCEPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSQUENCEPen' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xSQUENCEPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSQUENCE() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xSQUENCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSQUENCE' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xSQUENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Area() As Double
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.AreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.AreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QDUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.QDUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QDUE' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.QDUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.ADUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADUE' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.ADUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.QAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QAMT' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.QAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.AAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AAMT' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.AAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.RES1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES1' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.RES1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.RES2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES2' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.RES2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.RES3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES3' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.RES3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.RES4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES4' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.RES4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES5() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.RES5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES5' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.RES5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsRegBill() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.IsRegBillColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsRegBill' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.IsRegBillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.RESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.RESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PenYear() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.PenYearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PenYear' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.PenYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NotDelete() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.NotDeleteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotDelete' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.NotDeleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.I_YEAR1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR1' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.I_YEAR1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.I_DISCOUNT1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT1' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.I_DISCOUNT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR2() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.I_YEAR2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR2' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.I_YEAR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.I_DISCOUNT2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT2' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.I_DISCOUNT2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR3() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.I_YEAR3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR3' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.I_YEAR3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.I_DISCOUNT3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT3' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.I_DISCOUNT3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR4() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.I_YEAR4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR4' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.I_YEAR4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.I_DISCOUNT4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT4' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.I_DISCOUNT4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EDITEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.EDITEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITEDBY' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.EDITEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.X1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X1' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.X1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X2() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.X2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X2' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.X2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X3() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.X3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X3' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.X3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X4() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.X4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X4' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.X4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X5() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.X5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X5' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.X5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BLGFSORT() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.BLGFSORTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BLGFSORT' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.BLGFSORTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Provision() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.ProvisionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Provision' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.ProvisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xMainAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctCode' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xMainAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xMainAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctDesc' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xMainAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xSubAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctCode' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xSubAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xSubAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctDesc' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xSubAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xMainAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctCodePen' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xMainAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xMainAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctDescPen' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xMainAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xSubAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctCodePen' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xSubAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.xSubAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctDescPen' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.xSubAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.TRANSTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSTYPE' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.TRANSTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORIGDUEFEEADJ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.ORIGDUEFEEADJColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORIGDUEFEEADJ' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.ORIGDUEFEEADJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XDEPT() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.XDEPTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XDEPT' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.XDEPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FROMSP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.FROMSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FROMSP' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.FROMSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FEEPEN() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.FEEPENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FEEPEN' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.FEEPENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCT() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.PRODUCTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCT' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.PRODUCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BPLOTOIMS() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.BPLOTOIMSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BPLOTOIMS' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.BPLOTOIMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BILLTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.BILLTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BILLTYPE' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.BILLTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NEW5() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_1.NEW5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NEW5' in table 'chy_1' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_1.NEW5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctnoNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.AcctnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctnoNull()
            Me(Me.tablechy_1.AcctnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForyearNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.ForyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForyearNull()
            Me(Me.tablechy_1.ForyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBus_CodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.Bus_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBus_CodeNull()
            Me(Me.tablechy_1.Bus_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDesc1Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.Desc1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDesc1Null()
            Me(Me.tablechy_1.Desc1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxbaseNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.TaxbaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxbaseNull()
            Me(Me.tablechy_1.TaxbaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnnualdueNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.AnnualdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnnualdueNull()
            Me(Me.tablechy_1.AnnualdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxdueNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.TaxdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxdueNull()
            Me(Me.tablechy_1.TaxdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPenDueNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.PenDueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPenDueNull()
            Me(Me.tablechy_1.PenDueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotdueNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.TotdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotdueNull()
            Me(Me.tablechy_1.TotdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_PdNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.Amt_PdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_PdNull()
            Me(Me.tablechy_1.Amt_PdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_PenPdNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.Amt_PenPdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_PenPdNull()
            Me(Me.tablechy_1.Amt_PenPdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiscountNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.DiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiscountNull()
            Me(Me.tablechy_1.DiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxcodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.TaxcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxcodeNull()
            Me(Me.tablechy_1.TaxcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevqtrNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.prevqtrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevqtrNull()
            Me(Me.tablechy_1.prevqtrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtryr1Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.Qtryr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtryr1Null()
            Me(Me.tablechy_1.Qtryr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtryr2Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.Qtryr2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtryr2Null()
            Me(Me.tablechy_1.Qtryr2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtrPaidNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.QtrPaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtrPaidNull()
            Me(Me.tablechy_1.QtrPaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarks0Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.Remarks0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarks0Null()
            Me(Me.tablechy_1.Remarks0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarks1Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.Remarks1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarks1Null()
            Me(Me.tablechy_1.Remarks1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPresNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.PresColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPresNull()
            Me(Me.tablechy_1.PresColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrevNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.PrevColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrevNull()
            Me(Me.tablechy_1.PrevColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatcodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.StatcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatcodeNull()
            Me(Me.tablechy_1.StatcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsASSESSNONull() As Boolean
            Return Me.IsNull(Me.tablechy_1.ASSESSNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetASSESSNONull()
            Me(Me.tablechy_1.ASSESSNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewswNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.NewswColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewswNull()
            Me(Me.tablechy_1.NewswColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModePNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.ModePColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModePNull()
            Me(Me.tablechy_1.ModePColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGradFixNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.GradFixColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGradFixNull()
            Me(Me.tablechy_1.GradFixColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCapitalNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.CapitalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCapitalNull()
            Me(Me.tablechy_1.CapitalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXsortNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.XsortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXsortNull()
            Me(Me.tablechy_1.XsortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORNoNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.ORNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORNoNull()
            Me(Me.tablechy_1.ORNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDatePaidNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.DatePaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDatePaidNull()
            Me(Me.tablechy_1.DatePaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBrgyCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.BrgyCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBrgyCodeNull()
            Me(Me.tablechy_1.BrgyCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLocaCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.LocaCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLocaCodeNull()
            Me(Me.tablechy_1.LocaCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsL_DatePDNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.L_DatePDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetL_DatePDNull()
            Me(Me.tablechy_1.L_DatePDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.MainAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctCodeNull()
            Me(Me.tablechy_1.MainAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.MainAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctDescNull()
            Me(Me.tablechy_1.MainAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.SubAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctCodeNull()
            Me(Me.tablechy_1.SubAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.SubAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctDescNull()
            Me(Me.tablechy_1.SubAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.MainAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctCodePenNull()
            Me(Me.tablechy_1.MainAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.MainAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctDescPenNull()
            Me(Me.tablechy_1.MainAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.SubAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctCodePenNull()
            Me(Me.tablechy_1.SubAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.SubAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctDescPenNull()
            Me(Me.tablechy_1.SubAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_Pd1Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.Amt_Pd1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_Pd1Null()
            Me(Me.tablechy_1.Amt_Pd1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_PenPd1Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.Amt_PenPd1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_PenPd1Null()
            Me(Me.tablechy_1.Amt_PenPd1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewAmt_PdNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.NewAmt_PdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewAmt_PdNull()
            Me(Me.tablechy_1.NewAmt_PdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewAmt_PenPdNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.NewAmt_PenPdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewAmt_PenPdNull()
            Me(Me.tablechy_1.NewAmt_PenPdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewTaxdueNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.NewTaxdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewTaxdueNull()
            Me(Me.tablechy_1.NewTaxdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewPenDueNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.NewPenDueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewPenDueNull()
            Me(Me.tablechy_1.NewPenDueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldNameNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.FieldNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldNameNull()
            Me(Me.tablechy_1.FieldNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrevGMonthNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.PrevGMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrevGMonthNull()
            Me(Me.tablechy_1.PrevGMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGDateEstaNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.GDateEstaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGDateEstaNull()
            Me(Me.tablechy_1.GDateEstaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGMonthPaidNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.GMonthPaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGMonthPaidNull()
            Me(Me.tablechy_1.GMonthPaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATE_ESTANull() As Boolean
            Return Me.IsNull(Me.tablechy_1.DATE_ESTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATE_ESTANull()
            Me(Me.tablechy_1.DATE_ESTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYearPeriodNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.YearPeriodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYearPeriodNull()
            Me(Me.tablechy_1.YearPeriodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotEditNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.NotEditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotEditNull()
            Me(Me.tablechy_1.NotEditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotDelNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.NotDelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotDelNull()
            Me(Me.tablechy_1.NotDelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAssessTotalNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.AssessTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAssessTotalNull()
            Me(Me.tablechy_1.AssessTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUsedTCredNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.UsedTCredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUsedTCredNull()
            Me(Me.tablechy_1.UsedTCredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForCloseNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.ForCloseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForCloseNull()
            Me(Me.tablechy_1.ForCloseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxORNONull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xORNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxORNONull()
            Me(Me.tablechy_1.xORNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSRSNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xSRSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSRSNull()
            Me(Me.tablechy_1.xSRSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxTotalNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxTotalNull()
            Me(Me.tablechy_1.xTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRASSESBYNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.RASSESBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRASSESBYNull()
            Me(Me.tablechy_1.RASSESBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSQUENCELocalNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xSQUENCELocalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSQUENCELocalNull()
            Me(Me.tablechy_1.xSQUENCELocalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSQUENCEPenNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xSQUENCEPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSQUENCEPenNull()
            Me(Me.tablechy_1.xSQUENCEPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSQUENCENull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xSQUENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSQUENCENull()
            Me(Me.tablechy_1.xSQUENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.AreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaNull()
            Me(Me.tablechy_1.AreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQDUENull() As Boolean
            Return Me.IsNull(Me.tablechy_1.QDUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQDUENull()
            Me(Me.tablechy_1.QDUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADUENull() As Boolean
            Return Me.IsNull(Me.tablechy_1.ADUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADUENull()
            Me(Me.tablechy_1.ADUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQAMTNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.QAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQAMTNull()
            Me(Me.tablechy_1.QAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAAMTNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.AAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAAMTNull()
            Me(Me.tablechy_1.AAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES1Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.RES1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES1Null()
            Me(Me.tablechy_1.RES1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES2Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.RES2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES2Null()
            Me(Me.tablechy_1.RES2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES3Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.RES3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES3Null()
            Me(Me.tablechy_1.RES3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES4Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.RES4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES4Null()
            Me(Me.tablechy_1.RES4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES5Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.RES5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES5Null()
            Me(Me.tablechy_1.RES5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsRegBillNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.IsRegBillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsRegBillNull()
            Me(Me.tablechy_1.IsRegBillColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRESNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.RESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRESNull()
            Me(Me.tablechy_1.RESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPenYearNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.PenYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPenYearNull()
            Me(Me.tablechy_1.PenYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotDeleteNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.NotDeleteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotDeleteNull()
            Me(Me.tablechy_1.NotDeleteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR1Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.I_YEAR1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR1Null()
            Me(Me.tablechy_1.I_YEAR1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT1Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.I_DISCOUNT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT1Null()
            Me(Me.tablechy_1.I_DISCOUNT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR2Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.I_YEAR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR2Null()
            Me(Me.tablechy_1.I_YEAR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT2Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.I_DISCOUNT2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT2Null()
            Me(Me.tablechy_1.I_DISCOUNT2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR3Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.I_YEAR3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR3Null()
            Me(Me.tablechy_1.I_YEAR3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT3Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.I_DISCOUNT3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT3Null()
            Me(Me.tablechy_1.I_DISCOUNT3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR4Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.I_YEAR4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR4Null()
            Me(Me.tablechy_1.I_YEAR4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT4Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.I_DISCOUNT4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT4Null()
            Me(Me.tablechy_1.I_DISCOUNT4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEDITEDBYNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.EDITEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEDITEDBYNull()
            Me(Me.tablechy_1.EDITEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX1Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.X1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX1Null()
            Me(Me.tablechy_1.X1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX2Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.X2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX2Null()
            Me(Me.tablechy_1.X2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX3Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.X3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX3Null()
            Me(Me.tablechy_1.X3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX4Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.X4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX4Null()
            Me(Me.tablechy_1.X4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX5Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.X5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX5Null()
            Me(Me.tablechy_1.X5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBLGFSORTNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.BLGFSORTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBLGFSORTNull()
            Me(Me.tablechy_1.BLGFSORTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProvisionNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.ProvisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProvisionNull()
            Me(Me.tablechy_1.ProvisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tablechy_1.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xMainAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctCodeNull()
            Me(Me.tablechy_1.xMainAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xMainAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctDescNull()
            Me(Me.tablechy_1.xMainAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xSubAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctCodeNull()
            Me(Me.tablechy_1.xSubAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xSubAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctDescNull()
            Me(Me.tablechy_1.xSubAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xMainAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctCodePenNull()
            Me(Me.tablechy_1.xMainAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xMainAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctDescPenNull()
            Me(Me.tablechy_1.xMainAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xSubAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctCodePenNull()
            Me(Me.tablechy_1.xSubAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.xSubAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctDescPenNull()
            Me(Me.tablechy_1.xSubAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSTYPENull() As Boolean
            Return Me.IsNull(Me.tablechy_1.TRANSTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSTYPENull()
            Me(Me.tablechy_1.TRANSTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORIGDUEFEEADJNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.ORIGDUEFEEADJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORIGDUEFEEADJNull()
            Me(Me.tablechy_1.ORIGDUEFEEADJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXDEPTNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.XDEPTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXDEPTNull()
            Me(Me.tablechy_1.XDEPTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFROMSPNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.FROMSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFROMSPNull()
            Me(Me.tablechy_1.FROMSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFEEPENNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.FEEPENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFEEPENNull()
            Me(Me.tablechy_1.FEEPENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.PRODUCTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTNull()
            Me(Me.tablechy_1.PRODUCTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBPLOTOIMSNull() As Boolean
            Return Me.IsNull(Me.tablechy_1.BPLOTOIMSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBPLOTOIMSNull()
            Me(Me.tablechy_1.BPLOTOIMSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBILLTYPENull() As Boolean
            Return Me.IsNull(Me.tablechy_1.BILLTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBILLTYPENull()
            Me(Me.tablechy_1.BILLTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNEW5Null() As Boolean
            Return Me.IsNull(Me.tablechy_1.NEW5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNEW5Null()
            Me(Me.tablechy_1.NEW5Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class chy_2Row
        Inherits Global.System.Data.DataRow
        
        Private tablechy_2 As chy_2DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablechy_2 = CType(Me.Table,chy_2DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Acctno() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.AcctnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Acctno' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.AcctnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Foryear() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.ForyearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Foryear' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.ForyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bus_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.Bus_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bus_Code' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.Bus_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Desc1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.Desc1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Desc1' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.Desc1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Taxbase() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.TaxbaseColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Taxbase' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.TaxbaseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Annualdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.AnnualdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Annualdue' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.AnnualdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Taxdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.TaxdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Taxdue' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.TaxdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PenDue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.PenDueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PenDue' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.PenDueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Totdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.TotdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Totdue' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.TotdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_Pd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.Amt_PdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_Pd' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.Amt_PdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_PenPd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.Amt_PenPdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_PenPd' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.Amt_PenPdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Discount() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.DiscountColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Discount' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.DiscountColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Taxcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.TaxcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Taxcode' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.TaxcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property prevqtr() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.prevqtrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'prevqtr' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.prevqtrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qtryr1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.Qtryr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qtryr1' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.Qtryr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Qtryr2() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.Qtryr2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Qtryr2' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.Qtryr2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QtrPaid() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.QtrPaidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QtrPaid' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.QtrPaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks0() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.Remarks0Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks0' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.Remarks0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.Remarks1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks1' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.Remarks1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pres() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.PresColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pres' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.PresColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Prev() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.PrevColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Prev' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.PrevColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Statcode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.StatcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Statcode' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.StatcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ASSESSNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.ASSESSNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASSESSNO' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.ASSESSNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Newsw() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.NewswColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Newsw' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.NewswColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ModeP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.ModePColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ModeP' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.ModePColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GradFix() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.GradFixColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GradFix' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.GradFixColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Capital() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.CapitalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Capital' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.CapitalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Xsort() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.XsortColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Xsort' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.XsortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORNo() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.ORNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORNo' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.ORNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DatePaid() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.DatePaidColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DatePaid' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.DatePaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BrgyCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.BrgyCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BrgyCode' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.BrgyCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LocaCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.LocaCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LocaCode' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.LocaCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property L_DatePD() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.L_DatePDColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'L_DatePD' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.L_DatePDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.MainAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctCode' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.MainAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.MainAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctDesc' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.MainAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.SubAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctCode' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.SubAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.SubAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctDesc' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.SubAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.MainAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctCodePen' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.MainAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MainAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.MainAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MainAcctDescPen' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.MainAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.SubAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctCodePen' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.SubAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SubAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.SubAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SubAcctDescPen' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.SubAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_Pd1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.Amt_Pd1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_Pd1' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.Amt_Pd1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Amt_PenPd1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.Amt_PenPd1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Amt_PenPd1' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.Amt_PenPd1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewAmt_Pd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.NewAmt_PdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewAmt_Pd' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.NewAmt_PdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewAmt_PenPd() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.NewAmt_PenPdColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewAmt_PenPd' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.NewAmt_PenPdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewTaxdue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.NewTaxdueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewTaxdue' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.NewTaxdueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NewPenDue() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.NewPenDueColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NewPenDue' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.NewPenDueColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FieldName() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.FieldNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FieldName' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.FieldNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PrevGMonth() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.PrevGMonthColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PrevGMonth' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.PrevGMonthColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GDateEsta() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.GDateEstaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GDateEsta' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.GDateEstaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GMonthPaid() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.GMonthPaidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GMonthPaid' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.GMonthPaidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DATE_ESTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.DATE_ESTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DATE_ESTA' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.DATE_ESTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property YearPeriod() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.YearPeriodColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'YearPeriod' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.YearPeriodColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NotEdit() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.NotEditColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotEdit' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.NotEditColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NotDel() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.NotDelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotDel' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.NotDelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AssessTotal() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.AssessTotalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AssessTotal' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.AssessTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UsedTCred() As Short
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.UsedTCredColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UsedTCred' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.UsedTCredColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ForClose() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.ForCloseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ForClose' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.ForCloseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xORNO() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xORNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xORNO' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xORNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSRS() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xSRSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSRS' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xSRSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xTotal() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xTotalColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xTotal' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xTotalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RASSESBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.RASSESBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RASSESBY' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.RASSESBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSQUENCELocal() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xSQUENCELocalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSQUENCELocal' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xSQUENCELocalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSQUENCEPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xSQUENCEPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSQUENCEPen' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xSQUENCEPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSQUENCE() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xSQUENCEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSQUENCE' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xSQUENCEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Area() As Double
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.AreaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Area' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.AreaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QDUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.QDUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QDUE' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.QDUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ADUE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.ADUEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADUE' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.ADUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.QAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QAMT' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.QAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AAMT() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.AAMTColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AAMT' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.AAMTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.RES1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES1' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.RES1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.RES2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES2' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.RES2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.RES3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES3' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.RES3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.RES4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES4' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.RES4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES5() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.RES5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES5' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.RES5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsRegBill() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.IsRegBillColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsRegBill' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.IsRegBillColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.RESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.RESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PenYear() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.PenYearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PenYear' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.PenYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NotDelete() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.NotDeleteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NotDelete' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.NotDeleteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.I_YEAR1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR1' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.I_YEAR1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.I_DISCOUNT1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT1' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.I_DISCOUNT1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR2() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.I_YEAR2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR2' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.I_YEAR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.I_DISCOUNT2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT2' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.I_DISCOUNT2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR3() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.I_YEAR3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR3' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.I_YEAR3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.I_DISCOUNT3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT3' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.I_DISCOUNT3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_YEAR4() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.I_YEAR4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_YEAR4' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.I_YEAR4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property I_DISCOUNT4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.I_DISCOUNT4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'I_DISCOUNT4' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.I_DISCOUNT4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EDITEDBY() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.EDITEDBYColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EDITEDBY' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.EDITEDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X1() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.X1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X1' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.X1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X2() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.X2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X2' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.X2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X3() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.X3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X3' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.X3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X4() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.X4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X4' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.X4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property X5() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.X5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'X5' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.X5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BLGFSORT() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.BLGFSORTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BLGFSORT' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.BLGFSORTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Provision() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.ProvisionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Provision' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.ProvisionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xMainAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctCode' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xMainAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xMainAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctDesc' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xMainAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctCode() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xSubAcctCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctCode' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xSubAcctCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xSubAcctDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctDesc' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xSubAcctDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xMainAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctCodePen' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xMainAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xMainAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xMainAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xMainAcctDescPen' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xMainAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctCodePen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xSubAcctCodePenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctCodePen' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xSubAcctCodePenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xSubAcctDescPen() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.xSubAcctDescPenColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xSubAcctDescPen' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.xSubAcctDescPenColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.TRANSTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSTYPE' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.TRANSTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORIGDUEFEEADJ() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.ORIGDUEFEEADJColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORIGDUEFEEADJ' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.ORIGDUEFEEADJColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property XDEPT() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.XDEPTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'XDEPT' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.XDEPTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FROMSP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.FROMSPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FROMSP' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.FROMSPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FEEPEN() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.FEEPENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FEEPEN' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.FEEPENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCT() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.PRODUCTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCT' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.PRODUCTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BPLOTOIMS() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.BPLOTOIMSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BPLOTOIMS' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.BPLOTOIMSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BILLTYPE() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.BILLTYPEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BILLTYPE' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.BILLTYPEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NEW5() As String
            Get
                Try 
                    Return CType(Me(Me.tablechy_2.NEW5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NEW5' in table 'chy_2' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechy_2.NEW5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctnoNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.AcctnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctnoNull()
            Me(Me.tablechy_2.AcctnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForyearNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.ForyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForyearNull()
            Me(Me.tablechy_2.ForyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBus_CodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.Bus_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBus_CodeNull()
            Me(Me.tablechy_2.Bus_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDesc1Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.Desc1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDesc1Null()
            Me(Me.tablechy_2.Desc1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxbaseNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.TaxbaseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxbaseNull()
            Me(Me.tablechy_2.TaxbaseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAnnualdueNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.AnnualdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAnnualdueNull()
            Me(Me.tablechy_2.AnnualdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxdueNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.TaxdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxdueNull()
            Me(Me.tablechy_2.TaxdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPenDueNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.PenDueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPenDueNull()
            Me(Me.tablechy_2.PenDueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotdueNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.TotdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotdueNull()
            Me(Me.tablechy_2.TotdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_PdNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.Amt_PdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_PdNull()
            Me(Me.tablechy_2.Amt_PdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_PenPdNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.Amt_PenPdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_PenPdNull()
            Me(Me.tablechy_2.Amt_PenPdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiscountNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.DiscountColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiscountNull()
            Me(Me.tablechy_2.DiscountColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTaxcodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.TaxcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTaxcodeNull()
            Me(Me.tablechy_2.TaxcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsprevqtrNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.prevqtrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetprevqtrNull()
            Me(Me.tablechy_2.prevqtrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtryr1Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.Qtryr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtryr1Null()
            Me(Me.tablechy_2.Qtryr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtryr2Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.Qtryr2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtryr2Null()
            Me(Me.tablechy_2.Qtryr2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQtrPaidNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.QtrPaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQtrPaidNull()
            Me(Me.tablechy_2.QtrPaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarks0Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.Remarks0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarks0Null()
            Me(Me.tablechy_2.Remarks0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarks1Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.Remarks1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarks1Null()
            Me(Me.tablechy_2.Remarks1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPresNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.PresColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPresNull()
            Me(Me.tablechy_2.PresColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrevNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.PrevColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrevNull()
            Me(Me.tablechy_2.PrevColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStatcodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.StatcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStatcodeNull()
            Me(Me.tablechy_2.StatcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsASSESSNONull() As Boolean
            Return Me.IsNull(Me.tablechy_2.ASSESSNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetASSESSNONull()
            Me(Me.tablechy_2.ASSESSNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewswNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.NewswColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewswNull()
            Me(Me.tablechy_2.NewswColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsModePNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.ModePColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetModePNull()
            Me(Me.tablechy_2.ModePColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGradFixNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.GradFixColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGradFixNull()
            Me(Me.tablechy_2.GradFixColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCapitalNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.CapitalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCapitalNull()
            Me(Me.tablechy_2.CapitalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXsortNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.XsortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXsortNull()
            Me(Me.tablechy_2.XsortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORNoNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.ORNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORNoNull()
            Me(Me.tablechy_2.ORNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDatePaidNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.DatePaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDatePaidNull()
            Me(Me.tablechy_2.DatePaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBrgyCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.BrgyCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBrgyCodeNull()
            Me(Me.tablechy_2.BrgyCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLocaCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.LocaCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLocaCodeNull()
            Me(Me.tablechy_2.LocaCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsL_DatePDNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.L_DatePDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetL_DatePDNull()
            Me(Me.tablechy_2.L_DatePDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.MainAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctCodeNull()
            Me(Me.tablechy_2.MainAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.MainAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctDescNull()
            Me(Me.tablechy_2.MainAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.SubAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctCodeNull()
            Me(Me.tablechy_2.SubAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.SubAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctDescNull()
            Me(Me.tablechy_2.SubAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.MainAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctCodePenNull()
            Me(Me.tablechy_2.MainAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMainAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.MainAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMainAcctDescPenNull()
            Me(Me.tablechy_2.MainAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.SubAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctCodePenNull()
            Me(Me.tablechy_2.SubAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.SubAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubAcctDescPenNull()
            Me(Me.tablechy_2.SubAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_Pd1Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.Amt_Pd1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_Pd1Null()
            Me(Me.tablechy_2.Amt_Pd1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAmt_PenPd1Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.Amt_PenPd1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAmt_PenPd1Null()
            Me(Me.tablechy_2.Amt_PenPd1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewAmt_PdNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.NewAmt_PdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewAmt_PdNull()
            Me(Me.tablechy_2.NewAmt_PdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewAmt_PenPdNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.NewAmt_PenPdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewAmt_PenPdNull()
            Me(Me.tablechy_2.NewAmt_PenPdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewTaxdueNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.NewTaxdueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewTaxdueNull()
            Me(Me.tablechy_2.NewTaxdueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNewPenDueNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.NewPenDueColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNewPenDueNull()
            Me(Me.tablechy_2.NewPenDueColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFieldNameNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.FieldNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFieldNameNull()
            Me(Me.tablechy_2.FieldNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrevGMonthNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.PrevGMonthColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrevGMonthNull()
            Me(Me.tablechy_2.PrevGMonthColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGDateEstaNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.GDateEstaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGDateEstaNull()
            Me(Me.tablechy_2.GDateEstaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGMonthPaidNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.GMonthPaidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGMonthPaidNull()
            Me(Me.tablechy_2.GMonthPaidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDATE_ESTANull() As Boolean
            Return Me.IsNull(Me.tablechy_2.DATE_ESTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDATE_ESTANull()
            Me(Me.tablechy_2.DATE_ESTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsYearPeriodNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.YearPeriodColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetYearPeriodNull()
            Me(Me.tablechy_2.YearPeriodColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotEditNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.NotEditColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotEditNull()
            Me(Me.tablechy_2.NotEditColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotDelNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.NotDelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotDelNull()
            Me(Me.tablechy_2.NotDelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAssessTotalNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.AssessTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAssessTotalNull()
            Me(Me.tablechy_2.AssessTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUsedTCredNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.UsedTCredColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUsedTCredNull()
            Me(Me.tablechy_2.UsedTCredColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForCloseNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.ForCloseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForCloseNull()
            Me(Me.tablechy_2.ForCloseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxORNONull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xORNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxORNONull()
            Me(Me.tablechy_2.xORNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSRSNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xSRSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSRSNull()
            Me(Me.tablechy_2.xSRSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxTotalNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xTotalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxTotalNull()
            Me(Me.tablechy_2.xTotalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRASSESBYNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.RASSESBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRASSESBYNull()
            Me(Me.tablechy_2.RASSESBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSQUENCELocalNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xSQUENCELocalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSQUENCELocalNull()
            Me(Me.tablechy_2.xSQUENCELocalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSQUENCEPenNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xSQUENCEPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSQUENCEPenNull()
            Me(Me.tablechy_2.xSQUENCEPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSQUENCENull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xSQUENCEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSQUENCENull()
            Me(Me.tablechy_2.xSQUENCEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAreaNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.AreaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAreaNull()
            Me(Me.tablechy_2.AreaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQDUENull() As Boolean
            Return Me.IsNull(Me.tablechy_2.QDUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQDUENull()
            Me(Me.tablechy_2.QDUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsADUENull() As Boolean
            Return Me.IsNull(Me.tablechy_2.ADUEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetADUENull()
            Me(Me.tablechy_2.ADUEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQAMTNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.QAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQAMTNull()
            Me(Me.tablechy_2.QAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAAMTNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.AAMTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAAMTNull()
            Me(Me.tablechy_2.AAMTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES1Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.RES1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES1Null()
            Me(Me.tablechy_2.RES1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES2Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.RES2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES2Null()
            Me(Me.tablechy_2.RES2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES3Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.RES3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES3Null()
            Me(Me.tablechy_2.RES3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES4Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.RES4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES4Null()
            Me(Me.tablechy_2.RES4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES5Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.RES5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES5Null()
            Me(Me.tablechy_2.RES5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsRegBillNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.IsRegBillColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsRegBillNull()
            Me(Me.tablechy_2.IsRegBillColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRESNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.RESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRESNull()
            Me(Me.tablechy_2.RESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPenYearNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.PenYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPenYearNull()
            Me(Me.tablechy_2.PenYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotDeleteNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.NotDeleteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotDeleteNull()
            Me(Me.tablechy_2.NotDeleteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR1Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.I_YEAR1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR1Null()
            Me(Me.tablechy_2.I_YEAR1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT1Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.I_DISCOUNT1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT1Null()
            Me(Me.tablechy_2.I_DISCOUNT1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR2Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.I_YEAR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR2Null()
            Me(Me.tablechy_2.I_YEAR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT2Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.I_DISCOUNT2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT2Null()
            Me(Me.tablechy_2.I_DISCOUNT2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR3Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.I_YEAR3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR3Null()
            Me(Me.tablechy_2.I_YEAR3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT3Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.I_DISCOUNT3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT3Null()
            Me(Me.tablechy_2.I_DISCOUNT3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_YEAR4Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.I_YEAR4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_YEAR4Null()
            Me(Me.tablechy_2.I_YEAR4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsI_DISCOUNT4Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.I_DISCOUNT4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetI_DISCOUNT4Null()
            Me(Me.tablechy_2.I_DISCOUNT4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEDITEDBYNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.EDITEDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEDITEDBYNull()
            Me(Me.tablechy_2.EDITEDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX1Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.X1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX1Null()
            Me(Me.tablechy_2.X1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX2Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.X2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX2Null()
            Me(Me.tablechy_2.X2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX3Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.X3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX3Null()
            Me(Me.tablechy_2.X3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX4Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.X4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX4Null()
            Me(Me.tablechy_2.X4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsX5Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.X5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetX5Null()
            Me(Me.tablechy_2.X5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBLGFSORTNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.BLGFSORTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBLGFSORTNull()
            Me(Me.tablechy_2.BLGFSORTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProvisionNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.ProvisionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProvisionNull()
            Me(Me.tablechy_2.ProvisionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tablechy_2.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xMainAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctCodeNull()
            Me(Me.tablechy_2.xMainAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xMainAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctDescNull()
            Me(Me.tablechy_2.xMainAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctCodeNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xSubAcctCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctCodeNull()
            Me(Me.tablechy_2.xSubAcctCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctDescNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xSubAcctDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctDescNull()
            Me(Me.tablechy_2.xSubAcctDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xMainAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctCodePenNull()
            Me(Me.tablechy_2.xMainAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxMainAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xMainAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxMainAcctDescPenNull()
            Me(Me.tablechy_2.xMainAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctCodePenNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xSubAcctCodePenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctCodePenNull()
            Me(Me.tablechy_2.xSubAcctCodePenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxSubAcctDescPenNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.xSubAcctDescPenColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxSubAcctDescPenNull()
            Me(Me.tablechy_2.xSubAcctDescPenColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSTYPENull() As Boolean
            Return Me.IsNull(Me.tablechy_2.TRANSTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSTYPENull()
            Me(Me.tablechy_2.TRANSTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORIGDUEFEEADJNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.ORIGDUEFEEADJColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORIGDUEFEEADJNull()
            Me(Me.tablechy_2.ORIGDUEFEEADJColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsXDEPTNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.XDEPTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetXDEPTNull()
            Me(Me.tablechy_2.XDEPTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFROMSPNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.FROMSPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFROMSPNull()
            Me(Me.tablechy_2.FROMSPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFEEPENNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.FEEPENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFEEPENNull()
            Me(Me.tablechy_2.FEEPENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.PRODUCTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTNull()
            Me(Me.tablechy_2.PRODUCTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBPLOTOIMSNull() As Boolean
            Return Me.IsNull(Me.tablechy_2.BPLOTOIMSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBPLOTOIMSNull()
            Me(Me.tablechy_2.BPLOTOIMSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBILLTYPENull() As Boolean
            Return Me.IsNull(Me.tablechy_2.BILLTYPEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBILLTYPENull()
            Me(Me.tablechy_2.BILLTYPEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNEW5Null() As Boolean
            Return Me.IsNull(Me.tablechy_2.NEW5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNEW5Null()
            Me(Me.tablechy_2.NEW5Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class chyADDLEXTNRow
        Inherits Global.System.Data.DataRow
        
        Private tablechyADDLEXTN As chyADDLEXTNDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablechyADDLEXTN = CType(Me.Table,chyADDLEXTNDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Acctno() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.AcctnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Acctno' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.AcctnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Foryear() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.ForyearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Foryear' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.ForyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bus_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.Bus_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bus_Code' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.Bus_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZONE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.ZONEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZONE' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.ZONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RTC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RTCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RTC' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.PNPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.PNPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FISCAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.FISCALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FISCAL' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.FISCALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BUILDING() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.BUILDINGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUILDING' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.BUILDINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MECHANICAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.MECHANICALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MECHANICAL' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.MECHANICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ELECTRICAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.ELECTRICALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELECTRICAL' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.ELECTRICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLUMBING() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.PLUMBINGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLUMBING' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.PLUMBINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIGNBILL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.SIGNBILLColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGNBILL' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.SIGNBILLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTHER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.OTHERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STICKER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.STICKERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STICKER' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.STICKERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEDICAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.MEDICALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEDICAL' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.MEDICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WMEASURES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.WMEASURESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WMEASURES' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.WMEASURESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIRECODE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.FIRECODEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRECODE' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.FIRECODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF1' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF2' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF3' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF4' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF5' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF6' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF7' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF8' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF9' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF10' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF11' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF12' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF13() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF13Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF13' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF14() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF14Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF14' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF15() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF15Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF15' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZONE_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.ZONE_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZONE_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.ZONE_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RTC_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RTC_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RTC_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RTC_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNP_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.PNP_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNP_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.PNP_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FISCAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.FISCAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FISCAL_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.FISCAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BUILDING_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.BUILDING_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUILDING_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.BUILDING_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MECHANICAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.MECHANICAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MECHANICAL_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.MECHANICAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ELECTRICAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.ELECTRICAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELECTRICAL_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.ELECTRICAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLUMBING_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.PLUMBING_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLUMBING_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.PLUMBING_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIGNBILL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.SIGNBILL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGNBILL_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.SIGNBILL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTHER_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.OTHER_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.OTHER_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STICKER_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.STICKER_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STICKER_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.STICKER_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEDICAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.MEDICAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEDICAL_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.MEDICAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WMEASURES_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.WMEASURES_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WMEASURES_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.WMEASURES_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIRECODE_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.FIRECODE_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRECODE_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.FIRECODE_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF1_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF1_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF1_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF1_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF2_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF2_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF2_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF2_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF3_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF3_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF3_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF3_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF4_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF4_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF4_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF4_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF5_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF5_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF5_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF5_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF6_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF6_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF6_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF6_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF7_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF7_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF7_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF7_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF8_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF8_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF8_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF8_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF9_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF9_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF9_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF9_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF10_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF10_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF10_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF10_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF11_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF11_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF11_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF11_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF12_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF12_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF12_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF12_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF13_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF13_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF13_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF13_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF14_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF14_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF14_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF14_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF15_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tablechyADDLEXTN.RF15_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF15_HP' in table 'chyADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablechyADDLEXTN.RF15_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctnoNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.AcctnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctnoNull()
            Me(Me.tablechyADDLEXTN.AcctnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForyearNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.ForyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForyearNull()
            Me(Me.tablechyADDLEXTN.ForyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBus_CodeNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.Bus_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBus_CodeNull()
            Me(Me.tablechyADDLEXTN.Bus_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZONENull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.ZONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZONENull()
            Me(Me.tablechyADDLEXTN.ZONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRTCNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RTCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRTCNull()
            Me(Me.tablechyADDLEXTN.RTCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPNPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.PNPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPNPNull()
            Me(Me.tablechyADDLEXTN.PNPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFISCALNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.FISCALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFISCALNull()
            Me(Me.tablechyADDLEXTN.FISCALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBUILDINGNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.BUILDINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBUILDINGNull()
            Me(Me.tablechyADDLEXTN.BUILDINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMECHANICALNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.MECHANICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMECHANICALNull()
            Me(Me.tablechyADDLEXTN.MECHANICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsELECTRICALNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.ELECTRICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetELECTRICALNull()
            Me(Me.tablechyADDLEXTN.ELECTRICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLUMBINGNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.PLUMBINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLUMBINGNull()
            Me(Me.tablechyADDLEXTN.PLUMBINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIGNBILLNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.SIGNBILLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIGNBILLNull()
            Me(Me.tablechyADDLEXTN.SIGNBILLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTHERNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTHERNull()
            Me(Me.tablechyADDLEXTN.OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTICKERNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.STICKERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTICKERNull()
            Me(Me.tablechyADDLEXTN.STICKERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEDICALNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.MEDICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEDICALNull()
            Me(Me.tablechyADDLEXTN.MEDICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWMEASURESNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.WMEASURESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWMEASURESNull()
            Me(Me.tablechyADDLEXTN.WMEASURESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIRECODENull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.FIRECODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIRECODENull()
            Me(Me.tablechyADDLEXTN.FIRECODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF1Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF1Null()
            Me(Me.tablechyADDLEXTN.RF1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF2Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF2Null()
            Me(Me.tablechyADDLEXTN.RF2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF3Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF3Null()
            Me(Me.tablechyADDLEXTN.RF3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF4Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF4Null()
            Me(Me.tablechyADDLEXTN.RF4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF5Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF5Null()
            Me(Me.tablechyADDLEXTN.RF5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF6Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF6Null()
            Me(Me.tablechyADDLEXTN.RF6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF7Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF7Null()
            Me(Me.tablechyADDLEXTN.RF7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF8Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF8Null()
            Me(Me.tablechyADDLEXTN.RF8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF9Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF9Null()
            Me(Me.tablechyADDLEXTN.RF9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF10Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF10Null()
            Me(Me.tablechyADDLEXTN.RF10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF11Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF11Null()
            Me(Me.tablechyADDLEXTN.RF11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF12Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF12Null()
            Me(Me.tablechyADDLEXTN.RF12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF13Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF13Null()
            Me(Me.tablechyADDLEXTN.RF13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF14Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF14Null()
            Me(Me.tablechyADDLEXTN.RF14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF15Null() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF15Null()
            Me(Me.tablechyADDLEXTN.RF15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZONE_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.ZONE_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZONE_HPNull()
            Me(Me.tablechyADDLEXTN.ZONE_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRTC_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RTC_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRTC_HPNull()
            Me(Me.tablechyADDLEXTN.RTC_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPNP_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.PNP_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPNP_HPNull()
            Me(Me.tablechyADDLEXTN.PNP_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFISCAL_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.FISCAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFISCAL_HPNull()
            Me(Me.tablechyADDLEXTN.FISCAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBUILDING_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.BUILDING_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBUILDING_HPNull()
            Me(Me.tablechyADDLEXTN.BUILDING_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMECHANICAL_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.MECHANICAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMECHANICAL_HPNull()
            Me(Me.tablechyADDLEXTN.MECHANICAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsELECTRICAL_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.ELECTRICAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetELECTRICAL_HPNull()
            Me(Me.tablechyADDLEXTN.ELECTRICAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLUMBING_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.PLUMBING_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLUMBING_HPNull()
            Me(Me.tablechyADDLEXTN.PLUMBING_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIGNBILL_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.SIGNBILL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIGNBILL_HPNull()
            Me(Me.tablechyADDLEXTN.SIGNBILL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTHER_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.OTHER_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTHER_HPNull()
            Me(Me.tablechyADDLEXTN.OTHER_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTICKER_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.STICKER_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTICKER_HPNull()
            Me(Me.tablechyADDLEXTN.STICKER_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEDICAL_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.MEDICAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEDICAL_HPNull()
            Me(Me.tablechyADDLEXTN.MEDICAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWMEASURES_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.WMEASURES_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWMEASURES_HPNull()
            Me(Me.tablechyADDLEXTN.WMEASURES_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIRECODE_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.FIRECODE_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIRECODE_HPNull()
            Me(Me.tablechyADDLEXTN.FIRECODE_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF1_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF1_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF1_HPNull()
            Me(Me.tablechyADDLEXTN.RF1_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF2_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF2_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF2_HPNull()
            Me(Me.tablechyADDLEXTN.RF2_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF3_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF3_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF3_HPNull()
            Me(Me.tablechyADDLEXTN.RF3_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF4_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF4_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF4_HPNull()
            Me(Me.tablechyADDLEXTN.RF4_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF5_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF5_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF5_HPNull()
            Me(Me.tablechyADDLEXTN.RF5_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF6_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF6_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF6_HPNull()
            Me(Me.tablechyADDLEXTN.RF6_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF7_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF7_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF7_HPNull()
            Me(Me.tablechyADDLEXTN.RF7_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF8_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF8_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF8_HPNull()
            Me(Me.tablechyADDLEXTN.RF8_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF9_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF9_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF9_HPNull()
            Me(Me.tablechyADDLEXTN.RF9_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF10_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF10_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF10_HPNull()
            Me(Me.tablechyADDLEXTN.RF10_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF11_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF11_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF11_HPNull()
            Me(Me.tablechyADDLEXTN.RF11_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF12_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF12_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF12_HPNull()
            Me(Me.tablechyADDLEXTN.RF12_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF13_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF13_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF13_HPNull()
            Me(Me.tablechyADDLEXTN.RF13_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF14_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF14_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF14_HPNull()
            Me(Me.tablechyADDLEXTN.RF14_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF15_HPNull() As Boolean
            Return Me.IsNull(Me.tablechyADDLEXTN.RF15_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF15_HPNull()
            Me(Me.tablechyADDLEXTN.RF15_HPColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dennisenriquezADDLEXTNRow
        Inherits Global.System.Data.DataRow
        
        Private tabledennisenriquezADDLEXTN As dennisenriquezADDLEXTNDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledennisenriquezADDLEXTN = CType(Me.Table,dennisenriquezADDLEXTNDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Acctno() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.AcctnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Acctno' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.AcctnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Foryear() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.ForyearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Foryear' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.ForyearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bus_Code() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.Bus_CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bus_Code' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.Bus_CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZONE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.ZONEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZONE' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.ZONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RTC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RTCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RTC' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RTCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.PNPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.PNPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FISCAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.FISCALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FISCAL' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.FISCALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BUILDING() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.BUILDINGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUILDING' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.BUILDINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MECHANICAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.MECHANICALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MECHANICAL' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.MECHANICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ELECTRICAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.ELECTRICALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELECTRICAL' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.ELECTRICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLUMBING() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.PLUMBINGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLUMBING' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.PLUMBINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIGNBILL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.SIGNBILLColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGNBILL' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.SIGNBILLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTHER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.OTHERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STICKER() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.STICKERColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STICKER' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.STICKERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEDICAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.MEDICALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEDICAL' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.MEDICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WMEASURES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.WMEASURESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WMEASURES' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.WMEASURESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIRECODE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.FIRECODEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRECODE' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.FIRECODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF1' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF2' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF3' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF4' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF5' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF6' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF7' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF8' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF9' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF10' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF11' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF12' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF13() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF13Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF13' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF14() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF14Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF14' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF15() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF15Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF15' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF15Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ZONE_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.ZONE_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ZONE_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.ZONE_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RTC_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RTC_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RTC_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RTC_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PNP_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.PNP_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PNP_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.PNP_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FISCAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.FISCAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FISCAL_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.FISCAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BUILDING_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.BUILDING_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUILDING_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.BUILDING_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MECHANICAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.MECHANICAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MECHANICAL_HP' in table 'dennisenriquezADDLEXTN' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.MECHANICAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ELECTRICAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.ELECTRICAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ELECTRICAL_HP' in table 'dennisenriquezADDLEXTN' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.ELECTRICAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLUMBING_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.PLUMBING_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PLUMBING_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.PLUMBING_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIGNBILL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.SIGNBILL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIGNBILL_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.SIGNBILL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTHER_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.OTHER_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.OTHER_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STICKER_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.STICKER_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STICKER_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.STICKER_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEDICAL_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.MEDICAL_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEDICAL_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.MEDICAL_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WMEASURES_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.WMEASURES_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WMEASURES_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.WMEASURES_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIRECODE_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.FIRECODE_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRECODE_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.FIRECODE_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF1_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF1_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF1_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF1_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF2_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF2_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF2_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF2_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF3_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF3_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF3_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF3_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF4_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF4_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF4_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF4_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF5_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF5_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF5_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF5_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF6_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF6_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF6_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF6_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF7_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF7_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF7_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF7_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF8_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF8_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF8_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF8_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF9_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF9_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF9_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF9_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF10_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF10_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF10_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF10_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF11_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF11_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF11_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF11_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF12_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF12_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF12_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF12_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF13_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF13_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF13_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF13_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF14_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF14_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF14_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF14_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF15_HP() As String
            Get
                Try 
                    Return CType(Me(Me.tabledennisenriquezADDLEXTN.RF15_HPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF15_HP' in table 'dennisenriquezADDLEXTN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledennisenriquezADDLEXTN.RF15_HPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctnoNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.AcctnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctnoNull()
            Me(Me.tabledennisenriquezADDLEXTN.AcctnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForyearNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.ForyearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForyearNull()
            Me(Me.tabledennisenriquezADDLEXTN.ForyearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBus_CodeNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.Bus_CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBus_CodeNull()
            Me(Me.tabledennisenriquezADDLEXTN.Bus_CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZONENull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.ZONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZONENull()
            Me(Me.tabledennisenriquezADDLEXTN.ZONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRTCNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RTCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRTCNull()
            Me(Me.tabledennisenriquezADDLEXTN.RTCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPNPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.PNPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPNPNull()
            Me(Me.tabledennisenriquezADDLEXTN.PNPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFISCALNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.FISCALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFISCALNull()
            Me(Me.tabledennisenriquezADDLEXTN.FISCALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBUILDINGNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.BUILDINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBUILDINGNull()
            Me(Me.tabledennisenriquezADDLEXTN.BUILDINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMECHANICALNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.MECHANICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMECHANICALNull()
            Me(Me.tabledennisenriquezADDLEXTN.MECHANICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsELECTRICALNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.ELECTRICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetELECTRICALNull()
            Me(Me.tabledennisenriquezADDLEXTN.ELECTRICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLUMBINGNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.PLUMBINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLUMBINGNull()
            Me(Me.tabledennisenriquezADDLEXTN.PLUMBINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIGNBILLNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.SIGNBILLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIGNBILLNull()
            Me(Me.tabledennisenriquezADDLEXTN.SIGNBILLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTHERNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTHERNull()
            Me(Me.tabledennisenriquezADDLEXTN.OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTICKERNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.STICKERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTICKERNull()
            Me(Me.tabledennisenriquezADDLEXTN.STICKERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEDICALNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.MEDICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEDICALNull()
            Me(Me.tabledennisenriquezADDLEXTN.MEDICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWMEASURESNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.WMEASURESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWMEASURESNull()
            Me(Me.tabledennisenriquezADDLEXTN.WMEASURESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIRECODENull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.FIRECODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIRECODENull()
            Me(Me.tabledennisenriquezADDLEXTN.FIRECODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF1Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF1Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF2Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF2Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF3Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF3Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF4Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF4Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF5Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF5Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF6Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF6Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF7Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF7Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF8Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF8Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF9Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF9Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF10Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF10Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF11Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF11Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF12Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF12Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF13Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF13Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF14Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF14Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF14Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF15Null() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF15Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF15Null()
            Me(Me.tabledennisenriquezADDLEXTN.RF15Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsZONE_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.ZONE_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetZONE_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.ZONE_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRTC_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RTC_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRTC_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RTC_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPNP_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.PNP_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPNP_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.PNP_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFISCAL_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.FISCAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFISCAL_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.FISCAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBUILDING_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.BUILDING_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBUILDING_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.BUILDING_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMECHANICAL_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.MECHANICAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMECHANICAL_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.MECHANICAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsELECTRICAL_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.ELECTRICAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetELECTRICAL_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.ELECTRICAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLUMBING_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.PLUMBING_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLUMBING_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.PLUMBING_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIGNBILL_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.SIGNBILL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIGNBILL_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.SIGNBILL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTHER_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.OTHER_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTHER_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.OTHER_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTICKER_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.STICKER_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTICKER_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.STICKER_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEDICAL_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.MEDICAL_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEDICAL_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.MEDICAL_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWMEASURES_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.WMEASURES_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWMEASURES_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.WMEASURES_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIRECODE_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.FIRECODE_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIRECODE_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.FIRECODE_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF1_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF1_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF1_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF1_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF2_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF2_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF2_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF2_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF3_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF3_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF3_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF3_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF4_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF4_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF4_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF4_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF5_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF5_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF5_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF5_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF6_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF6_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF6_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF6_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF7_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF7_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF7_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF7_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF8_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF8_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF8_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF8_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF9_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF9_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF9_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF9_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF10_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF10_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF10_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF10_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF11_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF11_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF11_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF11_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF12_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF12_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF12_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF12_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF13_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF13_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF13_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF13_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF14_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF14_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF14_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF14_HPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF15_HPNull() As Boolean
            Return Me.IsNull(Me.tabledennisenriquezADDLEXTN.RF15_HPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF15_HPNull()
            Me(Me.tabledennisenriquezADDLEXTN.RF15_HPColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DOC_TRACK2019Row
        Inherits Global.System.Data.DataRow
        
        Private tableDOC_TRACK2019 As DOC_TRACK2019DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDOC_TRACK2019 = CType(Me.Table,DOC_TRACK2019DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Counter() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.CounterColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Counter' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.CounterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ForYear() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.ForYearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ForYear' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.ForYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Acctno() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.AcctnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Acctno' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.AcctnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProcessTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.ProcessTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProcessTime' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.ProcessTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xTransaction() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.xTransactionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xTransaction' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.xTransactionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NextStep() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.NextStepColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NextStep' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.NextStepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.Remarks1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks1' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.Remarks1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LoginName() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.LoginNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LoginName' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.LoginNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FullName() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2019.FullNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FullName' in table 'DOC_TRACK2019' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2019.FullNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCounterNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.CounterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCounterNull()
            Me(Me.tableDOC_TRACK2019.CounterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForYearNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.ForYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForYearNull()
            Me(Me.tableDOC_TRACK2019.ForYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctnoNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.AcctnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctnoNull()
            Me(Me.tableDOC_TRACK2019.AcctnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNameNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNameNull()
            Me(Me.tableDOC_TRACK2019.NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddressNull()
            Me(Me.tableDOC_TRACK2019.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProcessTimeNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.ProcessTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProcessTimeNull()
            Me(Me.tableDOC_TRACK2019.ProcessTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxTransactionNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.xTransactionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxTransactionNull()
            Me(Me.tableDOC_TRACK2019.xTransactionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNextStepNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.NextStepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNextStepNull()
            Me(Me.tableDOC_TRACK2019.NextStepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableDOC_TRACK2019.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarks1Null() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.Remarks1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarks1Null()
            Me(Me.tableDOC_TRACK2019.Remarks1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLoginNameNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.LoginNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLoginNameNull()
            Me(Me.tableDOC_TRACK2019.LoginNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFullNameNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2019.FullNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFullNameNull()
            Me(Me.tableDOC_TRACK2019.FullNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DOC_TRACK2022Row
        Inherits Global.System.Data.DataRow
        
        Private tableDOC_TRACK2022 As DOC_TRACK2022DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDOC_TRACK2022 = CType(Me.Table,DOC_TRACK2022DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Counter() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.CounterColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Counter' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.CounterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ForYear() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.ForYearColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ForYear' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.ForYearColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Acctno() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.AcctnoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Acctno' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.AcctnoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ProcessTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.ProcessTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProcessTime' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.ProcessTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property xTransaction() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.xTransactionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'xTransaction' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.xTransactionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NextStep() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.NextStepColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NextStep' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.NextStepColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.RemarksColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.RemarksColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Remarks1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.Remarks1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Remarks1' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.Remarks1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LoginName() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.LoginNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LoginName' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.LoginNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FullName() As String
            Get
                Try 
                    Return CType(Me(Me.tableDOC_TRACK2022.FullNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FullName' in table 'DOC_TRACK2022' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDOC_TRACK2022.FullNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCounterNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.CounterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCounterNull()
            Me(Me.tableDOC_TRACK2022.CounterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsForYearNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.ForYearColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetForYearNull()
            Me(Me.tableDOC_TRACK2022.ForYearColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAcctnoNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.AcctnoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAcctnoNull()
            Me(Me.tableDOC_TRACK2022.AcctnoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNameNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNameNull()
            Me(Me.tableDOC_TRACK2022.NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAddressNull()
            Me(Me.tableDOC_TRACK2022.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProcessTimeNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.ProcessTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProcessTimeNull()
            Me(Me.tableDOC_TRACK2022.ProcessTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsxTransactionNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.xTransactionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetxTransactionNull()
            Me(Me.tableDOC_TRACK2022.xTransactionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNextStepNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.NextStepColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNextStepNull()
            Me(Me.tableDOC_TRACK2022.NextStepColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarksNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.RemarksColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarksNull()
            Me(Me.tableDOC_TRACK2022.RemarksColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRemarks1Null() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.Remarks1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRemarks1Null()
            Me(Me.tableDOC_TRACK2022.Remarks1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLoginNameNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.LoginNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLoginNameNull()
            Me(Me.tableDOC_TRACK2022.LoginNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFullNameNull() As Boolean
            Return Me.IsNull(Me.tableDOC_TRACK2022.FullNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFullNameNull()
            Me(Me.tableDOC_TRACK2022.FullNameColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ItemCodeSetupRow
        Inherits Global.System.Data.DataRow
        
        Private tableItemCodeSetup As ItemCodeSetupDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableItemCodeSetup = CType(Me.Table,ItemCodeSetupDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RecordNo() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemCodeSetup.RecordNoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RecordNo' in table 'ItemCodeSetup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemCodeSetup.RecordNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DateInput() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemCodeSetup.DateInputColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateInput' in table 'ItemCodeSetup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemCodeSetup.DateInputColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemCode() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemCodeSetup.ItemCodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemCode' in table 'ItemCodeSetup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemCodeSetup.ItemCodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ItemDesc() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemCodeSetup.ItemDescColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ItemDesc' in table 'ItemCodeSetup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemCodeSetup.ItemDescColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotSupply() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemCodeSetup.TotSupplyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotSupply' in table 'ItemCodeSetup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemCodeSetup.TotSupplyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotSupplyLeft() As String
            Get
                Try 
                    Return CType(Me(Me.tableItemCodeSetup.TotSupplyLeftColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotSupplyLeft' in table 'ItemCodeSetup' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableItemCodeSetup.TotSupplyLeftColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRecordNoNull() As Boolean
            Return Me.IsNull(Me.tableItemCodeSetup.RecordNoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRecordNoNull()
            Me(Me.tableItemCodeSetup.RecordNoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDateInputNull() As Boolean
            Return Me.IsNull(Me.tableItemCodeSetup.DateInputColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDateInputNull()
            Me(Me.tableItemCodeSetup.DateInputColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemCodeNull() As Boolean
            Return Me.IsNull(Me.tableItemCodeSetup.ItemCodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemCodeNull()
            Me(Me.tableItemCodeSetup.ItemCodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsItemDescNull() As Boolean
            Return Me.IsNull(Me.tableItemCodeSetup.ItemDescColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetItemDescNull()
            Me(Me.tableItemCodeSetup.ItemDescColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotSupplyNull() As Boolean
            Return Me.IsNull(Me.tableItemCodeSetup.TotSupplyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotSupplyNull()
            Me(Me.tableItemCodeSetup.TotSupplyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotSupplyLeftNull() As Boolean
            Return Me.IsNull(Me.tableItemCodeSetup.TotSupplyLeftColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotSupplyLeftNull()
            Me(Me.tableItemCodeSetup.TotSupplyLeftColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SystemLogRow
        Inherits Global.System.Data.DataRow
        
        Private tableSystemLog As SystemLogDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSystemLog = CType(Me.Table,SystemLogDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IP() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.IPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IP' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.IPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AppUser() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.AppUserColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AppUser' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.AppUserColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AppModule() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.AppModuleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AppModule' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.AppModuleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property login_time() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.login_timeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'login_time' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.login_timeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LogInApp() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.LogInAppColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LogInApp' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.LogInAppColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HostName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.HostNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HostName' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.HostNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AppName() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.AppNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AppName' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.AppNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property loginame() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.loginameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'loginame' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.loginameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nt_domain() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.nt_domainColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nt_domain' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.nt_domainColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property nt_username() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.nt_usernameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nt_username' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.nt_usernameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property net_address() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.net_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'net_address' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.net_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property F_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.F_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'F_Name' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.F_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OBJ_ID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSystemLog.OBJ_IDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OBJ_ID' in table 'SystemLog' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemLog.OBJ_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KeyNum() As Decimal
            Get
                Return CType(Me(Me.tableSystemLog.KeyNumColumn),Decimal)
            End Get
            Set
                Me(Me.tableSystemLog.KeyNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIPNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.IPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIPNull()
            Me(Me.tableSystemLog.IPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAppUserNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.AppUserColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAppUserNull()
            Me(Me.tableSystemLog.AppUserColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAppModuleNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.AppModuleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAppModuleNull()
            Me(Me.tableSystemLog.AppModuleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Islogin_timeNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.login_timeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setlogin_timeNull()
            Me(Me.tableSystemLog.login_timeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLogInAppNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.LogInAppColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLogInAppNull()
            Me(Me.tableSystemLog.LogInAppColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHostNameNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.HostNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHostNameNull()
            Me(Me.tableSystemLog.HostNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAppNameNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.AppNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAppNameNull()
            Me(Me.tableSystemLog.AppNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsloginameNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.loginameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetloginameNull()
            Me(Me.tableSystemLog.loginameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnt_domainNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.nt_domainColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnt_domainNull()
            Me(Me.tableSystemLog.nt_domainColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnt_usernameNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.nt_usernameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnt_usernameNull()
            Me(Me.tableSystemLog.nt_usernameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isnet_addressNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.net_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setnet_addressNull()
            Me(Me.tableSystemLog.net_addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsF_NameNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.F_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetF_NameNull()
            Me(Me.tableSystemLog.F_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOBJ_IDNull() As Boolean
            Return Me.IsNull(Me.tableSystemLog.OBJ_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOBJ_IDNull()
            Me(Me.tableSystemLog.OBJ_IDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SystemTransRow
        Inherits Global.System.Data.DataRow
        
        Private tableSystemTrans As SystemTransDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSystemTrans = CType(Me.Table,SystemTransDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property login_time() As String
            Get
                Return CType(Me(Me.tableSystemTrans.login_timeColumn),String)
            End Get
            Set
                Me(Me.tableSystemTrans.login_timeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HostName() As String
            Get
                Return CType(Me(Me.tableSystemTrans.HostNameColumn),String)
            End Get
            Set
                Me(Me.tableSystemTrans.HostNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TDN() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemTrans.TDNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TDN' in table 'SystemTrans' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemTrans.TDNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ASSESSNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSystemTrans.ASSESSNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASSESSNO' in table 'SystemTrans' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSystemTrans.ASSESSNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTDNNull() As Boolean
            Return Me.IsNull(Me.tableSystemTrans.TDNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTDNNull()
            Me(Me.tableSystemTrans.TDNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsASSESSNONull() As Boolean
            Return Me.IsNull(Me.tableSystemTrans.ASSESSNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetASSESSNONull()
            Me(Me.tableSystemTrans.ASSESSNOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class UserControlRow
        Inherits Global.System.Data.DataRow
        
        Private tableUserControl As UserControlDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUserControl = CType(Me.Table,UserControlDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LoginName() As String
            Get
                Return CType(Me(Me.tableUserControl.LoginNameColumn),String)
            End Get
            Set
                Me(Me.tableUserControl.LoginNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SystemAccess() As String
            Get
                Return CType(Me(Me.tableUserControl.SystemAccessColumn),String)
            End Get
            Set
                Me(Me.tableUserControl.SystemAccessColumn) = value
            End Set
        End Property
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Z_ASS_AUD_2020Row
        Inherits Global.System.Data.DataRow
        
        Private tableZ_ASS_AUD_2020 As Z_ASS_AUD_2020DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableZ_ASS_AUD_2020 = CType(Me.Table,Z_ASS_AUD_2020DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACCTNO() As String
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.ACCTNOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACCTNO' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.ACCTNOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FORYEAR() As String
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.FORYEARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FORYEAR' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.FORYEARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BUS_CODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.BUS_CODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BUS_CODE' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.BUS_CODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STATCODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.STATCODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STATCODE' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.STATCODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GARBAGE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.GARBAGEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GARBAGE' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.GARBAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MAYORS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.MAYORSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAYORS' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.MAYORSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SANITARY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.SANITARYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SANITARY' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.SANITARYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIRE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.FIREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRE' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.FIREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GARBAGE_O() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.GARBAGE_OColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GARBAGE_O' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.GARBAGE_OColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sanitary_O() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.Sanitary_OColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sanitary_O' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.Sanitary_OColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FIRE_O() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.FIRE_OColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FIRE_O' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.FIRE_OColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RF12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.RF12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RF12' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.RF12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Date_Processed() As Date
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.Date_ProcessedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Date_Processed' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.Date_ProcessedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _MODULE() As String
            Get
                Try 
                    Return CType(Me(Me.tableZ_ASS_AUD_2020.MODULEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODULE' in table 'Z_ASS_AUD_2020' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableZ_ASS_AUD_2020.MODULEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACCTNONull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.ACCTNOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACCTNONull()
            Me(Me.tableZ_ASS_AUD_2020.ACCTNOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFORYEARNull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.FORYEARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFORYEARNull()
            Me(Me.tableZ_ASS_AUD_2020.FORYEARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBUS_CODENull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.BUS_CODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBUS_CODENull()
            Me(Me.tableZ_ASS_AUD_2020.BUS_CODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTATCODENull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.STATCODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTATCODENull()
            Me(Me.tableZ_ASS_AUD_2020.STATCODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGARBAGENull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.GARBAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGARBAGENull()
            Me(Me.tableZ_ASS_AUD_2020.GARBAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMAYORSNull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.MAYORSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMAYORSNull()
            Me(Me.tableZ_ASS_AUD_2020.MAYORSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSANITARYNull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.SANITARYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSANITARYNull()
            Me(Me.tableZ_ASS_AUD_2020.SANITARYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIRENull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.FIREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIRENull()
            Me(Me.tableZ_ASS_AUD_2020.FIREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGARBAGE_ONull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.GARBAGE_OColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGARBAGE_ONull()
            Me(Me.tableZ_ASS_AUD_2020.GARBAGE_OColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSanitary_ONull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.Sanitary_OColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSanitary_ONull()
            Me(Me.tableZ_ASS_AUD_2020.Sanitary_OColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFIRE_ONull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.FIRE_OColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFIRE_ONull()
            Me(Me.tableZ_ASS_AUD_2020.FIRE_OColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRF12Null() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.RF12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRF12Null()
            Me(Me.tableZ_ASS_AUD_2020.RF12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDate_ProcessedNull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.Date_ProcessedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDate_ProcessedNull()
            Me(Me.tableZ_ASS_AUD_2020.Date_ProcessedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_MODULENull() As Boolean
            Return Me.IsNull(Me.tableZ_ASS_AUD_2020.MODULEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_MODULENull()
            Me(Me.tableZ_ASS_AUD_2020.MODULEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class adminADDLEXTNRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As adminADDLEXTNRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As adminADDLEXTNRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As adminADDLEXTNRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BankCodeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BankCodeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BankCodeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BankCodeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class chyRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As chyRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As chyRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As chyRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class chy_1RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As chy_1Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As chy_1Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As chy_1Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class chy_2RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As chy_2Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As chy_2Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As chy_2Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class chyADDLEXTNRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As chyADDLEXTNRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As chyADDLEXTNRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As chyADDLEXTNRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class dennisenriquezADDLEXTNRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dennisenriquezADDLEXTNRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As dennisenriquezADDLEXTNRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As dennisenriquezADDLEXTNRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DOC_TRACK2019RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DOC_TRACK2019Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DOC_TRACK2019Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DOC_TRACK2019Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DOC_TRACK2022RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DOC_TRACK2022Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DOC_TRACK2022Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DOC_TRACK2022Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ItemCodeSetupRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ItemCodeSetupRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ItemCodeSetupRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ItemCodeSetupRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SystemLogRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SystemLogRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SystemLogRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SystemLogRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SystemTransRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SystemTransRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SystemTransRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SystemTransRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class UserControlRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As UserControlRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As UserControlRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As UserControlRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Z_ASS_AUD_2020RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Z_ASS_AUD_2020Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Z_ASS_AUD_2020Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Z_ASS_AUD_2020Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace BPTOP2023_1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class adminADDLEXTNTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "adminADDLEXTN"
            tableMapping.ColumnMappings.Add("Acctno", "Acctno")
            tableMapping.ColumnMappings.Add("Foryear", "Foryear")
            tableMapping.ColumnMappings.Add("Bus_Code", "Bus_Code")
            tableMapping.ColumnMappings.Add("ZONE", "ZONE")
            tableMapping.ColumnMappings.Add("RTC", "RTC")
            tableMapping.ColumnMappings.Add("PNP", "PNP")
            tableMapping.ColumnMappings.Add("FISCAL", "FISCAL")
            tableMapping.ColumnMappings.Add("BUILDING", "BUILDING")
            tableMapping.ColumnMappings.Add("MECHANICAL", "MECHANICAL")
            tableMapping.ColumnMappings.Add("ELECTRICAL", "ELECTRICAL")
            tableMapping.ColumnMappings.Add("PLUMBING", "PLUMBING")
            tableMapping.ColumnMappings.Add("SIGNBILL", "SIGNBILL")
            tableMapping.ColumnMappings.Add("OTHER", "OTHER")
            tableMapping.ColumnMappings.Add("STICKER", "STICKER")
            tableMapping.ColumnMappings.Add("MEDICAL", "MEDICAL")
            tableMapping.ColumnMappings.Add("WMEASURES", "WMEASURES")
            tableMapping.ColumnMappings.Add("FIRECODE", "FIRECODE")
            tableMapping.ColumnMappings.Add("RF1", "RF1")
            tableMapping.ColumnMappings.Add("RF2", "RF2")
            tableMapping.ColumnMappings.Add("RF3", "RF3")
            tableMapping.ColumnMappings.Add("RF4", "RF4")
            tableMapping.ColumnMappings.Add("RF5", "RF5")
            tableMapping.ColumnMappings.Add("RF6", "RF6")
            tableMapping.ColumnMappings.Add("RF7", "RF7")
            tableMapping.ColumnMappings.Add("RF8", "RF8")
            tableMapping.ColumnMappings.Add("RF9", "RF9")
            tableMapping.ColumnMappings.Add("RF10", "RF10")
            tableMapping.ColumnMappings.Add("RF11", "RF11")
            tableMapping.ColumnMappings.Add("RF12", "RF12")
            tableMapping.ColumnMappings.Add("RF13", "RF13")
            tableMapping.ColumnMappings.Add("RF14", "RF14")
            tableMapping.ColumnMappings.Add("RF15", "RF15")
            tableMapping.ColumnMappings.Add("ZONE_HP", "ZONE_HP")
            tableMapping.ColumnMappings.Add("RTC_HP", "RTC_HP")
            tableMapping.ColumnMappings.Add("PNP_HP", "PNP_HP")
            tableMapping.ColumnMappings.Add("FISCAL_HP", "FISCAL_HP")
            tableMapping.ColumnMappings.Add("BUILDING_HP", "BUILDING_HP")
            tableMapping.ColumnMappings.Add("MECHANICAL_HP", "MECHANICAL_HP")
            tableMapping.ColumnMappings.Add("ELECTRICAL_HP", "ELECTRICAL_HP")
            tableMapping.ColumnMappings.Add("PLUMBING_HP", "PLUMBING_HP")
            tableMapping.ColumnMappings.Add("SIGNBILL_HP", "SIGNBILL_HP")
            tableMapping.ColumnMappings.Add("OTHER_HP", "OTHER_HP")
            tableMapping.ColumnMappings.Add("STICKER_HP", "STICKER_HP")
            tableMapping.ColumnMappings.Add("MEDICAL_HP", "MEDICAL_HP")
            tableMapping.ColumnMappings.Add("WMEASURES_HP", "WMEASURES_HP")
            tableMapping.ColumnMappings.Add("FIRECODE_HP", "FIRECODE_HP")
            tableMapping.ColumnMappings.Add("RF1_HP", "RF1_HP")
            tableMapping.ColumnMappings.Add("RF2_HP", "RF2_HP")
            tableMapping.ColumnMappings.Add("RF3_HP", "RF3_HP")
            tableMapping.ColumnMappings.Add("RF4_HP", "RF4_HP")
            tableMapping.ColumnMappings.Add("RF5_HP", "RF5_HP")
            tableMapping.ColumnMappings.Add("RF6_HP", "RF6_HP")
            tableMapping.ColumnMappings.Add("RF7_HP", "RF7_HP")
            tableMapping.ColumnMappings.Add("RF8_HP", "RF8_HP")
            tableMapping.ColumnMappings.Add("RF9_HP", "RF9_HP")
            tableMapping.ColumnMappings.Add("RF10_HP", "RF10_HP")
            tableMapping.ColumnMappings.Add("RF11_HP", "RF11_HP")
            tableMapping.ColumnMappings.Add("RF12_HP", "RF12_HP")
            tableMapping.ColumnMappings.Add("RF13_HP", "RF13_HP")
            tableMapping.ColumnMappings.Add("RF14_HP", "RF14_HP")
            tableMapping.ColumnMappings.Add("RF15_HP", "RF15_HP")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[adminADDLEXTN] ([Acctno], [Foryear], [Bus_Code], [ZONE], [RTC]"& _ 
                ", [PNP], [FISCAL], [BUILDING], [MECHANICAL], [ELECTRICAL], [PLUMBING], [SIGNBILL"& _ 
                "], [OTHER], [STICKER], [MEDICAL], [WMEASURES], [FIRECODE], [RF1], [RF2], [RF3], "& _ 
                "[RF4], [RF5], [RF6], [RF7], [RF8], [RF9], [RF10], [RF11], [RF12], [RF13], [RF14]"& _ 
                ", [RF15], [ZONE_HP], [RTC_HP], [PNP_HP], [FISCAL_HP], [BUILDING_HP], [MECHANICAL"& _ 
                "_HP], [ELECTRICAL_HP], [PLUMBING_HP], [SIGNBILL_HP], [OTHER_HP], [STICKER_HP], ["& _ 
                "MEDICAL_HP], [WMEASURES_HP], [FIRECODE_HP], [RF1_HP], [RF2_HP], [RF3_HP], [RF4_H"& _ 
                "P], [RF5_HP], [RF6_HP], [RF7_HP], [RF8_HP], [RF9_HP], [RF10_HP], [RF11_HP], [RF1"& _ 
                "2_HP], [RF13_HP], [RF14_HP], [RF15_HP]) VALUES (@Acctno, @Foryear, @Bus_Code, @Z"& _ 
                "ONE, @RTC, @PNP, @FISCAL, @BUILDING, @MECHANICAL, @ELECTRICAL, @PLUMBING, @SIGNB"& _ 
                "ILL, @OTHER, @STICKER, @MEDICAL, @WMEASURES, @FIRECODE, @RF1, @RF2, @RF3, @RF4, "& _ 
                "@RF5, @RF6, @RF7, @RF8, @RF9, @RF10, @RF11, @RF12, @RF13, @RF14, @RF15, @ZONE_HP"& _ 
                ", @RTC_HP, @PNP_HP, @FISCAL_HP, @BUILDING_HP, @MECHANICAL_HP, @ELECTRICAL_HP, @P"& _ 
                "LUMBING_HP, @SIGNBILL_HP, @OTHER_HP, @STICKER_HP, @MEDICAL_HP, @WMEASURES_HP, @F"& _ 
                "IRECODE_HP, @RF1_HP, @RF2_HP, @RF3_HP, @RF4_HP, @RF5_HP, @RF6_HP, @RF7_HP, @RF8_"& _ 
                "HP, @RF9_HP, @RF10_HP, @RF11_HP, @RF12_HP, @RF13_HP, @RF14_HP, @RF15_HP)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Acctno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Acctno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Foryear", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Foryear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bus_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bus_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZONE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RTC", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RTC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PNP", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FISCAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FISCAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUILDING", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUILDING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MECHANICAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MECHANICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ELECTRICAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ELECTRICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLUMBING", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLUMBING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIGNBILL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIGNBILL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STICKER", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STICKER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEDICAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEDICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WMEASURES", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WMEASURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIRECODE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIRECODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF3", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF4", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF5", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF6", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF7", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF8", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF9", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF10", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF11", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF12", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF13", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF14", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF14", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF15", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZONE_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZONE_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RTC_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RTC_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PNP_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNP_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FISCAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FISCAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUILDING_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUILDING_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MECHANICAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MECHANICAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ELECTRICAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ELECTRICAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLUMBING_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLUMBING_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIGNBILL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIGNBILL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STICKER_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STICKER_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEDICAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEDICAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WMEASURES_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WMEASURES_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIRECODE_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIRECODE_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF1_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF1_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF2_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF2_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF3_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF3_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF4_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF4_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF5_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF5_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF6_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF6_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF7_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF7_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF8_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF8_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF9_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF9_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF10_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF10_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF11_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF11_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF12_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF12_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF13_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF13_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF14_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF14_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF15_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF15_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Acctno, Foryear, Bus_Code, ZONE, RTC, PNP, FISCAL, BUILDING, MECHANICAL, E"& _ 
                "LECTRICAL, PLUMBING, SIGNBILL, OTHER, STICKER, MEDICAL, WMEASURES, FIRECODE, RF1"& _ 
                ", RF2, RF3, RF4, RF5, RF6, RF7, RF8, RF9, RF10, RF11, RF12, RF13, RF14, RF15, ZO"& _ 
                "NE_HP, RTC_HP, PNP_HP, FISCAL_HP, BUILDING_HP, MECHANICAL_HP, ELECTRICAL_HP, PLU"& _ 
                "MBING_HP, SIGNBILL_HP, OTHER_HP, STICKER_HP, MEDICAL_HP, WMEASURES_HP, FIRECODE_"& _ 
                "HP, RF1_HP, RF2_HP, RF3_HP, RF4_HP, RF5_HP, RF6_HP, RF7_HP, RF8_HP, RF9_HP, RF10"& _ 
                "_HP, RF11_HP, RF12_HP, RF13_HP, RF14_HP, RF15_HP FROM dbo.adminADDLEXTN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.adminADDLEXTNDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.adminADDLEXTNDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.adminADDLEXTNDataTable = New BPTOP2023_1.adminADDLEXTNDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.adminADDLEXTNDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "adminADDLEXTN")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal ZONE As Global.System.Nullable(Of Decimal),  _
                    ByVal RTC As Global.System.Nullable(Of Decimal),  _
                    ByVal PNP As Global.System.Nullable(Of Decimal),  _
                    ByVal FISCAL As Global.System.Nullable(Of Decimal),  _
                    ByVal BUILDING As Global.System.Nullable(Of Decimal),  _
                    ByVal MECHANICAL As Global.System.Nullable(Of Decimal),  _
                    ByVal ELECTRICAL As Global.System.Nullable(Of Decimal),  _
                    ByVal PLUMBING As Global.System.Nullable(Of Decimal),  _
                    ByVal SIGNBILL As Global.System.Nullable(Of Decimal),  _
                    ByVal OTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal STICKER As Global.System.Nullable(Of Decimal),  _
                    ByVal MEDICAL As Global.System.Nullable(Of Decimal),  _
                    ByVal WMEASURES As Global.System.Nullable(Of Decimal),  _
                    ByVal FIRECODE As Global.System.Nullable(Of Decimal),  _
                    ByVal RF1 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF2 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF3 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF4 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF5 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF6 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF7 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF8 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF9 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF10 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF11 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF12 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF13 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF14 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF15 As Global.System.Nullable(Of Decimal),  _
                    ByVal ZONE_HP As String,  _
                    ByVal RTC_HP As String,  _
                    ByVal PNP_HP As String,  _
                    ByVal FISCAL_HP As String,  _
                    ByVal BUILDING_HP As String,  _
                    ByVal MECHANICAL_HP As String,  _
                    ByVal ELECTRICAL_HP As String,  _
                    ByVal PLUMBING_HP As String,  _
                    ByVal SIGNBILL_HP As String,  _
                    ByVal OTHER_HP As String,  _
                    ByVal STICKER_HP As String,  _
                    ByVal MEDICAL_HP As String,  _
                    ByVal WMEASURES_HP As String,  _
                    ByVal FIRECODE_HP As String,  _
                    ByVal RF1_HP As String,  _
                    ByVal RF2_HP As String,  _
                    ByVal RF3_HP As String,  _
                    ByVal RF4_HP As String,  _
                    ByVal RF5_HP As String,  _
                    ByVal RF6_HP As String,  _
                    ByVal RF7_HP As String,  _
                    ByVal RF8_HP As String,  _
                    ByVal RF9_HP As String,  _
                    ByVal RF10_HP As String,  _
                    ByVal RF11_HP As String,  _
                    ByVal RF12_HP As String,  _
                    ByVal RF13_HP As String,  _
                    ByVal RF14_HP As String,  _
                    ByVal RF15_HP As String) As Integer
            If (Acctno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Acctno,String)
            End If
            If (Foryear Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Foryear,String)
            End If
            If (Bus_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Bus_Code,String)
            End If
            If (ZONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ZONE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (RTC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(RTC.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PNP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PNP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FISCAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FISCAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BUILDING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BUILDING.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MECHANICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(MECHANICAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (ELECTRICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ELECTRICAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PLUMBING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PLUMBING.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (SIGNBILL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SIGNBILL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (OTHER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(OTHER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (STICKER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(STICKER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (MEDICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(MEDICAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (WMEASURES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(WMEASURES.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (FIRECODE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FIRECODE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (RF1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RF1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (RF2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RF2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (RF3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(RF3.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (RF4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(RF4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (RF5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(RF5.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (RF6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(RF6.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (RF7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(RF7.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (RF8.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(RF8.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (RF9.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(RF9.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (RF10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(RF10.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (RF11.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(RF11.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RF12.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RF12.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (RF13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(RF13.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (RF14.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(RF14.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (RF15.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(RF15.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (ZONE_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(ZONE_HP,String)
            End If
            If (RTC_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(RTC_HP,String)
            End If
            If (PNP_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(PNP_HP,String)
            End If
            If (FISCAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(FISCAL_HP,String)
            End If
            If (BUILDING_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(BUILDING_HP,String)
            End If
            If (MECHANICAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(MECHANICAL_HP,String)
            End If
            If (ELECTRICAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ELECTRICAL_HP,String)
            End If
            If (PLUMBING_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(PLUMBING_HP,String)
            End If
            If (SIGNBILL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(SIGNBILL_HP,String)
            End If
            If (OTHER_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(OTHER_HP,String)
            End If
            If (STICKER_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(STICKER_HP,String)
            End If
            If (MEDICAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(MEDICAL_HP,String)
            End If
            If (WMEASURES_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(WMEASURES_HP,String)
            End If
            If (FIRECODE_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(FIRECODE_HP,String)
            End If
            If (RF1_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(RF1_HP,String)
            End If
            If (RF2_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(RF2_HP,String)
            End If
            If (RF3_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(RF3_HP,String)
            End If
            If (RF4_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(RF4_HP,String)
            End If
            If (RF5_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(RF5_HP,String)
            End If
            If (RF6_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(RF6_HP,String)
            End If
            If (RF7_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(RF7_HP,String)
            End If
            If (RF8_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(RF8_HP,String)
            End If
            If (RF9_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(RF9_HP,String)
            End If
            If (RF10_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(RF10_HP,String)
            End If
            If (RF11_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(RF11_HP,String)
            End If
            If (RF12_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(RF12_HP,String)
            End If
            If (RF13_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(RF13_HP,String)
            End If
            If (RF14_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(RF14_HP,String)
            End If
            If (RF15_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(RF15_HP,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BankCodeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "BankCode"
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("DateUpdated", "DateUpdated")
            tableMapping.ColumnMappings.Add("Updater", "Updater")
            tableMapping.ColumnMappings.Add("DateEncoded", "DateEncoded")
            tableMapping.ColumnMappings.Add("Encoder", "Encoder")
            tableMapping.ColumnMappings.Add("rg", "rg")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BankCode] WHERE (([Code] = @Original_Code))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BankCode] ([Code], [Description], [DateUpdated], [Updater], [D"& _ 
                "ateEncoded], [Encoder], [rg]) VALUES (@Code, @Description, @DateUpdated, @Update"& _ 
                "r, @DateEncoded, @Encoder, @rg)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateUpdated", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateUpdated", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Updater", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Updater", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateEncoded", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEncoded", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Encoder", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Encoder", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@rg", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "rg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BankCode] SET [Code] = @Code, [Description] = @Description, [DateUp"& _ 
                "dated] = @DateUpdated, [Updater] = @Updater, [DateEncoded] = @DateEncoded, [Enco"& _ 
                "der] = @Encoder, [rg] = @rg WHERE (([Code] = @Original_Code))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateUpdated", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateUpdated", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Updater", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Updater", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateEncoded", Global.System.Data.SqlDbType.DateTime2, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateEncoded", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Encoder", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Encoder", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@rg", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "rg", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Code, Description, DateUpdated, Updater, DateEncoded, Encoder, rg FROM dbo"& _ 
                ".BankCode"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.BankCodeDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.BankCodeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.BankCodeDataTable = New BPTOP2023_1.BankCodeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.BankCodeDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "BankCode")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Code As String) As Integer
            If (Original_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Code")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Code As String, ByVal Description As String, ByVal DateUpdated As Global.System.Nullable(Of Date), ByVal Updater As String, ByVal DateEncoded As Global.System.Nullable(Of Date), ByVal Encoder As String, ByVal rg As String) As Integer
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Description,String)
            End If
            If (DateUpdated.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DateUpdated.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Updater Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Updater,String)
            End If
            If (DateEncoded.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DateEncoded.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Encoder Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Encoder,String)
            End If
            If (rg Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(rg,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Code As String, ByVal Description As String, ByVal DateUpdated As Global.System.Nullable(Of Date), ByVal Updater As String, ByVal DateEncoded As Global.System.Nullable(Of Date), ByVal Encoder As String, ByVal rg As String, ByVal Original_Code As String) As Integer
            If (Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Code,String)
            End If
            If (Description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Description,String)
            End If
            If (DateUpdated.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DateUpdated.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Updater Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Updater,String)
            End If
            If (DateEncoded.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DateEncoded.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Encoder Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Encoder,String)
            End If
            If (rg Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(rg,String)
            End If
            If (Original_Code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Code")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Code,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Description As String, ByVal DateUpdated As Global.System.Nullable(Of Date), ByVal Updater As String, ByVal DateEncoded As Global.System.Nullable(Of Date), ByVal Encoder As String, ByVal rg As String, ByVal Original_Code As String) As Integer
            Return Me.Update(Original_Code, Description, DateUpdated, Updater, DateEncoded, Encoder, rg, Original_Code)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class chyTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "chy"
            tableMapping.ColumnMappings.Add("Acctno", "Acctno")
            tableMapping.ColumnMappings.Add("Foryear", "Foryear")
            tableMapping.ColumnMappings.Add("Bus_Code", "Bus_Code")
            tableMapping.ColumnMappings.Add("Desc1", "Desc1")
            tableMapping.ColumnMappings.Add("Taxbase", "Taxbase")
            tableMapping.ColumnMappings.Add("Annualdue", "Annualdue")
            tableMapping.ColumnMappings.Add("Taxdue", "Taxdue")
            tableMapping.ColumnMappings.Add("PenDue", "PenDue")
            tableMapping.ColumnMappings.Add("Totdue", "Totdue")
            tableMapping.ColumnMappings.Add("Amt_Pd", "Amt_Pd")
            tableMapping.ColumnMappings.Add("Amt_PenPd", "Amt_PenPd")
            tableMapping.ColumnMappings.Add("Discount", "Discount")
            tableMapping.ColumnMappings.Add("Taxcode", "Taxcode")
            tableMapping.ColumnMappings.Add("prevqtr", "prevqtr")
            tableMapping.ColumnMappings.Add("Qtryr1", "Qtryr1")
            tableMapping.ColumnMappings.Add("Qtryr2", "Qtryr2")
            tableMapping.ColumnMappings.Add("QtrPaid", "QtrPaid")
            tableMapping.ColumnMappings.Add("Remarks0", "Remarks0")
            tableMapping.ColumnMappings.Add("Remarks1", "Remarks1")
            tableMapping.ColumnMappings.Add("Pres", "Pres")
            tableMapping.ColumnMappings.Add("Prev", "Prev")
            tableMapping.ColumnMappings.Add("Statcode", "Statcode")
            tableMapping.ColumnMappings.Add("ASSESSNO", "ASSESSNO")
            tableMapping.ColumnMappings.Add("Newsw", "Newsw")
            tableMapping.ColumnMappings.Add("ModeP", "ModeP")
            tableMapping.ColumnMappings.Add("GradFix", "GradFix")
            tableMapping.ColumnMappings.Add("Capital", "Capital")
            tableMapping.ColumnMappings.Add("Xsort", "Xsort")
            tableMapping.ColumnMappings.Add("ORNo", "ORNo")
            tableMapping.ColumnMappings.Add("DatePaid", "DatePaid")
            tableMapping.ColumnMappings.Add("BrgyCode", "BrgyCode")
            tableMapping.ColumnMappings.Add("LocaCode", "LocaCode")
            tableMapping.ColumnMappings.Add("L_DatePD", "L_DatePD")
            tableMapping.ColumnMappings.Add("MainAcctCode", "MainAcctCode")
            tableMapping.ColumnMappings.Add("MainAcctDesc", "MainAcctDesc")
            tableMapping.ColumnMappings.Add("SubAcctCode", "SubAcctCode")
            tableMapping.ColumnMappings.Add("SubAcctDesc", "SubAcctDesc")
            tableMapping.ColumnMappings.Add("MainAcctCodePen", "MainAcctCodePen")
            tableMapping.ColumnMappings.Add("MainAcctDescPen", "MainAcctDescPen")
            tableMapping.ColumnMappings.Add("SubAcctCodePen", "SubAcctCodePen")
            tableMapping.ColumnMappings.Add("SubAcctDescPen", "SubAcctDescPen")
            tableMapping.ColumnMappings.Add("Amt_Pd1", "Amt_Pd1")
            tableMapping.ColumnMappings.Add("Amt_PenPd1", "Amt_PenPd1")
            tableMapping.ColumnMappings.Add("NewAmt_Pd", "NewAmt_Pd")
            tableMapping.ColumnMappings.Add("NewAmt_PenPd", "NewAmt_PenPd")
            tableMapping.ColumnMappings.Add("NewTaxdue", "NewTaxdue")
            tableMapping.ColumnMappings.Add("NewPenDue", "NewPenDue")
            tableMapping.ColumnMappings.Add("FieldName", "FieldName")
            tableMapping.ColumnMappings.Add("PrevGMonth", "PrevGMonth")
            tableMapping.ColumnMappings.Add("GDateEsta", "GDateEsta")
            tableMapping.ColumnMappings.Add("GMonthPaid", "GMonthPaid")
            tableMapping.ColumnMappings.Add("DATE_ESTA", "DATE_ESTA")
            tableMapping.ColumnMappings.Add("YearPeriod", "YearPeriod")
            tableMapping.ColumnMappings.Add("NotEdit", "NotEdit")
            tableMapping.ColumnMappings.Add("NotDel", "NotDel")
            tableMapping.ColumnMappings.Add("AssessTotal", "AssessTotal")
            tableMapping.ColumnMappings.Add("UsedTCred", "UsedTCred")
            tableMapping.ColumnMappings.Add("ForClose", "ForClose")
            tableMapping.ColumnMappings.Add("xORNO", "xORNO")
            tableMapping.ColumnMappings.Add("xSRS", "xSRS")
            tableMapping.ColumnMappings.Add("xTotal", "xTotal")
            tableMapping.ColumnMappings.Add("RASSESBY", "RASSESBY")
            tableMapping.ColumnMappings.Add("xSQUENCELocal", "xSQUENCELocal")
            tableMapping.ColumnMappings.Add("xSQUENCEPen", "xSQUENCEPen")
            tableMapping.ColumnMappings.Add("xSQUENCE", "xSQUENCE")
            tableMapping.ColumnMappings.Add("Area", "Area")
            tableMapping.ColumnMappings.Add("QDUE", "QDUE")
            tableMapping.ColumnMappings.Add("ADUE", "ADUE")
            tableMapping.ColumnMappings.Add("QAMT", "QAMT")
            tableMapping.ColumnMappings.Add("AAMT", "AAMT")
            tableMapping.ColumnMappings.Add("RES1", "RES1")
            tableMapping.ColumnMappings.Add("RES2", "RES2")
            tableMapping.ColumnMappings.Add("RES3", "RES3")
            tableMapping.ColumnMappings.Add("RES4", "RES4")
            tableMapping.ColumnMappings.Add("RES5", "RES5")
            tableMapping.ColumnMappings.Add("IsRegBill", "IsRegBill")
            tableMapping.ColumnMappings.Add("RES", "RES")
            tableMapping.ColumnMappings.Add("PenYear", "PenYear")
            tableMapping.ColumnMappings.Add("NotDelete", "NotDelete")
            tableMapping.ColumnMappings.Add("I_YEAR1", "I_YEAR1")
            tableMapping.ColumnMappings.Add("I_DISCOUNT1", "I_DISCOUNT1")
            tableMapping.ColumnMappings.Add("I_YEAR2", "I_YEAR2")
            tableMapping.ColumnMappings.Add("I_DISCOUNT2", "I_DISCOUNT2")
            tableMapping.ColumnMappings.Add("I_YEAR3", "I_YEAR3")
            tableMapping.ColumnMappings.Add("I_DISCOUNT3", "I_DISCOUNT3")
            tableMapping.ColumnMappings.Add("I_YEAR4", "I_YEAR4")
            tableMapping.ColumnMappings.Add("I_DISCOUNT4", "I_DISCOUNT4")
            tableMapping.ColumnMappings.Add("EDITEDBY", "EDITEDBY")
            tableMapping.ColumnMappings.Add("X1", "X1")
            tableMapping.ColumnMappings.Add("X2", "X2")
            tableMapping.ColumnMappings.Add("X3", "X3")
            tableMapping.ColumnMappings.Add("X4", "X4")
            tableMapping.ColumnMappings.Add("X5", "X5")
            tableMapping.ColumnMappings.Add("BLGFSORT", "BLGFSORT")
            tableMapping.ColumnMappings.Add("Provision", "Provision")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("xMainAcctCode", "xMainAcctCode")
            tableMapping.ColumnMappings.Add("xMainAcctDesc", "xMainAcctDesc")
            tableMapping.ColumnMappings.Add("xSubAcctCode", "xSubAcctCode")
            tableMapping.ColumnMappings.Add("xSubAcctDesc", "xSubAcctDesc")
            tableMapping.ColumnMappings.Add("xMainAcctCodePen", "xMainAcctCodePen")
            tableMapping.ColumnMappings.Add("xMainAcctDescPen", "xMainAcctDescPen")
            tableMapping.ColumnMappings.Add("xSubAcctCodePen", "xSubAcctCodePen")
            tableMapping.ColumnMappings.Add("xSubAcctDescPen", "xSubAcctDescPen")
            tableMapping.ColumnMappings.Add("TRANSTYPE", "TRANSTYPE")
            tableMapping.ColumnMappings.Add("ORIGDUEFEEADJ", "ORIGDUEFEEADJ")
            tableMapping.ColumnMappings.Add("XDEPT", "XDEPT")
            tableMapping.ColumnMappings.Add("FROMSP", "FROMSP")
            tableMapping.ColumnMappings.Add("FEEPEN", "FEEPEN")
            tableMapping.ColumnMappings.Add("PRODUCT", "PRODUCT")
            tableMapping.ColumnMappings.Add("BPLOTOIMS", "BPLOTOIMS")
            tableMapping.ColumnMappings.Add("BILLTYPE", "BILLTYPE")
            tableMapping.ColumnMappings.Add("NEW5", "NEW5")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[chy] ([Acctno], [Foryear], [Bus_Code], [Desc1], [Taxbase], [An"& _ 
                "nualdue], [Taxdue], [PenDue], [Totdue], [Amt_Pd], [Amt_PenPd], [Discount], [Taxc"& _ 
                "ode], [prevqtr], [Qtryr1], [Qtryr2], [QtrPaid], [Remarks0], [Remarks1], [Pres], "& _ 
                "[Prev], [Statcode], [ASSESSNO], [Newsw], [ModeP], [GradFix], [Capital], [Xsort],"& _ 
                " [ORNo], [DatePaid], [BrgyCode], [LocaCode], [L_DatePD], [MainAcctCode], [MainAc"& _ 
                "ctDesc], [SubAcctCode], [SubAcctDesc], [MainAcctCodePen], [MainAcctDescPen], [Su"& _ 
                "bAcctCodePen], [SubAcctDescPen], [Amt_Pd1], [Amt_PenPd1], [NewAmt_Pd], [NewAmt_P"& _ 
                "enPd], [NewTaxdue], [NewPenDue], [FieldName], [PrevGMonth], [GDateEsta], [GMonth"& _ 
                "Paid], [DATE_ESTA], [YearPeriod], [NotEdit], [NotDel], [AssessTotal], [UsedTCred"& _ 
                "], [ForClose], [xORNO], [xSRS], [xTotal], [RASSESBY], [xSQUENCELocal], [xSQUENCE"& _ 
                "Pen], [xSQUENCE], [Area], [QDUE], [ADUE], [QAMT], [AAMT], [RES1], [RES2], [RES3]"& _ 
                ", [RES4], [RES5], [IsRegBill], [RES], [PenYear], [NotDelete], [I_YEAR1], [I_DISC"& _ 
                "OUNT1], [I_YEAR2], [I_DISCOUNT2], [I_YEAR3], [I_DISCOUNT3], [I_YEAR4], [I_DISCOU"& _ 
                "NT4], [EDITEDBY], [X1], [X2], [X3], [X4], [X5], [BLGFSORT], [Provision], [Remark"& _ 
                "s], [xMainAcctCode], [xMainAcctDesc], [xSubAcctCode], [xSubAcctDesc], [xMainAcct"& _ 
                "CodePen], [xMainAcctDescPen], [xSubAcctCodePen], [xSubAcctDescPen], [TRANSTYPE],"& _ 
                " [ORIGDUEFEEADJ], [XDEPT], [FROMSP], [FEEPEN], [PRODUCT], [BPLOTOIMS], [BILLTYPE"& _ 
                "], [NEW5]) VALUES (@Acctno, @Foryear, @Bus_Code, @Desc1, @Taxbase, @Annualdue, @"& _ 
                "Taxdue, @PenDue, @Totdue, @Amt_Pd, @Amt_PenPd, @Discount, @Taxcode, @prevqtr, @Q"& _ 
                "tryr1, @Qtryr2, @QtrPaid, @Remarks0, @Remarks1, @Pres, @Prev, @Statcode, @ASSESS"& _ 
                "NO, @Newsw, @ModeP, @GradFix, @Capital, @Xsort, @ORNo, @DatePaid, @BrgyCode, @Lo"& _ 
                "caCode, @L_DatePD, @MainAcctCode, @MainAcctDesc, @SubAcctCode, @SubAcctDesc, @Ma"& _ 
                "inAcctCodePen, @MainAcctDescPen, @SubAcctCodePen, @SubAcctDescPen, @Amt_Pd1, @Am"& _ 
                "t_PenPd1, @NewAmt_Pd, @NewAmt_PenPd, @NewTaxdue, @NewPenDue, @FieldName, @PrevGM"& _ 
                "onth, @GDateEsta, @GMonthPaid, @DATE_ESTA, @YearPeriod, @NotEdit, @NotDel, @Asse"& _ 
                "ssTotal, @UsedTCred, @ForClose, @xORNO, @xSRS, @xTotal, @RASSESBY, @xSQUENCELoca"& _ 
                "l, @xSQUENCEPen, @xSQUENCE, @Area, @QDUE, @ADUE, @QAMT, @AAMT, @RES1, @RES2, @RE"& _ 
                "S3, @RES4, @RES5, @IsRegBill, @RES, @PenYear, @NotDelete, @I_YEAR1, @I_DISCOUNT1"& _ 
                ", @I_YEAR2, @I_DISCOUNT2, @I_YEAR3, @I_DISCOUNT3, @I_YEAR4, @I_DISCOUNT4, @EDITE"& _ 
                "DBY, @X1, @X2, @X3, @X4, @X5, @BLGFSORT, @Provision, @Remarks, @xMainAcctCode, @"& _ 
                "xMainAcctDesc, @xSubAcctCode, @xSubAcctDesc, @xMainAcctCodePen, @xMainAcctDescPe"& _ 
                "n, @xSubAcctCodePen, @xSubAcctDescPen, @TRANSTYPE, @ORIGDUEFEEADJ, @XDEPT, @FROM"& _ 
                "SP, @FEEPEN, @PRODUCT, @BPLOTOIMS, @BILLTYPE, @NEW5)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Acctno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Acctno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Foryear", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Foryear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bus_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bus_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Desc1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Desc1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Taxbase", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Taxbase", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Annualdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Annualdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Taxdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Taxdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PenDue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PenDue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Totdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Totdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_Pd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_Pd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_PenPd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_PenPd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Taxcode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Taxcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@prevqtr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "prevqtr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qtryr1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qtryr1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qtryr2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qtryr2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QtrPaid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QtrPaid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks0", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pres", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pres", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Prev", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Prev", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Statcode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Statcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSESSNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSESSNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Newsw", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Newsw", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModeP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModeP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GradFix", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GradFix", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Capital", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Capital", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Xsort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Xsort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatePaid", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DatePaid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BrgyCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrgyCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LocaCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocaCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@L_DatePD", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "L_DatePD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_Pd1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_Pd1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_PenPd1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_PenPd1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewAmt_Pd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewAmt_Pd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewAmt_PenPd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewAmt_PenPd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewTaxdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewTaxdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewPenDue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewPenDue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PrevGMonth", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PrevGMonth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GDateEsta", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GDateEsta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GMonthPaid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GMonthPaid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_ESTA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_ESTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YearPeriod", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearPeriod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NotEdit", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NotEdit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NotDel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NotDel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AssessTotal", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AssessTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UsedTCred", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UsedTCred", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForClose", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForClose", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xORNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xORNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSRS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSRS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xTotal", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RASSESBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RASSESBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSQUENCELocal", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSQUENCELocal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSQUENCEPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSQUENCEPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSQUENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSQUENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QDUE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QDUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADUE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QAMT", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QAMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AAMT", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AAMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES3", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES4", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsRegBill", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsRegBill", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PenYear", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PenYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NotDelete", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NotDelete", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT3", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT4", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDITEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BLGFSORT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BLGFSORT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Provision", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Provision", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRANSTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORIGDUEFEEADJ", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORIGDUEFEEADJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XDEPT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XDEPT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FROMSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FROMSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FEEPEN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FEEPEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRODUCT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BPLOTOIMS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BPLOTOIMS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BILLTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BILLTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEW5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEW5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Acctno, Foryear, Bus_Code, Desc1, Taxbase, Annualdue, Taxdue, PenDue, Totd"& _ 
                "ue, Amt_Pd, Amt_PenPd, Discount, Taxcode, prevqtr, Qtryr1, Qtryr2, QtrPaid, Rema"& _ 
                "rks0, Remarks1, Pres, Prev, Statcode, ASSESSNO, Newsw, ModeP, GradFix, Capital, "& _ 
                "Xsort, ORNo, DatePaid, BrgyCode, LocaCode, L_DatePD, MainAcctCode, MainAcctDesc,"& _ 
                " SubAcctCode, SubAcctDesc, MainAcctCodePen, MainAcctDescPen, SubAcctCodePen, Sub"& _ 
                "AcctDescPen, Amt_Pd1, Amt_PenPd1, NewAmt_Pd, NewAmt_PenPd, NewTaxdue, NewPenDue,"& _ 
                " FieldName, PrevGMonth, GDateEsta, GMonthPaid, DATE_ESTA, YearPeriod, NotEdit, N"& _ 
                "otDel, AssessTotal, UsedTCred, ForClose, xORNO, xSRS, xTotal, RASSESBY, xSQUENCE"& _ 
                "Local, xSQUENCEPen, xSQUENCE, Area, QDUE, ADUE, QAMT, AAMT, RES1, RES2, RES3, RE"& _ 
                "S4, RES5, IsRegBill, RES, PenYear, NotDelete, I_YEAR1, I_DISCOUNT1, I_YEAR2, I_D"& _ 
                "ISCOUNT2, I_YEAR3, I_DISCOUNT3, I_YEAR4, I_DISCOUNT4, EDITEDBY, X1, X2, X3, X4, "& _ 
                "X5, BLGFSORT, Provision, Remarks, xMainAcctCode, xMainAcctDesc, xSubAcctCode, xS"& _ 
                "ubAcctDesc, xMainAcctCodePen, xMainAcctDescPen, xSubAcctCodePen, xSubAcctDescPen"& _ 
                ", TRANSTYPE, ORIGDUEFEEADJ, XDEPT, FROMSP, FEEPEN, PRODUCT, BPLOTOIMS, BILLTYPE,"& _ 
                " NEW5 FROM dbo.chy"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.chyDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.chyDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.chyDataTable = New BPTOP2023_1.chyDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.chyDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "chy")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal Desc1 As String,  _
                    ByVal Taxbase As Global.System.Nullable(Of Decimal),  _
                    ByVal Annualdue As Global.System.Nullable(Of Decimal),  _
                    ByVal Taxdue As Global.System.Nullable(Of Decimal),  _
                    ByVal PenDue As Global.System.Nullable(Of Decimal),  _
                    ByVal Totdue As Global.System.Nullable(Of Decimal),  _
                    ByVal Amt_Pd As Global.System.Nullable(Of Decimal),  _
                    ByVal Amt_PenPd As Global.System.Nullable(Of Decimal),  _
                    ByVal Discount As Global.System.Nullable(Of Decimal),  _
                    ByVal Taxcode As String,  _
                    ByVal prevqtr As String,  _
                    ByVal Qtryr1 As String,  _
                    ByVal Qtryr2 As String,  _
                    ByVal QtrPaid As String,  _
                    ByVal Remarks0 As String,  _
                    ByVal Remarks1 As String,  _
                    ByVal Pres As String,  _
                    ByVal Prev As String,  _
                    ByVal Statcode As String,  _
                    ByVal ASSESSNO As String,  _
                    ByVal Newsw As String,  _
                    ByVal ModeP As String,  _
                    ByVal GradFix As String,  _
                    ByVal Capital As Global.System.Nullable(Of Decimal),  _
                    ByVal Xsort As String,  _
                    ByVal ORNo As String,  _
                    ByVal DatePaid As Global.System.Nullable(Of Date),  _
                    ByVal BrgyCode As String,  _
                    ByVal LocaCode As String,  _
                    ByVal L_DatePD As Global.System.Nullable(Of Date),  _
                    ByVal MainAcctCode As String,  _
                    ByVal MainAcctDesc As String,  _
                    ByVal SubAcctCode As String,  _
                    ByVal SubAcctDesc As String,  _
                    ByVal MainAcctCodePen As String,  _
                    ByVal MainAcctDescPen As String,  _
                    ByVal SubAcctCodePen As String,  _
                    ByVal SubAcctDescPen As String,  _
                    ByVal Amt_Pd1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Amt_PenPd1 As Global.System.Nullable(Of Decimal),  _
                    ByVal NewAmt_Pd As Global.System.Nullable(Of Decimal),  _
                    ByVal NewAmt_PenPd As Global.System.Nullable(Of Decimal),  _
                    ByVal NewTaxdue As Global.System.Nullable(Of Decimal),  _
                    ByVal NewPenDue As Global.System.Nullable(Of Decimal),  _
                    ByVal FieldName As String,  _
                    ByVal PrevGMonth As String,  _
                    ByVal GDateEsta As Global.System.Nullable(Of Date),  _
                    ByVal GMonthPaid As String,  _
                    ByVal DATE_ESTA As Global.System.Nullable(Of Date),  _
                    ByVal YearPeriod As String,  _
                    ByVal NotEdit As String,  _
                    ByVal NotDel As String,  _
                    ByVal AssessTotal As String,  _
                    ByVal UsedTCred As Global.System.Nullable(Of Short),  _
                    ByVal ForClose As String,  _
                    ByVal xORNO As String,  _
                    ByVal xSRS As String,  _
                    ByVal xTotal As Global.System.Nullable(Of Decimal),  _
                    ByVal RASSESBY As String,  _
                    ByVal xSQUENCELocal As String,  _
                    ByVal xSQUENCEPen As String,  _
                    ByVal xSQUENCE As String,  _
                    ByVal Area As Global.System.Nullable(Of Double),  _
                    ByVal QDUE As Global.System.Nullable(Of Decimal),  _
                    ByVal ADUE As Global.System.Nullable(Of Decimal),  _
                    ByVal QAMT As Global.System.Nullable(Of Decimal),  _
                    ByVal AAMT As Global.System.Nullable(Of Decimal),  _
                    ByVal RES1 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES3 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES4 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES5 As String,  _
                    ByVal IsRegBill As String,  _
                    ByVal RES As String,  _
                    ByVal PenYear As String,  _
                    ByVal NotDelete As String,  _
                    ByVal I_YEAR1 As String,  _
                    ByVal I_DISCOUNT1 As Global.System.Nullable(Of Decimal),  _
                    ByVal I_YEAR2 As String,  _
                    ByVal I_DISCOUNT2 As Global.System.Nullable(Of Decimal),  _
                    ByVal I_YEAR3 As String,  _
                    ByVal I_DISCOUNT3 As Global.System.Nullable(Of Decimal),  _
                    ByVal I_YEAR4 As String,  _
                    ByVal I_DISCOUNT4 As Global.System.Nullable(Of Decimal),  _
                    ByVal EDITEDBY As String,  _
                    ByVal X1 As String,  _
                    ByVal X2 As String,  _
                    ByVal X3 As String,  _
                    ByVal X4 As String,  _
                    ByVal X5 As String,  _
                    ByVal BLGFSORT As String,  _
                    ByVal Provision As String,  _
                    ByVal Remarks As String,  _
                    ByVal xMainAcctCode As String,  _
                    ByVal xMainAcctDesc As String,  _
                    ByVal xSubAcctCode As String,  _
                    ByVal xSubAcctDesc As String,  _
                    ByVal xMainAcctCodePen As String,  _
                    ByVal xMainAcctDescPen As String,  _
                    ByVal xSubAcctCodePen As String,  _
                    ByVal xSubAcctDescPen As String,  _
                    ByVal TRANSTYPE As String,  _
                    ByVal ORIGDUEFEEADJ As Global.System.Nullable(Of Decimal),  _
                    ByVal XDEPT As String,  _
                    ByVal FROMSP As String,  _
                    ByVal FEEPEN As String,  _
                    ByVal PRODUCT As String,  _
                    ByVal BPLOTOIMS As String,  _
                    ByVal BILLTYPE As String,  _
                    ByVal NEW5 As String) As Integer
            If (Acctno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Acctno,String)
            End If
            If (Foryear Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Foryear,String)
            End If
            If (Bus_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Bus_Code,String)
            End If
            If (Desc1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Desc1,String)
            End If
            If (Taxbase.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Taxbase.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Annualdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Annualdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Taxdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Taxdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PenDue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PenDue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Totdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Totdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Amt_Pd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Amt_Pd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Amt_PenPd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Amt_PenPd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Discount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Discount.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Taxcode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Taxcode,String)
            End If
            If (prevqtr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(prevqtr,String)
            End If
            If (Qtryr1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Qtryr1,String)
            End If
            If (Qtryr2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Qtryr2,String)
            End If
            If (QtrPaid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(QtrPaid,String)
            End If
            If (Remarks0 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Remarks0,String)
            End If
            If (Remarks1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Remarks1,String)
            End If
            If (Pres Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Pres,String)
            End If
            If (Prev Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Prev,String)
            End If
            If (Statcode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Statcode,String)
            End If
            If (ASSESSNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ASSESSNO,String)
            End If
            If (Newsw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Newsw,String)
            End If
            If (ModeP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(ModeP,String)
            End If
            If (GradFix Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(GradFix,String)
            End If
            If (Capital.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Capital.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Xsort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Xsort,String)
            End If
            If (ORNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(ORNo,String)
            End If
            If (DatePaid.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DatePaid.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (BrgyCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(BrgyCode,String)
            End If
            If (LocaCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(LocaCode,String)
            End If
            If (L_DatePD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(L_DatePD.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (MainAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(MainAcctCode,String)
            End If
            If (MainAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(MainAcctDesc,String)
            End If
            If (SubAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(SubAcctCode,String)
            End If
            If (SubAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(SubAcctDesc,String)
            End If
            If (MainAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(MainAcctCodePen,String)
            End If
            If (MainAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(MainAcctDescPen,String)
            End If
            If (SubAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(SubAcctCodePen,String)
            End If
            If (SubAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(SubAcctDescPen,String)
            End If
            If (Amt_Pd1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(Amt_Pd1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Amt_PenPd1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Amt_PenPd1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (NewAmt_Pd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(NewAmt_Pd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (NewAmt_PenPd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(NewAmt_PenPd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (NewTaxdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(NewTaxdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (NewPenDue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(NewPenDue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (FieldName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(FieldName,String)
            End If
            If (PrevGMonth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(PrevGMonth,String)
            End If
            If (GDateEsta.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(GDateEsta.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (GMonthPaid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(GMonthPaid,String)
            End If
            If (DATE_ESTA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(DATE_ESTA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (YearPeriod Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(YearPeriod,String)
            End If
            If (NotEdit Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(NotEdit,String)
            End If
            If (NotDel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(NotDel,String)
            End If
            If (AssessTotal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(AssessTotal,String)
            End If
            If (UsedTCred.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(UsedTCred.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (ForClose Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(ForClose,String)
            End If
            If (xORNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(xORNO,String)
            End If
            If (xSRS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(xSRS,String)
            End If
            If (xTotal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(xTotal.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (RASSESBY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(RASSESBY,String)
            End If
            If (xSQUENCELocal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(xSQUENCELocal,String)
            End If
            If (xSQUENCEPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(xSQUENCEPen,String)
            End If
            If (xSQUENCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(xSQUENCE,String)
            End If
            If (Area.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(Area.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (QDUE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(QDUE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (ADUE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(ADUE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (QAMT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(QAMT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (AAMT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(AAMT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (RES1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(RES1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (RES2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(RES2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (RES3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(RES3.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (RES4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(RES4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (RES5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(RES5,String)
            End If
            If (IsRegBill Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(IsRegBill,String)
            End If
            If (RES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(RES,String)
            End If
            If (PenYear Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(PenYear,String)
            End If
            If (NotDelete Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(NotDelete,String)
            End If
            If (I_YEAR1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(I_YEAR1,String)
            End If
            If (I_DISCOUNT1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(I_DISCOUNT1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (I_YEAR2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(I_YEAR2,String)
            End If
            If (I_DISCOUNT2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(I_DISCOUNT2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (I_YEAR3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(I_YEAR3,String)
            End If
            If (I_DISCOUNT3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(I_DISCOUNT3.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (I_YEAR4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(I_YEAR4,String)
            End If
            If (I_DISCOUNT4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(I_DISCOUNT4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (EDITEDBY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(EDITEDBY,String)
            End If
            If (X1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(X1,String)
            End If
            If (X2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(X2,String)
            End If
            If (X3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(X3,String)
            End If
            If (X4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(X4,String)
            End If
            If (X5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(X5,String)
            End If
            If (BLGFSORT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(BLGFSORT,String)
            End If
            If (Provision Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(Provision,String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(Remarks,String)
            End If
            If (xMainAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(xMainAcctCode,String)
            End If
            If (xMainAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(xMainAcctDesc,String)
            End If
            If (xSubAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(xSubAcctCode,String)
            End If
            If (xSubAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(xSubAcctDesc,String)
            End If
            If (xMainAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(xMainAcctCodePen,String)
            End If
            If (xMainAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(xMainAcctDescPen,String)
            End If
            If (xSubAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(xSubAcctCodePen,String)
            End If
            If (xSubAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(xSubAcctDescPen,String)
            End If
            If (TRANSTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(TRANSTYPE,String)
            End If
            If (ORIGDUEFEEADJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(ORIGDUEFEEADJ.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (XDEPT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(XDEPT,String)
            End If
            If (FROMSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(FROMSP,String)
            End If
            If (FEEPEN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(FEEPEN,String)
            End If
            If (PRODUCT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(PRODUCT,String)
            End If
            If (BPLOTOIMS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(BPLOTOIMS,String)
            End If
            If (BILLTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(BILLTYPE,String)
            End If
            If (NEW5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(NEW5,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class chy_1TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "chy_1"
            tableMapping.ColumnMappings.Add("Acctno", "Acctno")
            tableMapping.ColumnMappings.Add("Foryear", "Foryear")
            tableMapping.ColumnMappings.Add("Bus_Code", "Bus_Code")
            tableMapping.ColumnMappings.Add("Desc1", "Desc1")
            tableMapping.ColumnMappings.Add("Taxbase", "Taxbase")
            tableMapping.ColumnMappings.Add("Annualdue", "Annualdue")
            tableMapping.ColumnMappings.Add("Taxdue", "Taxdue")
            tableMapping.ColumnMappings.Add("PenDue", "PenDue")
            tableMapping.ColumnMappings.Add("Totdue", "Totdue")
            tableMapping.ColumnMappings.Add("Amt_Pd", "Amt_Pd")
            tableMapping.ColumnMappings.Add("Amt_PenPd", "Amt_PenPd")
            tableMapping.ColumnMappings.Add("Discount", "Discount")
            tableMapping.ColumnMappings.Add("Taxcode", "Taxcode")
            tableMapping.ColumnMappings.Add("prevqtr", "prevqtr")
            tableMapping.ColumnMappings.Add("Qtryr1", "Qtryr1")
            tableMapping.ColumnMappings.Add("Qtryr2", "Qtryr2")
            tableMapping.ColumnMappings.Add("QtrPaid", "QtrPaid")
            tableMapping.ColumnMappings.Add("Remarks0", "Remarks0")
            tableMapping.ColumnMappings.Add("Remarks1", "Remarks1")
            tableMapping.ColumnMappings.Add("Pres", "Pres")
            tableMapping.ColumnMappings.Add("Prev", "Prev")
            tableMapping.ColumnMappings.Add("Statcode", "Statcode")
            tableMapping.ColumnMappings.Add("ASSESSNO", "ASSESSNO")
            tableMapping.ColumnMappings.Add("Newsw", "Newsw")
            tableMapping.ColumnMappings.Add("ModeP", "ModeP")
            tableMapping.ColumnMappings.Add("GradFix", "GradFix")
            tableMapping.ColumnMappings.Add("Capital", "Capital")
            tableMapping.ColumnMappings.Add("Xsort", "Xsort")
            tableMapping.ColumnMappings.Add("ORNo", "ORNo")
            tableMapping.ColumnMappings.Add("DatePaid", "DatePaid")
            tableMapping.ColumnMappings.Add("BrgyCode", "BrgyCode")
            tableMapping.ColumnMappings.Add("LocaCode", "LocaCode")
            tableMapping.ColumnMappings.Add("L_DatePD", "L_DatePD")
            tableMapping.ColumnMappings.Add("MainAcctCode", "MainAcctCode")
            tableMapping.ColumnMappings.Add("MainAcctDesc", "MainAcctDesc")
            tableMapping.ColumnMappings.Add("SubAcctCode", "SubAcctCode")
            tableMapping.ColumnMappings.Add("SubAcctDesc", "SubAcctDesc")
            tableMapping.ColumnMappings.Add("MainAcctCodePen", "MainAcctCodePen")
            tableMapping.ColumnMappings.Add("MainAcctDescPen", "MainAcctDescPen")
            tableMapping.ColumnMappings.Add("SubAcctCodePen", "SubAcctCodePen")
            tableMapping.ColumnMappings.Add("SubAcctDescPen", "SubAcctDescPen")
            tableMapping.ColumnMappings.Add("Amt_Pd1", "Amt_Pd1")
            tableMapping.ColumnMappings.Add("Amt_PenPd1", "Amt_PenPd1")
            tableMapping.ColumnMappings.Add("NewAmt_Pd", "NewAmt_Pd")
            tableMapping.ColumnMappings.Add("NewAmt_PenPd", "NewAmt_PenPd")
            tableMapping.ColumnMappings.Add("NewTaxdue", "NewTaxdue")
            tableMapping.ColumnMappings.Add("NewPenDue", "NewPenDue")
            tableMapping.ColumnMappings.Add("FieldName", "FieldName")
            tableMapping.ColumnMappings.Add("PrevGMonth", "PrevGMonth")
            tableMapping.ColumnMappings.Add("GDateEsta", "GDateEsta")
            tableMapping.ColumnMappings.Add("GMonthPaid", "GMonthPaid")
            tableMapping.ColumnMappings.Add("DATE_ESTA", "DATE_ESTA")
            tableMapping.ColumnMappings.Add("YearPeriod", "YearPeriod")
            tableMapping.ColumnMappings.Add("NotEdit", "NotEdit")
            tableMapping.ColumnMappings.Add("NotDel", "NotDel")
            tableMapping.ColumnMappings.Add("AssessTotal", "AssessTotal")
            tableMapping.ColumnMappings.Add("UsedTCred", "UsedTCred")
            tableMapping.ColumnMappings.Add("ForClose", "ForClose")
            tableMapping.ColumnMappings.Add("xORNO", "xORNO")
            tableMapping.ColumnMappings.Add("xSRS", "xSRS")
            tableMapping.ColumnMappings.Add("xTotal", "xTotal")
            tableMapping.ColumnMappings.Add("RASSESBY", "RASSESBY")
            tableMapping.ColumnMappings.Add("xSQUENCELocal", "xSQUENCELocal")
            tableMapping.ColumnMappings.Add("xSQUENCEPen", "xSQUENCEPen")
            tableMapping.ColumnMappings.Add("xSQUENCE", "xSQUENCE")
            tableMapping.ColumnMappings.Add("Area", "Area")
            tableMapping.ColumnMappings.Add("QDUE", "QDUE")
            tableMapping.ColumnMappings.Add("ADUE", "ADUE")
            tableMapping.ColumnMappings.Add("QAMT", "QAMT")
            tableMapping.ColumnMappings.Add("AAMT", "AAMT")
            tableMapping.ColumnMappings.Add("RES1", "RES1")
            tableMapping.ColumnMappings.Add("RES2", "RES2")
            tableMapping.ColumnMappings.Add("RES3", "RES3")
            tableMapping.ColumnMappings.Add("RES4", "RES4")
            tableMapping.ColumnMappings.Add("RES5", "RES5")
            tableMapping.ColumnMappings.Add("IsRegBill", "IsRegBill")
            tableMapping.ColumnMappings.Add("RES", "RES")
            tableMapping.ColumnMappings.Add("PenYear", "PenYear")
            tableMapping.ColumnMappings.Add("NotDelete", "NotDelete")
            tableMapping.ColumnMappings.Add("I_YEAR1", "I_YEAR1")
            tableMapping.ColumnMappings.Add("I_DISCOUNT1", "I_DISCOUNT1")
            tableMapping.ColumnMappings.Add("I_YEAR2", "I_YEAR2")
            tableMapping.ColumnMappings.Add("I_DISCOUNT2", "I_DISCOUNT2")
            tableMapping.ColumnMappings.Add("I_YEAR3", "I_YEAR3")
            tableMapping.ColumnMappings.Add("I_DISCOUNT3", "I_DISCOUNT3")
            tableMapping.ColumnMappings.Add("I_YEAR4", "I_YEAR4")
            tableMapping.ColumnMappings.Add("I_DISCOUNT4", "I_DISCOUNT4")
            tableMapping.ColumnMappings.Add("EDITEDBY", "EDITEDBY")
            tableMapping.ColumnMappings.Add("X1", "X1")
            tableMapping.ColumnMappings.Add("X2", "X2")
            tableMapping.ColumnMappings.Add("X3", "X3")
            tableMapping.ColumnMappings.Add("X4", "X4")
            tableMapping.ColumnMappings.Add("X5", "X5")
            tableMapping.ColumnMappings.Add("BLGFSORT", "BLGFSORT")
            tableMapping.ColumnMappings.Add("Provision", "Provision")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("xMainAcctCode", "xMainAcctCode")
            tableMapping.ColumnMappings.Add("xMainAcctDesc", "xMainAcctDesc")
            tableMapping.ColumnMappings.Add("xSubAcctCode", "xSubAcctCode")
            tableMapping.ColumnMappings.Add("xSubAcctDesc", "xSubAcctDesc")
            tableMapping.ColumnMappings.Add("xMainAcctCodePen", "xMainAcctCodePen")
            tableMapping.ColumnMappings.Add("xMainAcctDescPen", "xMainAcctDescPen")
            tableMapping.ColumnMappings.Add("xSubAcctCodePen", "xSubAcctCodePen")
            tableMapping.ColumnMappings.Add("xSubAcctDescPen", "xSubAcctDescPen")
            tableMapping.ColumnMappings.Add("TRANSTYPE", "TRANSTYPE")
            tableMapping.ColumnMappings.Add("ORIGDUEFEEADJ", "ORIGDUEFEEADJ")
            tableMapping.ColumnMappings.Add("XDEPT", "XDEPT")
            tableMapping.ColumnMappings.Add("FROMSP", "FROMSP")
            tableMapping.ColumnMappings.Add("FEEPEN", "FEEPEN")
            tableMapping.ColumnMappings.Add("PRODUCT", "PRODUCT")
            tableMapping.ColumnMappings.Add("BPLOTOIMS", "BPLOTOIMS")
            tableMapping.ColumnMappings.Add("BILLTYPE", "BILLTYPE")
            tableMapping.ColumnMappings.Add("NEW5", "NEW5")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[chy_1] ([Acctno], [Foryear], [Bus_Code], [Desc1], [Taxbase], ["& _ 
                "Annualdue], [Taxdue], [PenDue], [Totdue], [Amt_Pd], [Amt_PenPd], [Discount], [Ta"& _ 
                "xcode], [prevqtr], [Qtryr1], [Qtryr2], [QtrPaid], [Remarks0], [Remarks1], [Pres]"& _ 
                ", [Prev], [Statcode], [ASSESSNO], [Newsw], [ModeP], [GradFix], [Capital], [Xsort"& _ 
                "], [ORNo], [DatePaid], [BrgyCode], [LocaCode], [L_DatePD], [MainAcctCode], [Main"& _ 
                "AcctDesc], [SubAcctCode], [SubAcctDesc], [MainAcctCodePen], [MainAcctDescPen], ["& _ 
                "SubAcctCodePen], [SubAcctDescPen], [Amt_Pd1], [Amt_PenPd1], [NewAmt_Pd], [NewAmt"& _ 
                "_PenPd], [NewTaxdue], [NewPenDue], [FieldName], [PrevGMonth], [GDateEsta], [GMon"& _ 
                "thPaid], [DATE_ESTA], [YearPeriod], [NotEdit], [NotDel], [AssessTotal], [UsedTCr"& _ 
                "ed], [ForClose], [xORNO], [xSRS], [xTotal], [RASSESBY], [xSQUENCELocal], [xSQUEN"& _ 
                "CEPen], [xSQUENCE], [Area], [QDUE], [ADUE], [QAMT], [AAMT], [RES1], [RES2], [RES"& _ 
                "3], [RES4], [RES5], [IsRegBill], [RES], [PenYear], [NotDelete], [I_YEAR1], [I_DI"& _ 
                "SCOUNT1], [I_YEAR2], [I_DISCOUNT2], [I_YEAR3], [I_DISCOUNT3], [I_YEAR4], [I_DISC"& _ 
                "OUNT4], [EDITEDBY], [X1], [X2], [X3], [X4], [X5], [BLGFSORT], [Provision], [Rema"& _ 
                "rks], [xMainAcctCode], [xMainAcctDesc], [xSubAcctCode], [xSubAcctDesc], [xMainAc"& _ 
                "ctCodePen], [xMainAcctDescPen], [xSubAcctCodePen], [xSubAcctDescPen], [TRANSTYPE"& _ 
                "], [ORIGDUEFEEADJ], [XDEPT], [FROMSP], [FEEPEN], [PRODUCT], [BPLOTOIMS], [BILLTY"& _ 
                "PE], [NEW5]) VALUES (@Acctno, @Foryear, @Bus_Code, @Desc1, @Taxbase, @Annualdue,"& _ 
                " @Taxdue, @PenDue, @Totdue, @Amt_Pd, @Amt_PenPd, @Discount, @Taxcode, @prevqtr, "& _ 
                "@Qtryr1, @Qtryr2, @QtrPaid, @Remarks0, @Remarks1, @Pres, @Prev, @Statcode, @ASSE"& _ 
                "SSNO, @Newsw, @ModeP, @GradFix, @Capital, @Xsort, @ORNo, @DatePaid, @BrgyCode, @"& _ 
                "LocaCode, @L_DatePD, @MainAcctCode, @MainAcctDesc, @SubAcctCode, @SubAcctDesc, @"& _ 
                "MainAcctCodePen, @MainAcctDescPen, @SubAcctCodePen, @SubAcctDescPen, @Amt_Pd1, @"& _ 
                "Amt_PenPd1, @NewAmt_Pd, @NewAmt_PenPd, @NewTaxdue, @NewPenDue, @FieldName, @Prev"& _ 
                "GMonth, @GDateEsta, @GMonthPaid, @DATE_ESTA, @YearPeriod, @NotEdit, @NotDel, @As"& _ 
                "sessTotal, @UsedTCred, @ForClose, @xORNO, @xSRS, @xTotal, @RASSESBY, @xSQUENCELo"& _ 
                "cal, @xSQUENCEPen, @xSQUENCE, @Area, @QDUE, @ADUE, @QAMT, @AAMT, @RES1, @RES2, @"& _ 
                "RES3, @RES4, @RES5, @IsRegBill, @RES, @PenYear, @NotDelete, @I_YEAR1, @I_DISCOUN"& _ 
                "T1, @I_YEAR2, @I_DISCOUNT2, @I_YEAR3, @I_DISCOUNT3, @I_YEAR4, @I_DISCOUNT4, @EDI"& _ 
                "TEDBY, @X1, @X2, @X3, @X4, @X5, @BLGFSORT, @Provision, @Remarks, @xMainAcctCode,"& _ 
                " @xMainAcctDesc, @xSubAcctCode, @xSubAcctDesc, @xMainAcctCodePen, @xMainAcctDesc"& _ 
                "Pen, @xSubAcctCodePen, @xSubAcctDescPen, @TRANSTYPE, @ORIGDUEFEEADJ, @XDEPT, @FR"& _ 
                "OMSP, @FEEPEN, @PRODUCT, @BPLOTOIMS, @BILLTYPE, @NEW5)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Acctno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Acctno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Foryear", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Foryear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bus_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bus_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Desc1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Desc1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Taxbase", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Taxbase", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Annualdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Annualdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Taxdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Taxdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PenDue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PenDue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Totdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Totdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_Pd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_Pd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_PenPd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_PenPd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Taxcode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Taxcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@prevqtr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "prevqtr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qtryr1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qtryr1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qtryr2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qtryr2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QtrPaid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QtrPaid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks0", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pres", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pres", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Prev", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Prev", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Statcode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Statcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSESSNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSESSNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Newsw", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Newsw", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModeP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModeP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GradFix", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GradFix", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Capital", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Capital", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Xsort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Xsort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatePaid", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DatePaid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BrgyCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrgyCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LocaCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocaCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@L_DatePD", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "L_DatePD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_Pd1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_Pd1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_PenPd1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_PenPd1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewAmt_Pd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewAmt_Pd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewAmt_PenPd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewAmt_PenPd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewTaxdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewTaxdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewPenDue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewPenDue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PrevGMonth", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PrevGMonth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GDateEsta", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GDateEsta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GMonthPaid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GMonthPaid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_ESTA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_ESTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YearPeriod", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearPeriod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NotEdit", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NotEdit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NotDel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NotDel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AssessTotal", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AssessTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UsedTCred", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UsedTCred", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForClose", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForClose", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xORNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xORNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSRS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSRS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xTotal", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RASSESBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RASSESBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSQUENCELocal", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSQUENCELocal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSQUENCEPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSQUENCEPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSQUENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSQUENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QDUE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QDUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADUE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QAMT", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QAMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AAMT", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AAMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES3", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES4", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsRegBill", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsRegBill", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PenYear", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PenYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NotDelete", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NotDelete", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT3", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT4", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDITEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BLGFSORT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BLGFSORT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Provision", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Provision", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRANSTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORIGDUEFEEADJ", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORIGDUEFEEADJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XDEPT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XDEPT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FROMSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FROMSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FEEPEN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FEEPEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRODUCT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BPLOTOIMS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BPLOTOIMS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BILLTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BILLTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEW5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEW5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Acctno, Foryear, Bus_Code, Desc1, Taxbase, Annualdue, Taxdue, PenDue, Totd"& _ 
                "ue, Amt_Pd, Amt_PenPd, Discount, Taxcode, prevqtr, Qtryr1, Qtryr2, QtrPaid, Rema"& _ 
                "rks0, Remarks1, Pres, Prev, Statcode, ASSESSNO, Newsw, ModeP, GradFix, Capital, "& _ 
                "Xsort, ORNo, DatePaid, BrgyCode, LocaCode, L_DatePD, MainAcctCode, MainAcctDesc,"& _ 
                " SubAcctCode, SubAcctDesc, MainAcctCodePen, MainAcctDescPen, SubAcctCodePen, Sub"& _ 
                "AcctDescPen, Amt_Pd1, Amt_PenPd1, NewAmt_Pd, NewAmt_PenPd, NewTaxdue, NewPenDue,"& _ 
                " FieldName, PrevGMonth, GDateEsta, GMonthPaid, DATE_ESTA, YearPeriod, NotEdit, N"& _ 
                "otDel, AssessTotal, UsedTCred, ForClose, xORNO, xSRS, xTotal, RASSESBY, xSQUENCE"& _ 
                "Local, xSQUENCEPen, xSQUENCE, Area, QDUE, ADUE, QAMT, AAMT, RES1, RES2, RES3, RE"& _ 
                "S4, RES5, IsRegBill, RES, PenYear, NotDelete, I_YEAR1, I_DISCOUNT1, I_YEAR2, I_D"& _ 
                "ISCOUNT2, I_YEAR3, I_DISCOUNT3, I_YEAR4, I_DISCOUNT4, EDITEDBY, X1, X2, X3, X4, "& _ 
                "X5, BLGFSORT, Provision, Remarks, xMainAcctCode, xMainAcctDesc, xSubAcctCode, xS"& _ 
                "ubAcctDesc, xMainAcctCodePen, xMainAcctDescPen, xSubAcctCodePen, xSubAcctDescPen"& _ 
                ", TRANSTYPE, ORIGDUEFEEADJ, XDEPT, FROMSP, FEEPEN, PRODUCT, BPLOTOIMS, BILLTYPE,"& _ 
                " NEW5 FROM dbo.chy_1"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.chy_1DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.chy_1DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.chy_1DataTable = New BPTOP2023_1.chy_1DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.chy_1DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "chy_1")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal Desc1 As String,  _
                    ByVal Taxbase As Global.System.Nullable(Of Decimal),  _
                    ByVal Annualdue As Global.System.Nullable(Of Decimal),  _
                    ByVal Taxdue As Global.System.Nullable(Of Decimal),  _
                    ByVal PenDue As Global.System.Nullable(Of Decimal),  _
                    ByVal Totdue As Global.System.Nullable(Of Decimal),  _
                    ByVal Amt_Pd As Global.System.Nullable(Of Decimal),  _
                    ByVal Amt_PenPd As Global.System.Nullable(Of Decimal),  _
                    ByVal Discount As Global.System.Nullable(Of Decimal),  _
                    ByVal Taxcode As String,  _
                    ByVal prevqtr As String,  _
                    ByVal Qtryr1 As String,  _
                    ByVal Qtryr2 As String,  _
                    ByVal QtrPaid As String,  _
                    ByVal Remarks0 As String,  _
                    ByVal Remarks1 As String,  _
                    ByVal Pres As String,  _
                    ByVal Prev As String,  _
                    ByVal Statcode As String,  _
                    ByVal ASSESSNO As String,  _
                    ByVal Newsw As String,  _
                    ByVal ModeP As String,  _
                    ByVal GradFix As String,  _
                    ByVal Capital As Global.System.Nullable(Of Decimal),  _
                    ByVal Xsort As String,  _
                    ByVal ORNo As String,  _
                    ByVal DatePaid As Global.System.Nullable(Of Date),  _
                    ByVal BrgyCode As String,  _
                    ByVal LocaCode As String,  _
                    ByVal L_DatePD As Global.System.Nullable(Of Date),  _
                    ByVal MainAcctCode As String,  _
                    ByVal MainAcctDesc As String,  _
                    ByVal SubAcctCode As String,  _
                    ByVal SubAcctDesc As String,  _
                    ByVal MainAcctCodePen As String,  _
                    ByVal MainAcctDescPen As String,  _
                    ByVal SubAcctCodePen As String,  _
                    ByVal SubAcctDescPen As String,  _
                    ByVal Amt_Pd1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Amt_PenPd1 As Global.System.Nullable(Of Decimal),  _
                    ByVal NewAmt_Pd As Global.System.Nullable(Of Decimal),  _
                    ByVal NewAmt_PenPd As Global.System.Nullable(Of Decimal),  _
                    ByVal NewTaxdue As Global.System.Nullable(Of Decimal),  _
                    ByVal NewPenDue As Global.System.Nullable(Of Decimal),  _
                    ByVal FieldName As String,  _
                    ByVal PrevGMonth As String,  _
                    ByVal GDateEsta As Global.System.Nullable(Of Date),  _
                    ByVal GMonthPaid As String,  _
                    ByVal DATE_ESTA As Global.System.Nullable(Of Date),  _
                    ByVal YearPeriod As String,  _
                    ByVal NotEdit As String,  _
                    ByVal NotDel As String,  _
                    ByVal AssessTotal As String,  _
                    ByVal UsedTCred As Global.System.Nullable(Of Short),  _
                    ByVal ForClose As String,  _
                    ByVal xORNO As String,  _
                    ByVal xSRS As String,  _
                    ByVal xTotal As Global.System.Nullable(Of Decimal),  _
                    ByVal RASSESBY As String,  _
                    ByVal xSQUENCELocal As String,  _
                    ByVal xSQUENCEPen As String,  _
                    ByVal xSQUENCE As String,  _
                    ByVal Area As Global.System.Nullable(Of Double),  _
                    ByVal QDUE As Global.System.Nullable(Of Decimal),  _
                    ByVal ADUE As Global.System.Nullable(Of Decimal),  _
                    ByVal QAMT As Global.System.Nullable(Of Decimal),  _
                    ByVal AAMT As Global.System.Nullable(Of Decimal),  _
                    ByVal RES1 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES3 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES4 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES5 As String,  _
                    ByVal IsRegBill As String,  _
                    ByVal RES As String,  _
                    ByVal PenYear As String,  _
                    ByVal NotDelete As String,  _
                    ByVal I_YEAR1 As String,  _
                    ByVal I_DISCOUNT1 As Global.System.Nullable(Of Decimal),  _
                    ByVal I_YEAR2 As String,  _
                    ByVal I_DISCOUNT2 As Global.System.Nullable(Of Decimal),  _
                    ByVal I_YEAR3 As String,  _
                    ByVal I_DISCOUNT3 As Global.System.Nullable(Of Decimal),  _
                    ByVal I_YEAR4 As String,  _
                    ByVal I_DISCOUNT4 As Global.System.Nullable(Of Decimal),  _
                    ByVal EDITEDBY As String,  _
                    ByVal X1 As String,  _
                    ByVal X2 As String,  _
                    ByVal X3 As String,  _
                    ByVal X4 As String,  _
                    ByVal X5 As String,  _
                    ByVal BLGFSORT As String,  _
                    ByVal Provision As String,  _
                    ByVal Remarks As String,  _
                    ByVal xMainAcctCode As String,  _
                    ByVal xMainAcctDesc As String,  _
                    ByVal xSubAcctCode As String,  _
                    ByVal xSubAcctDesc As String,  _
                    ByVal xMainAcctCodePen As String,  _
                    ByVal xMainAcctDescPen As String,  _
                    ByVal xSubAcctCodePen As String,  _
                    ByVal xSubAcctDescPen As String,  _
                    ByVal TRANSTYPE As String,  _
                    ByVal ORIGDUEFEEADJ As Global.System.Nullable(Of Decimal),  _
                    ByVal XDEPT As String,  _
                    ByVal FROMSP As String,  _
                    ByVal FEEPEN As String,  _
                    ByVal PRODUCT As String,  _
                    ByVal BPLOTOIMS As String,  _
                    ByVal BILLTYPE As String,  _
                    ByVal NEW5 As String) As Integer
            If (Acctno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Acctno,String)
            End If
            If (Foryear Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Foryear,String)
            End If
            If (Bus_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Bus_Code,String)
            End If
            If (Desc1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Desc1,String)
            End If
            If (Taxbase.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Taxbase.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Annualdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Annualdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Taxdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Taxdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PenDue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PenDue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Totdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Totdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Amt_Pd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Amt_Pd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Amt_PenPd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Amt_PenPd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Discount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Discount.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Taxcode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Taxcode,String)
            End If
            If (prevqtr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(prevqtr,String)
            End If
            If (Qtryr1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Qtryr1,String)
            End If
            If (Qtryr2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Qtryr2,String)
            End If
            If (QtrPaid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(QtrPaid,String)
            End If
            If (Remarks0 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Remarks0,String)
            End If
            If (Remarks1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Remarks1,String)
            End If
            If (Pres Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Pres,String)
            End If
            If (Prev Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Prev,String)
            End If
            If (Statcode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Statcode,String)
            End If
            If (ASSESSNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ASSESSNO,String)
            End If
            If (Newsw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Newsw,String)
            End If
            If (ModeP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(ModeP,String)
            End If
            If (GradFix Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(GradFix,String)
            End If
            If (Capital.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Capital.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Xsort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Xsort,String)
            End If
            If (ORNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(ORNo,String)
            End If
            If (DatePaid.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DatePaid.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (BrgyCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(BrgyCode,String)
            End If
            If (LocaCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(LocaCode,String)
            End If
            If (L_DatePD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(L_DatePD.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (MainAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(MainAcctCode,String)
            End If
            If (MainAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(MainAcctDesc,String)
            End If
            If (SubAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(SubAcctCode,String)
            End If
            If (SubAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(SubAcctDesc,String)
            End If
            If (MainAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(MainAcctCodePen,String)
            End If
            If (MainAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(MainAcctDescPen,String)
            End If
            If (SubAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(SubAcctCodePen,String)
            End If
            If (SubAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(SubAcctDescPen,String)
            End If
            If (Amt_Pd1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(Amt_Pd1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Amt_PenPd1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Amt_PenPd1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (NewAmt_Pd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(NewAmt_Pd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (NewAmt_PenPd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(NewAmt_PenPd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (NewTaxdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(NewTaxdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (NewPenDue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(NewPenDue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (FieldName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(FieldName,String)
            End If
            If (PrevGMonth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(PrevGMonth,String)
            End If
            If (GDateEsta.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(GDateEsta.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (GMonthPaid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(GMonthPaid,String)
            End If
            If (DATE_ESTA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(DATE_ESTA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (YearPeriod Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(YearPeriod,String)
            End If
            If (NotEdit Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(NotEdit,String)
            End If
            If (NotDel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(NotDel,String)
            End If
            If (AssessTotal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(AssessTotal,String)
            End If
            If (UsedTCred.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(UsedTCred.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (ForClose Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(ForClose,String)
            End If
            If (xORNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(xORNO,String)
            End If
            If (xSRS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(xSRS,String)
            End If
            If (xTotal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(xTotal.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (RASSESBY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(RASSESBY,String)
            End If
            If (xSQUENCELocal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(xSQUENCELocal,String)
            End If
            If (xSQUENCEPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(xSQUENCEPen,String)
            End If
            If (xSQUENCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(xSQUENCE,String)
            End If
            If (Area.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(Area.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (QDUE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(QDUE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (ADUE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(ADUE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (QAMT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(QAMT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (AAMT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(AAMT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (RES1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(RES1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (RES2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(RES2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (RES3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(RES3.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (RES4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(RES4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (RES5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(RES5,String)
            End If
            If (IsRegBill Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(IsRegBill,String)
            End If
            If (RES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(RES,String)
            End If
            If (PenYear Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(PenYear,String)
            End If
            If (NotDelete Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(NotDelete,String)
            End If
            If (I_YEAR1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(I_YEAR1,String)
            End If
            If (I_DISCOUNT1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(I_DISCOUNT1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (I_YEAR2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(I_YEAR2,String)
            End If
            If (I_DISCOUNT2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(I_DISCOUNT2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (I_YEAR3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(I_YEAR3,String)
            End If
            If (I_DISCOUNT3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(I_DISCOUNT3.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (I_YEAR4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(I_YEAR4,String)
            End If
            If (I_DISCOUNT4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(I_DISCOUNT4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (EDITEDBY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(EDITEDBY,String)
            End If
            If (X1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(X1,String)
            End If
            If (X2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(X2,String)
            End If
            If (X3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(X3,String)
            End If
            If (X4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(X4,String)
            End If
            If (X5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(X5,String)
            End If
            If (BLGFSORT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(BLGFSORT,String)
            End If
            If (Provision Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(Provision,String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(Remarks,String)
            End If
            If (xMainAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(xMainAcctCode,String)
            End If
            If (xMainAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(xMainAcctDesc,String)
            End If
            If (xSubAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(xSubAcctCode,String)
            End If
            If (xSubAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(xSubAcctDesc,String)
            End If
            If (xMainAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(xMainAcctCodePen,String)
            End If
            If (xMainAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(xMainAcctDescPen,String)
            End If
            If (xSubAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(xSubAcctCodePen,String)
            End If
            If (xSubAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(xSubAcctDescPen,String)
            End If
            If (TRANSTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(TRANSTYPE,String)
            End If
            If (ORIGDUEFEEADJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(ORIGDUEFEEADJ.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (XDEPT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(XDEPT,String)
            End If
            If (FROMSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(FROMSP,String)
            End If
            If (FEEPEN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(FEEPEN,String)
            End If
            If (PRODUCT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(PRODUCT,String)
            End If
            If (BPLOTOIMS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(BPLOTOIMS,String)
            End If
            If (BILLTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(BILLTYPE,String)
            End If
            If (NEW5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(NEW5,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class chy_2TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "chy_2"
            tableMapping.ColumnMappings.Add("Acctno", "Acctno")
            tableMapping.ColumnMappings.Add("Foryear", "Foryear")
            tableMapping.ColumnMappings.Add("Bus_Code", "Bus_Code")
            tableMapping.ColumnMappings.Add("Desc1", "Desc1")
            tableMapping.ColumnMappings.Add("Taxbase", "Taxbase")
            tableMapping.ColumnMappings.Add("Annualdue", "Annualdue")
            tableMapping.ColumnMappings.Add("Taxdue", "Taxdue")
            tableMapping.ColumnMappings.Add("PenDue", "PenDue")
            tableMapping.ColumnMappings.Add("Totdue", "Totdue")
            tableMapping.ColumnMappings.Add("Amt_Pd", "Amt_Pd")
            tableMapping.ColumnMappings.Add("Amt_PenPd", "Amt_PenPd")
            tableMapping.ColumnMappings.Add("Discount", "Discount")
            tableMapping.ColumnMappings.Add("Taxcode", "Taxcode")
            tableMapping.ColumnMappings.Add("prevqtr", "prevqtr")
            tableMapping.ColumnMappings.Add("Qtryr1", "Qtryr1")
            tableMapping.ColumnMappings.Add("Qtryr2", "Qtryr2")
            tableMapping.ColumnMappings.Add("QtrPaid", "QtrPaid")
            tableMapping.ColumnMappings.Add("Remarks0", "Remarks0")
            tableMapping.ColumnMappings.Add("Remarks1", "Remarks1")
            tableMapping.ColumnMappings.Add("Pres", "Pres")
            tableMapping.ColumnMappings.Add("Prev", "Prev")
            tableMapping.ColumnMappings.Add("Statcode", "Statcode")
            tableMapping.ColumnMappings.Add("ASSESSNO", "ASSESSNO")
            tableMapping.ColumnMappings.Add("Newsw", "Newsw")
            tableMapping.ColumnMappings.Add("ModeP", "ModeP")
            tableMapping.ColumnMappings.Add("GradFix", "GradFix")
            tableMapping.ColumnMappings.Add("Capital", "Capital")
            tableMapping.ColumnMappings.Add("Xsort", "Xsort")
            tableMapping.ColumnMappings.Add("ORNo", "ORNo")
            tableMapping.ColumnMappings.Add("DatePaid", "DatePaid")
            tableMapping.ColumnMappings.Add("BrgyCode", "BrgyCode")
            tableMapping.ColumnMappings.Add("LocaCode", "LocaCode")
            tableMapping.ColumnMappings.Add("L_DatePD", "L_DatePD")
            tableMapping.ColumnMappings.Add("MainAcctCode", "MainAcctCode")
            tableMapping.ColumnMappings.Add("MainAcctDesc", "MainAcctDesc")
            tableMapping.ColumnMappings.Add("SubAcctCode", "SubAcctCode")
            tableMapping.ColumnMappings.Add("SubAcctDesc", "SubAcctDesc")
            tableMapping.ColumnMappings.Add("MainAcctCodePen", "MainAcctCodePen")
            tableMapping.ColumnMappings.Add("MainAcctDescPen", "MainAcctDescPen")
            tableMapping.ColumnMappings.Add("SubAcctCodePen", "SubAcctCodePen")
            tableMapping.ColumnMappings.Add("SubAcctDescPen", "SubAcctDescPen")
            tableMapping.ColumnMappings.Add("Amt_Pd1", "Amt_Pd1")
            tableMapping.ColumnMappings.Add("Amt_PenPd1", "Amt_PenPd1")
            tableMapping.ColumnMappings.Add("NewAmt_Pd", "NewAmt_Pd")
            tableMapping.ColumnMappings.Add("NewAmt_PenPd", "NewAmt_PenPd")
            tableMapping.ColumnMappings.Add("NewTaxdue", "NewTaxdue")
            tableMapping.ColumnMappings.Add("NewPenDue", "NewPenDue")
            tableMapping.ColumnMappings.Add("FieldName", "FieldName")
            tableMapping.ColumnMappings.Add("PrevGMonth", "PrevGMonth")
            tableMapping.ColumnMappings.Add("GDateEsta", "GDateEsta")
            tableMapping.ColumnMappings.Add("GMonthPaid", "GMonthPaid")
            tableMapping.ColumnMappings.Add("DATE_ESTA", "DATE_ESTA")
            tableMapping.ColumnMappings.Add("YearPeriod", "YearPeriod")
            tableMapping.ColumnMappings.Add("NotEdit", "NotEdit")
            tableMapping.ColumnMappings.Add("NotDel", "NotDel")
            tableMapping.ColumnMappings.Add("AssessTotal", "AssessTotal")
            tableMapping.ColumnMappings.Add("UsedTCred", "UsedTCred")
            tableMapping.ColumnMappings.Add("ForClose", "ForClose")
            tableMapping.ColumnMappings.Add("xORNO", "xORNO")
            tableMapping.ColumnMappings.Add("xSRS", "xSRS")
            tableMapping.ColumnMappings.Add("xTotal", "xTotal")
            tableMapping.ColumnMappings.Add("RASSESBY", "RASSESBY")
            tableMapping.ColumnMappings.Add("xSQUENCELocal", "xSQUENCELocal")
            tableMapping.ColumnMappings.Add("xSQUENCEPen", "xSQUENCEPen")
            tableMapping.ColumnMappings.Add("xSQUENCE", "xSQUENCE")
            tableMapping.ColumnMappings.Add("Area", "Area")
            tableMapping.ColumnMappings.Add("QDUE", "QDUE")
            tableMapping.ColumnMappings.Add("ADUE", "ADUE")
            tableMapping.ColumnMappings.Add("QAMT", "QAMT")
            tableMapping.ColumnMappings.Add("AAMT", "AAMT")
            tableMapping.ColumnMappings.Add("RES1", "RES1")
            tableMapping.ColumnMappings.Add("RES2", "RES2")
            tableMapping.ColumnMappings.Add("RES3", "RES3")
            tableMapping.ColumnMappings.Add("RES4", "RES4")
            tableMapping.ColumnMappings.Add("RES5", "RES5")
            tableMapping.ColumnMappings.Add("IsRegBill", "IsRegBill")
            tableMapping.ColumnMappings.Add("RES", "RES")
            tableMapping.ColumnMappings.Add("PenYear", "PenYear")
            tableMapping.ColumnMappings.Add("NotDelete", "NotDelete")
            tableMapping.ColumnMappings.Add("I_YEAR1", "I_YEAR1")
            tableMapping.ColumnMappings.Add("I_DISCOUNT1", "I_DISCOUNT1")
            tableMapping.ColumnMappings.Add("I_YEAR2", "I_YEAR2")
            tableMapping.ColumnMappings.Add("I_DISCOUNT2", "I_DISCOUNT2")
            tableMapping.ColumnMappings.Add("I_YEAR3", "I_YEAR3")
            tableMapping.ColumnMappings.Add("I_DISCOUNT3", "I_DISCOUNT3")
            tableMapping.ColumnMappings.Add("I_YEAR4", "I_YEAR4")
            tableMapping.ColumnMappings.Add("I_DISCOUNT4", "I_DISCOUNT4")
            tableMapping.ColumnMappings.Add("EDITEDBY", "EDITEDBY")
            tableMapping.ColumnMappings.Add("X1", "X1")
            tableMapping.ColumnMappings.Add("X2", "X2")
            tableMapping.ColumnMappings.Add("X3", "X3")
            tableMapping.ColumnMappings.Add("X4", "X4")
            tableMapping.ColumnMappings.Add("X5", "X5")
            tableMapping.ColumnMappings.Add("BLGFSORT", "BLGFSORT")
            tableMapping.ColumnMappings.Add("Provision", "Provision")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("xMainAcctCode", "xMainAcctCode")
            tableMapping.ColumnMappings.Add("xMainAcctDesc", "xMainAcctDesc")
            tableMapping.ColumnMappings.Add("xSubAcctCode", "xSubAcctCode")
            tableMapping.ColumnMappings.Add("xSubAcctDesc", "xSubAcctDesc")
            tableMapping.ColumnMappings.Add("xMainAcctCodePen", "xMainAcctCodePen")
            tableMapping.ColumnMappings.Add("xMainAcctDescPen", "xMainAcctDescPen")
            tableMapping.ColumnMappings.Add("xSubAcctCodePen", "xSubAcctCodePen")
            tableMapping.ColumnMappings.Add("xSubAcctDescPen", "xSubAcctDescPen")
            tableMapping.ColumnMappings.Add("TRANSTYPE", "TRANSTYPE")
            tableMapping.ColumnMappings.Add("ORIGDUEFEEADJ", "ORIGDUEFEEADJ")
            tableMapping.ColumnMappings.Add("XDEPT", "XDEPT")
            tableMapping.ColumnMappings.Add("FROMSP", "FROMSP")
            tableMapping.ColumnMappings.Add("FEEPEN", "FEEPEN")
            tableMapping.ColumnMappings.Add("PRODUCT", "PRODUCT")
            tableMapping.ColumnMappings.Add("BPLOTOIMS", "BPLOTOIMS")
            tableMapping.ColumnMappings.Add("BILLTYPE", "BILLTYPE")
            tableMapping.ColumnMappings.Add("NEW5", "NEW5")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[chy_2] ([Acctno], [Foryear], [Bus_Code], [Desc1], [Taxbase], ["& _ 
                "Annualdue], [Taxdue], [PenDue], [Totdue], [Amt_Pd], [Amt_PenPd], [Discount], [Ta"& _ 
                "xcode], [prevqtr], [Qtryr1], [Qtryr2], [QtrPaid], [Remarks0], [Remarks1], [Pres]"& _ 
                ", [Prev], [Statcode], [ASSESSNO], [Newsw], [ModeP], [GradFix], [Capital], [Xsort"& _ 
                "], [ORNo], [DatePaid], [BrgyCode], [LocaCode], [L_DatePD], [MainAcctCode], [Main"& _ 
                "AcctDesc], [SubAcctCode], [SubAcctDesc], [MainAcctCodePen], [MainAcctDescPen], ["& _ 
                "SubAcctCodePen], [SubAcctDescPen], [Amt_Pd1], [Amt_PenPd1], [NewAmt_Pd], [NewAmt"& _ 
                "_PenPd], [NewTaxdue], [NewPenDue], [FieldName], [PrevGMonth], [GDateEsta], [GMon"& _ 
                "thPaid], [DATE_ESTA], [YearPeriod], [NotEdit], [NotDel], [AssessTotal], [UsedTCr"& _ 
                "ed], [ForClose], [xORNO], [xSRS], [xTotal], [RASSESBY], [xSQUENCELocal], [xSQUEN"& _ 
                "CEPen], [xSQUENCE], [Area], [QDUE], [ADUE], [QAMT], [AAMT], [RES1], [RES2], [RES"& _ 
                "3], [RES4], [RES5], [IsRegBill], [RES], [PenYear], [NotDelete], [I_YEAR1], [I_DI"& _ 
                "SCOUNT1], [I_YEAR2], [I_DISCOUNT2], [I_YEAR3], [I_DISCOUNT3], [I_YEAR4], [I_DISC"& _ 
                "OUNT4], [EDITEDBY], [X1], [X2], [X3], [X4], [X5], [BLGFSORT], [Provision], [Rema"& _ 
                "rks], [xMainAcctCode], [xMainAcctDesc], [xSubAcctCode], [xSubAcctDesc], [xMainAc"& _ 
                "ctCodePen], [xMainAcctDescPen], [xSubAcctCodePen], [xSubAcctDescPen], [TRANSTYPE"& _ 
                "], [ORIGDUEFEEADJ], [XDEPT], [FROMSP], [FEEPEN], [PRODUCT], [BPLOTOIMS], [BILLTY"& _ 
                "PE], [NEW5]) VALUES (@Acctno, @Foryear, @Bus_Code, @Desc1, @Taxbase, @Annualdue,"& _ 
                " @Taxdue, @PenDue, @Totdue, @Amt_Pd, @Amt_PenPd, @Discount, @Taxcode, @prevqtr, "& _ 
                "@Qtryr1, @Qtryr2, @QtrPaid, @Remarks0, @Remarks1, @Pres, @Prev, @Statcode, @ASSE"& _ 
                "SSNO, @Newsw, @ModeP, @GradFix, @Capital, @Xsort, @ORNo, @DatePaid, @BrgyCode, @"& _ 
                "LocaCode, @L_DatePD, @MainAcctCode, @MainAcctDesc, @SubAcctCode, @SubAcctDesc, @"& _ 
                "MainAcctCodePen, @MainAcctDescPen, @SubAcctCodePen, @SubAcctDescPen, @Amt_Pd1, @"& _ 
                "Amt_PenPd1, @NewAmt_Pd, @NewAmt_PenPd, @NewTaxdue, @NewPenDue, @FieldName, @Prev"& _ 
                "GMonth, @GDateEsta, @GMonthPaid, @DATE_ESTA, @YearPeriod, @NotEdit, @NotDel, @As"& _ 
                "sessTotal, @UsedTCred, @ForClose, @xORNO, @xSRS, @xTotal, @RASSESBY, @xSQUENCELo"& _ 
                "cal, @xSQUENCEPen, @xSQUENCE, @Area, @QDUE, @ADUE, @QAMT, @AAMT, @RES1, @RES2, @"& _ 
                "RES3, @RES4, @RES5, @IsRegBill, @RES, @PenYear, @NotDelete, @I_YEAR1, @I_DISCOUN"& _ 
                "T1, @I_YEAR2, @I_DISCOUNT2, @I_YEAR3, @I_DISCOUNT3, @I_YEAR4, @I_DISCOUNT4, @EDI"& _ 
                "TEDBY, @X1, @X2, @X3, @X4, @X5, @BLGFSORT, @Provision, @Remarks, @xMainAcctCode,"& _ 
                " @xMainAcctDesc, @xSubAcctCode, @xSubAcctDesc, @xMainAcctCodePen, @xMainAcctDesc"& _ 
                "Pen, @xSubAcctCodePen, @xSubAcctDescPen, @TRANSTYPE, @ORIGDUEFEEADJ, @XDEPT, @FR"& _ 
                "OMSP, @FEEPEN, @PRODUCT, @BPLOTOIMS, @BILLTYPE, @NEW5)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Acctno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Acctno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Foryear", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Foryear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bus_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bus_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Desc1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Desc1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Taxbase", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Taxbase", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Annualdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Annualdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Taxdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Taxdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PenDue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PenDue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Totdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Totdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_Pd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_Pd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_PenPd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_PenPd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Discount", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Discount", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Taxcode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Taxcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@prevqtr", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "prevqtr", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qtryr1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qtryr1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Qtryr2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Qtryr2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QtrPaid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QtrPaid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks0", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pres", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pres", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Prev", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Prev", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Statcode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Statcode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSESSNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSESSNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Newsw", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Newsw", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ModeP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ModeP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GradFix", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GradFix", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Capital", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Capital", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Xsort", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Xsort", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORNo", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DatePaid", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DatePaid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BrgyCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BrgyCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LocaCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LocaCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@L_DatePD", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "L_DatePD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MainAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MainAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SubAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SubAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_Pd1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_Pd1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Amt_PenPd1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Amt_PenPd1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewAmt_Pd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewAmt_Pd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewAmt_PenPd", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewAmt_PenPd", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewTaxdue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewTaxdue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NewPenDue", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NewPenDue", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FieldName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FieldName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PrevGMonth", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PrevGMonth", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GDateEsta", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GDateEsta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GMonthPaid", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GMonthPaid", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DATE_ESTA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DATE_ESTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@YearPeriod", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "YearPeriod", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NotEdit", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NotEdit", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NotDel", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NotDel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AssessTotal", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AssessTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@UsedTCred", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "UsedTCred", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForClose", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForClose", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xORNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xORNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSRS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSRS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xTotal", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xTotal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RASSESBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RASSESBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSQUENCELocal", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSQUENCELocal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSQUENCEPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSQUENCEPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSQUENCE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSQUENCE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Area", Global.System.Data.SqlDbType.Float, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Area", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QDUE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QDUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADUE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@QAMT", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "QAMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AAMT", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AAMT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES3", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES4", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsRegBill", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IsRegBill", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PenYear", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PenYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NotDelete", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NotDelete", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT3", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_YEAR4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_YEAR4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@I_DISCOUNT4", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "I_DISCOUNT4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EDITEDBY", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EDITEDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X3", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X4", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@X5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "X5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BLGFSORT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BLGFSORT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Provision", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Provision", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctCode", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctDesc", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xMainAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xMainAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctCodePen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctCodePen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xSubAcctDescPen", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xSubAcctDescPen", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRANSTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRANSTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORIGDUEFEEADJ", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORIGDUEFEEADJ", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XDEPT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XDEPT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FROMSP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FROMSP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FEEPEN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FEEPEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRODUCT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BPLOTOIMS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BPLOTOIMS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BILLTYPE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BILLTYPE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEW5", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEW5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Acctno, Foryear, Bus_Code, Desc1, Taxbase, Annualdue, Taxdue, PenDue, Totd"& _ 
                "ue, Amt_Pd, Amt_PenPd, Discount, Taxcode, prevqtr, Qtryr1, Qtryr2, QtrPaid, Rema"& _ 
                "rks0, Remarks1, Pres, Prev, Statcode, ASSESSNO, Newsw, ModeP, GradFix, Capital, "& _ 
                "Xsort, ORNo, DatePaid, BrgyCode, LocaCode, L_DatePD, MainAcctCode, MainAcctDesc,"& _ 
                " SubAcctCode, SubAcctDesc, MainAcctCodePen, MainAcctDescPen, SubAcctCodePen, Sub"& _ 
                "AcctDescPen, Amt_Pd1, Amt_PenPd1, NewAmt_Pd, NewAmt_PenPd, NewTaxdue, NewPenDue,"& _ 
                " FieldName, PrevGMonth, GDateEsta, GMonthPaid, DATE_ESTA, YearPeriod, NotEdit, N"& _ 
                "otDel, AssessTotal, UsedTCred, ForClose, xORNO, xSRS, xTotal, RASSESBY, xSQUENCE"& _ 
                "Local, xSQUENCEPen, xSQUENCE, Area, QDUE, ADUE, QAMT, AAMT, RES1, RES2, RES3, RE"& _ 
                "S4, RES5, IsRegBill, RES, PenYear, NotDelete, I_YEAR1, I_DISCOUNT1, I_YEAR2, I_D"& _ 
                "ISCOUNT2, I_YEAR3, I_DISCOUNT3, I_YEAR4, I_DISCOUNT4, EDITEDBY, X1, X2, X3, X4, "& _ 
                "X5, BLGFSORT, Provision, Remarks, xMainAcctCode, xMainAcctDesc, xSubAcctCode, xS"& _ 
                "ubAcctDesc, xMainAcctCodePen, xMainAcctDescPen, xSubAcctCodePen, xSubAcctDescPen"& _ 
                ", TRANSTYPE, ORIGDUEFEEADJ, XDEPT, FROMSP, FEEPEN, PRODUCT, BPLOTOIMS, BILLTYPE,"& _ 
                " NEW5 FROM dbo.chy_2"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.chy_2DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.chy_2DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.chy_2DataTable = New BPTOP2023_1.chy_2DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.chy_2DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "chy_2")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal Desc1 As String,  _
                    ByVal Taxbase As Global.System.Nullable(Of Decimal),  _
                    ByVal Annualdue As Global.System.Nullable(Of Decimal),  _
                    ByVal Taxdue As Global.System.Nullable(Of Decimal),  _
                    ByVal PenDue As Global.System.Nullable(Of Decimal),  _
                    ByVal Totdue As Global.System.Nullable(Of Decimal),  _
                    ByVal Amt_Pd As Global.System.Nullable(Of Decimal),  _
                    ByVal Amt_PenPd As Global.System.Nullable(Of Decimal),  _
                    ByVal Discount As Global.System.Nullable(Of Decimal),  _
                    ByVal Taxcode As String,  _
                    ByVal prevqtr As String,  _
                    ByVal Qtryr1 As String,  _
                    ByVal Qtryr2 As String,  _
                    ByVal QtrPaid As String,  _
                    ByVal Remarks0 As String,  _
                    ByVal Remarks1 As String,  _
                    ByVal Pres As String,  _
                    ByVal Prev As String,  _
                    ByVal Statcode As String,  _
                    ByVal ASSESSNO As String,  _
                    ByVal Newsw As String,  _
                    ByVal ModeP As String,  _
                    ByVal GradFix As String,  _
                    ByVal Capital As Global.System.Nullable(Of Decimal),  _
                    ByVal Xsort As String,  _
                    ByVal ORNo As String,  _
                    ByVal DatePaid As Global.System.Nullable(Of Date),  _
                    ByVal BrgyCode As String,  _
                    ByVal LocaCode As String,  _
                    ByVal L_DatePD As Global.System.Nullable(Of Date),  _
                    ByVal MainAcctCode As String,  _
                    ByVal MainAcctDesc As String,  _
                    ByVal SubAcctCode As String,  _
                    ByVal SubAcctDesc As String,  _
                    ByVal MainAcctCodePen As String,  _
                    ByVal MainAcctDescPen As String,  _
                    ByVal SubAcctCodePen As String,  _
                    ByVal SubAcctDescPen As String,  _
                    ByVal Amt_Pd1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Amt_PenPd1 As Global.System.Nullable(Of Decimal),  _
                    ByVal NewAmt_Pd As Global.System.Nullable(Of Decimal),  _
                    ByVal NewAmt_PenPd As Global.System.Nullable(Of Decimal),  _
                    ByVal NewTaxdue As Global.System.Nullable(Of Decimal),  _
                    ByVal NewPenDue As Global.System.Nullable(Of Decimal),  _
                    ByVal FieldName As String,  _
                    ByVal PrevGMonth As String,  _
                    ByVal GDateEsta As Global.System.Nullable(Of Date),  _
                    ByVal GMonthPaid As String,  _
                    ByVal DATE_ESTA As Global.System.Nullable(Of Date),  _
                    ByVal YearPeriod As String,  _
                    ByVal NotEdit As String,  _
                    ByVal NotDel As String,  _
                    ByVal AssessTotal As String,  _
                    ByVal UsedTCred As Global.System.Nullable(Of Short),  _
                    ByVal ForClose As String,  _
                    ByVal xORNO As String,  _
                    ByVal xSRS As String,  _
                    ByVal xTotal As Global.System.Nullable(Of Decimal),  _
                    ByVal RASSESBY As String,  _
                    ByVal xSQUENCELocal As String,  _
                    ByVal xSQUENCEPen As String,  _
                    ByVal xSQUENCE As String,  _
                    ByVal Area As Global.System.Nullable(Of Double),  _
                    ByVal QDUE As Global.System.Nullable(Of Decimal),  _
                    ByVal ADUE As Global.System.Nullable(Of Decimal),  _
                    ByVal QAMT As Global.System.Nullable(Of Decimal),  _
                    ByVal AAMT As Global.System.Nullable(Of Decimal),  _
                    ByVal RES1 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES3 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES4 As Global.System.Nullable(Of Decimal),  _
                    ByVal RES5 As String,  _
                    ByVal IsRegBill As String,  _
                    ByVal RES As String,  _
                    ByVal PenYear As String,  _
                    ByVal NotDelete As String,  _
                    ByVal I_YEAR1 As String,  _
                    ByVal I_DISCOUNT1 As Global.System.Nullable(Of Decimal),  _
                    ByVal I_YEAR2 As String,  _
                    ByVal I_DISCOUNT2 As Global.System.Nullable(Of Decimal),  _
                    ByVal I_YEAR3 As String,  _
                    ByVal I_DISCOUNT3 As Global.System.Nullable(Of Decimal),  _
                    ByVal I_YEAR4 As String,  _
                    ByVal I_DISCOUNT4 As Global.System.Nullable(Of Decimal),  _
                    ByVal EDITEDBY As String,  _
                    ByVal X1 As String,  _
                    ByVal X2 As String,  _
                    ByVal X3 As String,  _
                    ByVal X4 As String,  _
                    ByVal X5 As String,  _
                    ByVal BLGFSORT As String,  _
                    ByVal Provision As String,  _
                    ByVal Remarks As String,  _
                    ByVal xMainAcctCode As String,  _
                    ByVal xMainAcctDesc As String,  _
                    ByVal xSubAcctCode As String,  _
                    ByVal xSubAcctDesc As String,  _
                    ByVal xMainAcctCodePen As String,  _
                    ByVal xMainAcctDescPen As String,  _
                    ByVal xSubAcctCodePen As String,  _
                    ByVal xSubAcctDescPen As String,  _
                    ByVal TRANSTYPE As String,  _
                    ByVal ORIGDUEFEEADJ As Global.System.Nullable(Of Decimal),  _
                    ByVal XDEPT As String,  _
                    ByVal FROMSP As String,  _
                    ByVal FEEPEN As String,  _
                    ByVal PRODUCT As String,  _
                    ByVal BPLOTOIMS As String,  _
                    ByVal BILLTYPE As String,  _
                    ByVal NEW5 As String) As Integer
            If (Acctno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Acctno,String)
            End If
            If (Foryear Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Foryear,String)
            End If
            If (Bus_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Bus_Code,String)
            End If
            If (Desc1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Desc1,String)
            End If
            If (Taxbase.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Taxbase.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Annualdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Annualdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Taxdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Taxdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PenDue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PenDue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Totdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Totdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Amt_Pd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Amt_Pd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Amt_PenPd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Amt_PenPd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Discount.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Discount.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Taxcode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Taxcode,String)
            End If
            If (prevqtr Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(prevqtr,String)
            End If
            If (Qtryr1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Qtryr1,String)
            End If
            If (Qtryr2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Qtryr2,String)
            End If
            If (QtrPaid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(QtrPaid,String)
            End If
            If (Remarks0 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Remarks0,String)
            End If
            If (Remarks1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Remarks1,String)
            End If
            If (Pres Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Pres,String)
            End If
            If (Prev Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Prev,String)
            End If
            If (Statcode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Statcode,String)
            End If
            If (ASSESSNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(ASSESSNO,String)
            End If
            If (Newsw Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Newsw,String)
            End If
            If (ModeP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(ModeP,String)
            End If
            If (GradFix Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(GradFix,String)
            End If
            If (Capital.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Capital.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Xsort Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Xsort,String)
            End If
            If (ORNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(ORNo,String)
            End If
            If (DatePaid.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DatePaid.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (BrgyCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(BrgyCode,String)
            End If
            If (LocaCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(LocaCode,String)
            End If
            If (L_DatePD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(L_DatePD.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (MainAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(MainAcctCode,String)
            End If
            If (MainAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(MainAcctDesc,String)
            End If
            If (SubAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(SubAcctCode,String)
            End If
            If (SubAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(SubAcctDesc,String)
            End If
            If (MainAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(MainAcctCodePen,String)
            End If
            If (MainAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(MainAcctDescPen,String)
            End If
            If (SubAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(SubAcctCodePen,String)
            End If
            If (SubAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(SubAcctDescPen,String)
            End If
            If (Amt_Pd1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(Amt_Pd1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Amt_PenPd1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Amt_PenPd1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (NewAmt_Pd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(NewAmt_Pd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (NewAmt_PenPd.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(NewAmt_PenPd.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (NewTaxdue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(NewTaxdue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (NewPenDue.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(NewPenDue.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (FieldName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(FieldName,String)
            End If
            If (PrevGMonth Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(PrevGMonth,String)
            End If
            If (GDateEsta.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(GDateEsta.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (GMonthPaid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(GMonthPaid,String)
            End If
            If (DATE_ESTA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(DATE_ESTA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (YearPeriod Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(YearPeriod,String)
            End If
            If (NotEdit Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(NotEdit,String)
            End If
            If (NotDel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(NotDel,String)
            End If
            If (AssessTotal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(AssessTotal,String)
            End If
            If (UsedTCred.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(UsedTCred.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (ForClose Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(ForClose,String)
            End If
            If (xORNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(xORNO,String)
            End If
            If (xSRS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(xSRS,String)
            End If
            If (xTotal.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(xTotal.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (RASSESBY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(RASSESBY,String)
            End If
            If (xSQUENCELocal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(xSQUENCELocal,String)
            End If
            If (xSQUENCEPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(xSQUENCEPen,String)
            End If
            If (xSQUENCE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(xSQUENCE,String)
            End If
            If (Area.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(Area.Value,Double)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (QDUE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(QDUE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (ADUE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(ADUE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (QAMT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(QAMT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (AAMT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(AAMT.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (RES1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(RES1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (RES2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(RES2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (RES3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(RES3.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (RES4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(RES4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (RES5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(RES5,String)
            End If
            If (IsRegBill Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(IsRegBill,String)
            End If
            If (RES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(RES,String)
            End If
            If (PenYear Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(PenYear,String)
            End If
            If (NotDelete Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(NotDelete,String)
            End If
            If (I_YEAR1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(I_YEAR1,String)
            End If
            If (I_DISCOUNT1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(I_DISCOUNT1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (I_YEAR2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(I_YEAR2,String)
            End If
            If (I_DISCOUNT2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(I_DISCOUNT2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (I_YEAR3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(I_YEAR3,String)
            End If
            If (I_DISCOUNT3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(I_DISCOUNT3.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (I_YEAR4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(I_YEAR4,String)
            End If
            If (I_DISCOUNT4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(I_DISCOUNT4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (EDITEDBY Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(EDITEDBY,String)
            End If
            If (X1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(X1,String)
            End If
            If (X2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(X2,String)
            End If
            If (X3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(X3,String)
            End If
            If (X4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(X4,String)
            End If
            If (X5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(X5,String)
            End If
            If (BLGFSORT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(BLGFSORT,String)
            End If
            If (Provision Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(Provision,String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(Remarks,String)
            End If
            If (xMainAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(xMainAcctCode,String)
            End If
            If (xMainAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(xMainAcctDesc,String)
            End If
            If (xSubAcctCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(xSubAcctCode,String)
            End If
            If (xSubAcctDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(xSubAcctDesc,String)
            End If
            If (xMainAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(xMainAcctCodePen,String)
            End If
            If (xMainAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(xMainAcctDescPen,String)
            End If
            If (xSubAcctCodePen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(xSubAcctCodePen,String)
            End If
            If (xSubAcctDescPen Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(xSubAcctDescPen,String)
            End If
            If (TRANSTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(TRANSTYPE,String)
            End If
            If (ORIGDUEFEEADJ.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(ORIGDUEFEEADJ.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (XDEPT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(XDEPT,String)
            End If
            If (FROMSP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(FROMSP,String)
            End If
            If (FEEPEN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(FEEPEN,String)
            End If
            If (PRODUCT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(109).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(PRODUCT,String)
            End If
            If (BPLOTOIMS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(BPLOTOIMS,String)
            End If
            If (BILLTYPE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(111).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(BILLTYPE,String)
            End If
            If (NEW5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(NEW5,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class chyADDLEXTNTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "chyADDLEXTN"
            tableMapping.ColumnMappings.Add("Acctno", "Acctno")
            tableMapping.ColumnMappings.Add("Foryear", "Foryear")
            tableMapping.ColumnMappings.Add("Bus_Code", "Bus_Code")
            tableMapping.ColumnMappings.Add("ZONE", "ZONE")
            tableMapping.ColumnMappings.Add("RTC", "RTC")
            tableMapping.ColumnMappings.Add("PNP", "PNP")
            tableMapping.ColumnMappings.Add("FISCAL", "FISCAL")
            tableMapping.ColumnMappings.Add("BUILDING", "BUILDING")
            tableMapping.ColumnMappings.Add("MECHANICAL", "MECHANICAL")
            tableMapping.ColumnMappings.Add("ELECTRICAL", "ELECTRICAL")
            tableMapping.ColumnMappings.Add("PLUMBING", "PLUMBING")
            tableMapping.ColumnMappings.Add("SIGNBILL", "SIGNBILL")
            tableMapping.ColumnMappings.Add("OTHER", "OTHER")
            tableMapping.ColumnMappings.Add("STICKER", "STICKER")
            tableMapping.ColumnMappings.Add("MEDICAL", "MEDICAL")
            tableMapping.ColumnMappings.Add("WMEASURES", "WMEASURES")
            tableMapping.ColumnMappings.Add("FIRECODE", "FIRECODE")
            tableMapping.ColumnMappings.Add("RF1", "RF1")
            tableMapping.ColumnMappings.Add("RF2", "RF2")
            tableMapping.ColumnMappings.Add("RF3", "RF3")
            tableMapping.ColumnMappings.Add("RF4", "RF4")
            tableMapping.ColumnMappings.Add("RF5", "RF5")
            tableMapping.ColumnMappings.Add("RF6", "RF6")
            tableMapping.ColumnMappings.Add("RF7", "RF7")
            tableMapping.ColumnMappings.Add("RF8", "RF8")
            tableMapping.ColumnMappings.Add("RF9", "RF9")
            tableMapping.ColumnMappings.Add("RF10", "RF10")
            tableMapping.ColumnMappings.Add("RF11", "RF11")
            tableMapping.ColumnMappings.Add("RF12", "RF12")
            tableMapping.ColumnMappings.Add("RF13", "RF13")
            tableMapping.ColumnMappings.Add("RF14", "RF14")
            tableMapping.ColumnMappings.Add("RF15", "RF15")
            tableMapping.ColumnMappings.Add("ZONE_HP", "ZONE_HP")
            tableMapping.ColumnMappings.Add("RTC_HP", "RTC_HP")
            tableMapping.ColumnMappings.Add("PNP_HP", "PNP_HP")
            tableMapping.ColumnMappings.Add("FISCAL_HP", "FISCAL_HP")
            tableMapping.ColumnMappings.Add("BUILDING_HP", "BUILDING_HP")
            tableMapping.ColumnMappings.Add("MECHANICAL_HP", "MECHANICAL_HP")
            tableMapping.ColumnMappings.Add("ELECTRICAL_HP", "ELECTRICAL_HP")
            tableMapping.ColumnMappings.Add("PLUMBING_HP", "PLUMBING_HP")
            tableMapping.ColumnMappings.Add("SIGNBILL_HP", "SIGNBILL_HP")
            tableMapping.ColumnMappings.Add("OTHER_HP", "OTHER_HP")
            tableMapping.ColumnMappings.Add("STICKER_HP", "STICKER_HP")
            tableMapping.ColumnMappings.Add("MEDICAL_HP", "MEDICAL_HP")
            tableMapping.ColumnMappings.Add("WMEASURES_HP", "WMEASURES_HP")
            tableMapping.ColumnMappings.Add("FIRECODE_HP", "FIRECODE_HP")
            tableMapping.ColumnMappings.Add("RF1_HP", "RF1_HP")
            tableMapping.ColumnMappings.Add("RF2_HP", "RF2_HP")
            tableMapping.ColumnMappings.Add("RF3_HP", "RF3_HP")
            tableMapping.ColumnMappings.Add("RF4_HP", "RF4_HP")
            tableMapping.ColumnMappings.Add("RF5_HP", "RF5_HP")
            tableMapping.ColumnMappings.Add("RF6_HP", "RF6_HP")
            tableMapping.ColumnMappings.Add("RF7_HP", "RF7_HP")
            tableMapping.ColumnMappings.Add("RF8_HP", "RF8_HP")
            tableMapping.ColumnMappings.Add("RF9_HP", "RF9_HP")
            tableMapping.ColumnMappings.Add("RF10_HP", "RF10_HP")
            tableMapping.ColumnMappings.Add("RF11_HP", "RF11_HP")
            tableMapping.ColumnMappings.Add("RF12_HP", "RF12_HP")
            tableMapping.ColumnMappings.Add("RF13_HP", "RF13_HP")
            tableMapping.ColumnMappings.Add("RF14_HP", "RF14_HP")
            tableMapping.ColumnMappings.Add("RF15_HP", "RF15_HP")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[chyADDLEXTN] ([Acctno], [Foryear], [Bus_Code], [ZONE], [RTC], "& _ 
                "[PNP], [FISCAL], [BUILDING], [MECHANICAL], [ELECTRICAL], [PLUMBING], [SIGNBILL],"& _ 
                " [OTHER], [STICKER], [MEDICAL], [WMEASURES], [FIRECODE], [RF1], [RF2], [RF3], [R"& _ 
                "F4], [RF5], [RF6], [RF7], [RF8], [RF9], [RF10], [RF11], [RF12], [RF13], [RF14], "& _ 
                "[RF15], [ZONE_HP], [RTC_HP], [PNP_HP], [FISCAL_HP], [BUILDING_HP], [MECHANICAL_H"& _ 
                "P], [ELECTRICAL_HP], [PLUMBING_HP], [SIGNBILL_HP], [OTHER_HP], [STICKER_HP], [ME"& _ 
                "DICAL_HP], [WMEASURES_HP], [FIRECODE_HP], [RF1_HP], [RF2_HP], [RF3_HP], [RF4_HP]"& _ 
                ", [RF5_HP], [RF6_HP], [RF7_HP], [RF8_HP], [RF9_HP], [RF10_HP], [RF11_HP], [RF12_"& _ 
                "HP], [RF13_HP], [RF14_HP], [RF15_HP]) VALUES (@Acctno, @Foryear, @Bus_Code, @ZON"& _ 
                "E, @RTC, @PNP, @FISCAL, @BUILDING, @MECHANICAL, @ELECTRICAL, @PLUMBING, @SIGNBIL"& _ 
                "L, @OTHER, @STICKER, @MEDICAL, @WMEASURES, @FIRECODE, @RF1, @RF2, @RF3, @RF4, @R"& _ 
                "F5, @RF6, @RF7, @RF8, @RF9, @RF10, @RF11, @RF12, @RF13, @RF14, @RF15, @ZONE_HP, "& _ 
                "@RTC_HP, @PNP_HP, @FISCAL_HP, @BUILDING_HP, @MECHANICAL_HP, @ELECTRICAL_HP, @PLU"& _ 
                "MBING_HP, @SIGNBILL_HP, @OTHER_HP, @STICKER_HP, @MEDICAL_HP, @WMEASURES_HP, @FIR"& _ 
                "ECODE_HP, @RF1_HP, @RF2_HP, @RF3_HP, @RF4_HP, @RF5_HP, @RF6_HP, @RF7_HP, @RF8_HP"& _ 
                ", @RF9_HP, @RF10_HP, @RF11_HP, @RF12_HP, @RF13_HP, @RF14_HP, @RF15_HP)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Acctno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Acctno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Foryear", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Foryear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bus_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bus_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZONE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RTC", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RTC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PNP", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FISCAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FISCAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUILDING", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUILDING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MECHANICAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MECHANICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ELECTRICAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ELECTRICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLUMBING", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLUMBING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIGNBILL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIGNBILL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STICKER", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STICKER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEDICAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEDICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WMEASURES", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WMEASURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIRECODE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIRECODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF3", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF4", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF5", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF6", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF7", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF8", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF9", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF10", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF11", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF12", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF13", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF14", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF14", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF15", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZONE_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZONE_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RTC_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RTC_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PNP_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNP_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FISCAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FISCAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUILDING_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUILDING_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MECHANICAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MECHANICAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ELECTRICAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ELECTRICAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLUMBING_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLUMBING_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIGNBILL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIGNBILL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STICKER_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STICKER_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEDICAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEDICAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WMEASURES_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WMEASURES_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIRECODE_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIRECODE_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF1_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF1_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF2_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF2_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF3_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF3_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF4_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF4_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF5_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF5_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF6_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF6_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF7_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF7_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF8_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF8_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF9_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF9_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF10_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF10_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF11_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF11_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF12_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF12_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF13_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF13_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF14_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF14_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF15_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF15_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Acctno, Foryear, Bus_Code, ZONE, RTC, PNP, FISCAL, BUILDING, MECHANICAL, E"& _ 
                "LECTRICAL, PLUMBING, SIGNBILL, OTHER, STICKER, MEDICAL, WMEASURES, FIRECODE, RF1"& _ 
                ", RF2, RF3, RF4, RF5, RF6, RF7, RF8, RF9, RF10, RF11, RF12, RF13, RF14, RF15, ZO"& _ 
                "NE_HP, RTC_HP, PNP_HP, FISCAL_HP, BUILDING_HP, MECHANICAL_HP, ELECTRICAL_HP, PLU"& _ 
                "MBING_HP, SIGNBILL_HP, OTHER_HP, STICKER_HP, MEDICAL_HP, WMEASURES_HP, FIRECODE_"& _ 
                "HP, RF1_HP, RF2_HP, RF3_HP, RF4_HP, RF5_HP, RF6_HP, RF7_HP, RF8_HP, RF9_HP, RF10"& _ 
                "_HP, RF11_HP, RF12_HP, RF13_HP, RF14_HP, RF15_HP FROM dbo.chyADDLEXTN"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.chyADDLEXTNDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.chyADDLEXTNDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.chyADDLEXTNDataTable = New BPTOP2023_1.chyADDLEXTNDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.chyADDLEXTNDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "chyADDLEXTN")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal ZONE As Global.System.Nullable(Of Decimal),  _
                    ByVal RTC As Global.System.Nullable(Of Decimal),  _
                    ByVal PNP As Global.System.Nullable(Of Decimal),  _
                    ByVal FISCAL As Global.System.Nullable(Of Decimal),  _
                    ByVal BUILDING As Global.System.Nullable(Of Decimal),  _
                    ByVal MECHANICAL As Global.System.Nullable(Of Decimal),  _
                    ByVal ELECTRICAL As Global.System.Nullable(Of Decimal),  _
                    ByVal PLUMBING As Global.System.Nullable(Of Decimal),  _
                    ByVal SIGNBILL As Global.System.Nullable(Of Decimal),  _
                    ByVal OTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal STICKER As Global.System.Nullable(Of Decimal),  _
                    ByVal MEDICAL As Global.System.Nullable(Of Decimal),  _
                    ByVal WMEASURES As Global.System.Nullable(Of Decimal),  _
                    ByVal FIRECODE As Global.System.Nullable(Of Decimal),  _
                    ByVal RF1 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF2 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF3 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF4 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF5 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF6 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF7 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF8 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF9 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF10 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF11 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF12 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF13 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF14 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF15 As Global.System.Nullable(Of Decimal),  _
                    ByVal ZONE_HP As String,  _
                    ByVal RTC_HP As String,  _
                    ByVal PNP_HP As String,  _
                    ByVal FISCAL_HP As String,  _
                    ByVal BUILDING_HP As String,  _
                    ByVal MECHANICAL_HP As String,  _
                    ByVal ELECTRICAL_HP As String,  _
                    ByVal PLUMBING_HP As String,  _
                    ByVal SIGNBILL_HP As String,  _
                    ByVal OTHER_HP As String,  _
                    ByVal STICKER_HP As String,  _
                    ByVal MEDICAL_HP As String,  _
                    ByVal WMEASURES_HP As String,  _
                    ByVal FIRECODE_HP As String,  _
                    ByVal RF1_HP As String,  _
                    ByVal RF2_HP As String,  _
                    ByVal RF3_HP As String,  _
                    ByVal RF4_HP As String,  _
                    ByVal RF5_HP As String,  _
                    ByVal RF6_HP As String,  _
                    ByVal RF7_HP As String,  _
                    ByVal RF8_HP As String,  _
                    ByVal RF9_HP As String,  _
                    ByVal RF10_HP As String,  _
                    ByVal RF11_HP As String,  _
                    ByVal RF12_HP As String,  _
                    ByVal RF13_HP As String,  _
                    ByVal RF14_HP As String,  _
                    ByVal RF15_HP As String) As Integer
            If (Acctno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Acctno,String)
            End If
            If (Foryear Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Foryear,String)
            End If
            If (Bus_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Bus_Code,String)
            End If
            If (ZONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ZONE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (RTC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(RTC.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PNP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PNP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FISCAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FISCAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BUILDING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BUILDING.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MECHANICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(MECHANICAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (ELECTRICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ELECTRICAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PLUMBING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PLUMBING.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (SIGNBILL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SIGNBILL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (OTHER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(OTHER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (STICKER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(STICKER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (MEDICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(MEDICAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (WMEASURES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(WMEASURES.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (FIRECODE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FIRECODE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (RF1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RF1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (RF2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RF2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (RF3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(RF3.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (RF4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(RF4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (RF5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(RF5.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (RF6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(RF6.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (RF7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(RF7.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (RF8.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(RF8.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (RF9.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(RF9.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (RF10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(RF10.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (RF11.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(RF11.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RF12.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RF12.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (RF13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(RF13.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (RF14.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(RF14.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (RF15.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(RF15.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (ZONE_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(ZONE_HP,String)
            End If
            If (RTC_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(RTC_HP,String)
            End If
            If (PNP_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(PNP_HP,String)
            End If
            If (FISCAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(FISCAL_HP,String)
            End If
            If (BUILDING_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(BUILDING_HP,String)
            End If
            If (MECHANICAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(MECHANICAL_HP,String)
            End If
            If (ELECTRICAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ELECTRICAL_HP,String)
            End If
            If (PLUMBING_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(PLUMBING_HP,String)
            End If
            If (SIGNBILL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(SIGNBILL_HP,String)
            End If
            If (OTHER_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(OTHER_HP,String)
            End If
            If (STICKER_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(STICKER_HP,String)
            End If
            If (MEDICAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(MEDICAL_HP,String)
            End If
            If (WMEASURES_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(WMEASURES_HP,String)
            End If
            If (FIRECODE_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(FIRECODE_HP,String)
            End If
            If (RF1_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(RF1_HP,String)
            End If
            If (RF2_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(RF2_HP,String)
            End If
            If (RF3_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(RF3_HP,String)
            End If
            If (RF4_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(RF4_HP,String)
            End If
            If (RF5_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(RF5_HP,String)
            End If
            If (RF6_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(RF6_HP,String)
            End If
            If (RF7_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(RF7_HP,String)
            End If
            If (RF8_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(RF8_HP,String)
            End If
            If (RF9_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(RF9_HP,String)
            End If
            If (RF10_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(RF10_HP,String)
            End If
            If (RF11_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(RF11_HP,String)
            End If
            If (RF12_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(RF12_HP,String)
            End If
            If (RF13_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(RF13_HP,String)
            End If
            If (RF14_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(RF14_HP,String)
            End If
            If (RF15_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(RF15_HP,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class dennisenriquezADDLEXTNTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dennisenriquezADDLEXTN"
            tableMapping.ColumnMappings.Add("Acctno", "Acctno")
            tableMapping.ColumnMappings.Add("Foryear", "Foryear")
            tableMapping.ColumnMappings.Add("Bus_Code", "Bus_Code")
            tableMapping.ColumnMappings.Add("ZONE", "ZONE")
            tableMapping.ColumnMappings.Add("RTC", "RTC")
            tableMapping.ColumnMappings.Add("PNP", "PNP")
            tableMapping.ColumnMappings.Add("FISCAL", "FISCAL")
            tableMapping.ColumnMappings.Add("BUILDING", "BUILDING")
            tableMapping.ColumnMappings.Add("MECHANICAL", "MECHANICAL")
            tableMapping.ColumnMappings.Add("ELECTRICAL", "ELECTRICAL")
            tableMapping.ColumnMappings.Add("PLUMBING", "PLUMBING")
            tableMapping.ColumnMappings.Add("SIGNBILL", "SIGNBILL")
            tableMapping.ColumnMappings.Add("OTHER", "OTHER")
            tableMapping.ColumnMappings.Add("STICKER", "STICKER")
            tableMapping.ColumnMappings.Add("MEDICAL", "MEDICAL")
            tableMapping.ColumnMappings.Add("WMEASURES", "WMEASURES")
            tableMapping.ColumnMappings.Add("FIRECODE", "FIRECODE")
            tableMapping.ColumnMappings.Add("RF1", "RF1")
            tableMapping.ColumnMappings.Add("RF2", "RF2")
            tableMapping.ColumnMappings.Add("RF3", "RF3")
            tableMapping.ColumnMappings.Add("RF4", "RF4")
            tableMapping.ColumnMappings.Add("RF5", "RF5")
            tableMapping.ColumnMappings.Add("RF6", "RF6")
            tableMapping.ColumnMappings.Add("RF7", "RF7")
            tableMapping.ColumnMappings.Add("RF8", "RF8")
            tableMapping.ColumnMappings.Add("RF9", "RF9")
            tableMapping.ColumnMappings.Add("RF10", "RF10")
            tableMapping.ColumnMappings.Add("RF11", "RF11")
            tableMapping.ColumnMappings.Add("RF12", "RF12")
            tableMapping.ColumnMappings.Add("RF13", "RF13")
            tableMapping.ColumnMappings.Add("RF14", "RF14")
            tableMapping.ColumnMappings.Add("RF15", "RF15")
            tableMapping.ColumnMappings.Add("ZONE_HP", "ZONE_HP")
            tableMapping.ColumnMappings.Add("RTC_HP", "RTC_HP")
            tableMapping.ColumnMappings.Add("PNP_HP", "PNP_HP")
            tableMapping.ColumnMappings.Add("FISCAL_HP", "FISCAL_HP")
            tableMapping.ColumnMappings.Add("BUILDING_HP", "BUILDING_HP")
            tableMapping.ColumnMappings.Add("MECHANICAL_HP", "MECHANICAL_HP")
            tableMapping.ColumnMappings.Add("ELECTRICAL_HP", "ELECTRICAL_HP")
            tableMapping.ColumnMappings.Add("PLUMBING_HP", "PLUMBING_HP")
            tableMapping.ColumnMappings.Add("SIGNBILL_HP", "SIGNBILL_HP")
            tableMapping.ColumnMappings.Add("OTHER_HP", "OTHER_HP")
            tableMapping.ColumnMappings.Add("STICKER_HP", "STICKER_HP")
            tableMapping.ColumnMappings.Add("MEDICAL_HP", "MEDICAL_HP")
            tableMapping.ColumnMappings.Add("WMEASURES_HP", "WMEASURES_HP")
            tableMapping.ColumnMappings.Add("FIRECODE_HP", "FIRECODE_HP")
            tableMapping.ColumnMappings.Add("RF1_HP", "RF1_HP")
            tableMapping.ColumnMappings.Add("RF2_HP", "RF2_HP")
            tableMapping.ColumnMappings.Add("RF3_HP", "RF3_HP")
            tableMapping.ColumnMappings.Add("RF4_HP", "RF4_HP")
            tableMapping.ColumnMappings.Add("RF5_HP", "RF5_HP")
            tableMapping.ColumnMappings.Add("RF6_HP", "RF6_HP")
            tableMapping.ColumnMappings.Add("RF7_HP", "RF7_HP")
            tableMapping.ColumnMappings.Add("RF8_HP", "RF8_HP")
            tableMapping.ColumnMappings.Add("RF9_HP", "RF9_HP")
            tableMapping.ColumnMappings.Add("RF10_HP", "RF10_HP")
            tableMapping.ColumnMappings.Add("RF11_HP", "RF11_HP")
            tableMapping.ColumnMappings.Add("RF12_HP", "RF12_HP")
            tableMapping.ColumnMappings.Add("RF13_HP", "RF13_HP")
            tableMapping.ColumnMappings.Add("RF14_HP", "RF14_HP")
            tableMapping.ColumnMappings.Add("RF15_HP", "RF15_HP")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[dennisenriquezADDLEXTN] ([Acctno], [Foryear], [Bus_Code], [ZON"& _ 
                "E], [RTC], [PNP], [FISCAL], [BUILDING], [MECHANICAL], [ELECTRICAL], [PLUMBING], "& _ 
                "[SIGNBILL], [OTHER], [STICKER], [MEDICAL], [WMEASURES], [FIRECODE], [RF1], [RF2]"& _ 
                ", [RF3], [RF4], [RF5], [RF6], [RF7], [RF8], [RF9], [RF10], [RF11], [RF12], [RF13"& _ 
                "], [RF14], [RF15], [ZONE_HP], [RTC_HP], [PNP_HP], [FISCAL_HP], [BUILDING_HP], [M"& _ 
                "ECHANICAL_HP], [ELECTRICAL_HP], [PLUMBING_HP], [SIGNBILL_HP], [OTHER_HP], [STICK"& _ 
                "ER_HP], [MEDICAL_HP], [WMEASURES_HP], [FIRECODE_HP], [RF1_HP], [RF2_HP], [RF3_HP"& _ 
                "], [RF4_HP], [RF5_HP], [RF6_HP], [RF7_HP], [RF8_HP], [RF9_HP], [RF10_HP], [RF11_"& _ 
                "HP], [RF12_HP], [RF13_HP], [RF14_HP], [RF15_HP]) VALUES (@Acctno, @Foryear, @Bus"& _ 
                "_Code, @ZONE, @RTC, @PNP, @FISCAL, @BUILDING, @MECHANICAL, @ELECTRICAL, @PLUMBIN"& _ 
                "G, @SIGNBILL, @OTHER, @STICKER, @MEDICAL, @WMEASURES, @FIRECODE, @RF1, @RF2, @RF"& _ 
                "3, @RF4, @RF5, @RF6, @RF7, @RF8, @RF9, @RF10, @RF11, @RF12, @RF13, @RF14, @RF15,"& _ 
                " @ZONE_HP, @RTC_HP, @PNP_HP, @FISCAL_HP, @BUILDING_HP, @MECHANICAL_HP, @ELECTRIC"& _ 
                "AL_HP, @PLUMBING_HP, @SIGNBILL_HP, @OTHER_HP, @STICKER_HP, @MEDICAL_HP, @WMEASUR"& _ 
                "ES_HP, @FIRECODE_HP, @RF1_HP, @RF2_HP, @RF3_HP, @RF4_HP, @RF5_HP, @RF6_HP, @RF7_"& _ 
                "HP, @RF8_HP, @RF9_HP, @RF10_HP, @RF11_HP, @RF12_HP, @RF13_HP, @RF14_HP, @RF15_HP"& _ 
                ")"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Acctno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Acctno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Foryear", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Foryear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Bus_Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Bus_Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZONE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RTC", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RTC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PNP", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FISCAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FISCAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUILDING", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUILDING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MECHANICAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MECHANICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ELECTRICAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ELECTRICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLUMBING", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLUMBING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIGNBILL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIGNBILL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STICKER", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STICKER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEDICAL", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEDICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WMEASURES", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WMEASURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIRECODE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIRECODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF3", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF4", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF5", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF6", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF7", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF7", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF8", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF9", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF9", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF10", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF11", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF11", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF12", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF13", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF14", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF14", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF15", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF15", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ZONE_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ZONE_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RTC_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RTC_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PNP_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PNP_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FISCAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FISCAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUILDING_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUILDING_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MECHANICAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MECHANICAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ELECTRICAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ELECTRICAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLUMBING_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLUMBING_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIGNBILL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIGNBILL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STICKER_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STICKER_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEDICAL_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEDICAL_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@WMEASURES_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "WMEASURES_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIRECODE_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIRECODE_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF1_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF1_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF2_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF2_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF3_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF3_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF4_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF4_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF5_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF5_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF6_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF6_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF7_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF7_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF8_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF8_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF9_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF9_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF10_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF10_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF11_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF11_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF12_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF12_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF13_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF13_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF14_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF14_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF15_HP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF15_HP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Acctno, Foryear, Bus_Code, ZONE, RTC, PNP, FISCAL, BUILDING, MECHANICAL, E"& _ 
                "LECTRICAL, PLUMBING, SIGNBILL, OTHER, STICKER, MEDICAL, WMEASURES, FIRECODE, RF1"& _ 
                ", RF2, RF3, RF4, RF5, RF6, RF7, RF8, RF9, RF10, RF11, RF12, RF13, RF14, RF15, ZO"& _ 
                "NE_HP, RTC_HP, PNP_HP, FISCAL_HP, BUILDING_HP, MECHANICAL_HP, ELECTRICAL_HP, PLU"& _ 
                "MBING_HP, SIGNBILL_HP, OTHER_HP, STICKER_HP, MEDICAL_HP, WMEASURES_HP, FIRECODE_"& _ 
                "HP, RF1_HP, RF2_HP, RF3_HP, RF4_HP, RF5_HP, RF6_HP, RF7_HP, RF8_HP, RF9_HP, RF10"& _ 
                "_HP, RF11_HP, RF12_HP, RF13_HP, RF14_HP, RF15_HP FROM dbo.dennisenriquezADDLEXTN"& _ 
                ""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.dennisenriquezADDLEXTNDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.dennisenriquezADDLEXTNDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.dennisenriquezADDLEXTNDataTable = New BPTOP2023_1.dennisenriquezADDLEXTNDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.dennisenriquezADDLEXTNDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "dennisenriquezADDLEXTN")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Acctno As String,  _
                    ByVal Foryear As String,  _
                    ByVal Bus_Code As String,  _
                    ByVal ZONE As Global.System.Nullable(Of Decimal),  _
                    ByVal RTC As Global.System.Nullable(Of Decimal),  _
                    ByVal PNP As Global.System.Nullable(Of Decimal),  _
                    ByVal FISCAL As Global.System.Nullable(Of Decimal),  _
                    ByVal BUILDING As Global.System.Nullable(Of Decimal),  _
                    ByVal MECHANICAL As Global.System.Nullable(Of Decimal),  _
                    ByVal ELECTRICAL As Global.System.Nullable(Of Decimal),  _
                    ByVal PLUMBING As Global.System.Nullable(Of Decimal),  _
                    ByVal SIGNBILL As Global.System.Nullable(Of Decimal),  _
                    ByVal OTHER As Global.System.Nullable(Of Decimal),  _
                    ByVal STICKER As Global.System.Nullable(Of Decimal),  _
                    ByVal MEDICAL As Global.System.Nullable(Of Decimal),  _
                    ByVal WMEASURES As Global.System.Nullable(Of Decimal),  _
                    ByVal FIRECODE As Global.System.Nullable(Of Decimal),  _
                    ByVal RF1 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF2 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF3 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF4 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF5 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF6 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF7 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF8 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF9 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF10 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF11 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF12 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF13 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF14 As Global.System.Nullable(Of Decimal),  _
                    ByVal RF15 As Global.System.Nullable(Of Decimal),  _
                    ByVal ZONE_HP As String,  _
                    ByVal RTC_HP As String,  _
                    ByVal PNP_HP As String,  _
                    ByVal FISCAL_HP As String,  _
                    ByVal BUILDING_HP As String,  _
                    ByVal MECHANICAL_HP As String,  _
                    ByVal ELECTRICAL_HP As String,  _
                    ByVal PLUMBING_HP As String,  _
                    ByVal SIGNBILL_HP As String,  _
                    ByVal OTHER_HP As String,  _
                    ByVal STICKER_HP As String,  _
                    ByVal MEDICAL_HP As String,  _
                    ByVal WMEASURES_HP As String,  _
                    ByVal FIRECODE_HP As String,  _
                    ByVal RF1_HP As String,  _
                    ByVal RF2_HP As String,  _
                    ByVal RF3_HP As String,  _
                    ByVal RF4_HP As String,  _
                    ByVal RF5_HP As String,  _
                    ByVal RF6_HP As String,  _
                    ByVal RF7_HP As String,  _
                    ByVal RF8_HP As String,  _
                    ByVal RF9_HP As String,  _
                    ByVal RF10_HP As String,  _
                    ByVal RF11_HP As String,  _
                    ByVal RF12_HP As String,  _
                    ByVal RF13_HP As String,  _
                    ByVal RF14_HP As String,  _
                    ByVal RF15_HP As String) As Integer
            If (Acctno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Acctno,String)
            End If
            If (Foryear Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Foryear,String)
            End If
            If (Bus_Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Bus_Code,String)
            End If
            If (ZONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ZONE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (RTC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(RTC.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (PNP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PNP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FISCAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FISCAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (BUILDING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(BUILDING.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (MECHANICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(MECHANICAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (ELECTRICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ELECTRICAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (PLUMBING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PLUMBING.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (SIGNBILL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SIGNBILL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (OTHER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(OTHER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (STICKER.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(STICKER.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (MEDICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(MEDICAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (WMEASURES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(WMEASURES.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (FIRECODE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FIRECODE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (RF1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(RF1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (RF2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(RF2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (RF3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(RF3.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (RF4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(RF4.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (RF5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(RF5.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (RF6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(RF6.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (RF7.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(RF7.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (RF8.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(RF8.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (RF9.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(RF9.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (RF10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(RF10.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (RF11.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(RF11.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (RF12.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(RF12.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (RF13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(RF13.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (RF14.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(RF14.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (RF15.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(RF15.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (ZONE_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(ZONE_HP,String)
            End If
            If (RTC_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(RTC_HP,String)
            End If
            If (PNP_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(PNP_HP,String)
            End If
            If (FISCAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(FISCAL_HP,String)
            End If
            If (BUILDING_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(BUILDING_HP,String)
            End If
            If (MECHANICAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(MECHANICAL_HP,String)
            End If
            If (ELECTRICAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ELECTRICAL_HP,String)
            End If
            If (PLUMBING_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(PLUMBING_HP,String)
            End If
            If (SIGNBILL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(SIGNBILL_HP,String)
            End If
            If (OTHER_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(OTHER_HP,String)
            End If
            If (STICKER_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(STICKER_HP,String)
            End If
            If (MEDICAL_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(MEDICAL_HP,String)
            End If
            If (WMEASURES_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(WMEASURES_HP,String)
            End If
            If (FIRECODE_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(FIRECODE_HP,String)
            End If
            If (RF1_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(RF1_HP,String)
            End If
            If (RF2_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(RF2_HP,String)
            End If
            If (RF3_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(RF3_HP,String)
            End If
            If (RF4_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(RF4_HP,String)
            End If
            If (RF5_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(RF5_HP,String)
            End If
            If (RF6_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(RF6_HP,String)
            End If
            If (RF7_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(RF7_HP,String)
            End If
            If (RF8_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(RF8_HP,String)
            End If
            If (RF9_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(RF9_HP,String)
            End If
            If (RF10_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(RF10_HP,String)
            End If
            If (RF11_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(RF11_HP,String)
            End If
            If (RF12_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(RF12_HP,String)
            End If
            If (RF13_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(RF13_HP,String)
            End If
            If (RF14_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(RF14_HP,String)
            End If
            If (RF15_HP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(RF15_HP,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DOC_TRACK2019TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DOC_TRACK2019"
            tableMapping.ColumnMappings.Add("Counter", "Counter")
            tableMapping.ColumnMappings.Add("ForYear", "ForYear")
            tableMapping.ColumnMappings.Add("Acctno", "Acctno")
            tableMapping.ColumnMappings.Add("Name", "Name")
            tableMapping.ColumnMappings.Add("Address", "Address")
            tableMapping.ColumnMappings.Add("ProcessTime", "ProcessTime")
            tableMapping.ColumnMappings.Add("xTransaction", "xTransaction")
            tableMapping.ColumnMappings.Add("NextStep", "NextStep")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("Remarks1", "Remarks1")
            tableMapping.ColumnMappings.Add("LoginName", "LoginName")
            tableMapping.ColumnMappings.Add("FullName", "FullName")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[DOC_TRACK2019] ([Counter], [ForYear], [Acctno], [Name], [Addre"& _ 
                "ss], [ProcessTime], [xTransaction], [NextStep], [Remarks], [Remarks1], [LoginNam"& _ 
                "e], [FullName]) VALUES (@Counter, @ForYear, @Acctno, @Name, @Address, @ProcessTi"& _ 
                "me, @xTransaction, @NextStep, @Remarks, @Remarks1, @LoginName, @FullName)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Counter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForYear", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Acctno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Acctno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProcessTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xTransaction", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xTransaction", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NextStep", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NextStep", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LoginName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Counter, ForYear, Acctno, Name, Address, ProcessTime, xTransaction, NextSt"& _ 
                "ep, Remarks, Remarks1, LoginName, FullName FROM dbo.DOC_TRACK2019"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.DOC_TRACK2019DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.DOC_TRACK2019DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.DOC_TRACK2019DataTable = New BPTOP2023_1.DOC_TRACK2019DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.DOC_TRACK2019DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "DOC_TRACK2019")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Counter As Global.System.Nullable(Of Integer), ByVal ForYear As String, ByVal Acctno As String, ByVal Name As String, ByVal Address As String, ByVal ProcessTime As Global.System.Nullable(Of Date), ByVal xTransaction As String, ByVal NextStep As String, ByVal Remarks As String, ByVal Remarks1 As String, ByVal LoginName As String, ByVal FullName As String) As Integer
            If (Counter.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Counter.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (ForYear Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ForYear,String)
            End If
            If (Acctno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Acctno,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Name,String)
            End If
            If (Address Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Address,String)
            End If
            If (ProcessTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ProcessTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (xTransaction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(xTransaction,String)
            End If
            If (NextStep Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(NextStep,String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Remarks,String)
            End If
            If (Remarks1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Remarks1,String)
            End If
            If (LoginName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(LoginName,String)
            End If
            If (FullName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(FullName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DOC_TRACK2022TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DOC_TRACK2022"
            tableMapping.ColumnMappings.Add("Counter", "Counter")
            tableMapping.ColumnMappings.Add("ForYear", "ForYear")
            tableMapping.ColumnMappings.Add("Acctno", "Acctno")
            tableMapping.ColumnMappings.Add("Name", "Name")
            tableMapping.ColumnMappings.Add("Address", "Address")
            tableMapping.ColumnMappings.Add("ProcessTime", "ProcessTime")
            tableMapping.ColumnMappings.Add("xTransaction", "xTransaction")
            tableMapping.ColumnMappings.Add("NextStep", "NextStep")
            tableMapping.ColumnMappings.Add("Remarks", "Remarks")
            tableMapping.ColumnMappings.Add("Remarks1", "Remarks1")
            tableMapping.ColumnMappings.Add("LoginName", "LoginName")
            tableMapping.ColumnMappings.Add("FullName", "FullName")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[DOC_TRACK2022] ([Counter], [ForYear], [Acctno], [Name], [Addre"& _ 
                "ss], [ProcessTime], [xTransaction], [NextStep], [Remarks], [Remarks1], [LoginNam"& _ 
                "e], [FullName]) VALUES (@Counter, @ForYear, @Acctno, @Name, @Address, @ProcessTi"& _ 
                "me, @xTransaction, @NextStep, @Remarks, @Remarks1, @LoginName, @FullName)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Counter", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Counter", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ForYear", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ForYear", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Acctno", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Acctno", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Address", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Address", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ProcessTime", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ProcessTime", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@xTransaction", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "xTransaction", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NextStep", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NextStep", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Remarks1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Remarks1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LoginName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FullName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FullName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Counter, ForYear, Acctno, Name, Address, ProcessTime, xTransaction, NextSt"& _ 
                "ep, Remarks, Remarks1, LoginName, FullName FROM dbo.DOC_TRACK2022"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.DOC_TRACK2022DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.DOC_TRACK2022DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.DOC_TRACK2022DataTable = New BPTOP2023_1.DOC_TRACK2022DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.DOC_TRACK2022DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "DOC_TRACK2022")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Counter As Global.System.Nullable(Of Integer), ByVal ForYear As String, ByVal Acctno As String, ByVal Name As String, ByVal Address As String, ByVal ProcessTime As Global.System.Nullable(Of Date), ByVal xTransaction As String, ByVal NextStep As String, ByVal Remarks As String, ByVal Remarks1 As String, ByVal LoginName As String, ByVal FullName As String) As Integer
            If (Counter.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Counter.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (ForYear Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(ForYear,String)
            End If
            If (Acctno Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Acctno,String)
            End If
            If (Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Name,String)
            End If
            If (Address Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Address,String)
            End If
            If (ProcessTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ProcessTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (xTransaction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(xTransaction,String)
            End If
            If (NextStep Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(NextStep,String)
            End If
            If (Remarks Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Remarks,String)
            End If
            If (Remarks1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Remarks1,String)
            End If
            If (LoginName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(LoginName,String)
            End If
            If (FullName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(FullName,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ItemCodeSetupTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ItemCodeSetup"
            tableMapping.ColumnMappings.Add("RecordNo", "RecordNo")
            tableMapping.ColumnMappings.Add("DateInput", "DateInput")
            tableMapping.ColumnMappings.Add("ItemCode", "ItemCode")
            tableMapping.ColumnMappings.Add("ItemDesc", "ItemDesc")
            tableMapping.ColumnMappings.Add("TotSupply", "TotSupply")
            tableMapping.ColumnMappings.Add("TotSupplyLeft", "TotSupplyLeft")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ItemCodeSetup] ([RecordNo], [DateInput], [ItemCode], [ItemDesc"& _ 
                "], [TotSupply], [TotSupplyLeft]) VALUES (@RecordNo, @DateInput, @ItemCode, @Item"& _ 
                "Desc, @TotSupply, @TotSupplyLeft)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RecordNo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RecordNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateInput", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DateInput", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemCode", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemCode", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ItemDesc", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ItemDesc", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotSupply", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotSupply", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TotSupplyLeft", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TotSupplyLeft", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT RecordNo, DateInput, ItemCode, ItemDesc, TotSupply, TotSupplyLeft FROM dbo"& _ 
                ".ItemCodeSetup"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.ItemCodeSetupDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.ItemCodeSetupDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.ItemCodeSetupDataTable = New BPTOP2023_1.ItemCodeSetupDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.ItemCodeSetupDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "ItemCodeSetup")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal RecordNo As String, ByVal DateInput As String, ByVal ItemCode As String, ByVal ItemDesc As String, ByVal TotSupply As String, ByVal TotSupplyLeft As String) As Integer
            If (RecordNo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(RecordNo,String)
            End If
            If (DateInput Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DateInput,String)
            End If
            If (ItemCode Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ItemCode,String)
            End If
            If (ItemDesc Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ItemDesc,String)
            End If
            If (TotSupply Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(TotSupply,String)
            End If
            If (TotSupplyLeft Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(TotSupplyLeft,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SystemLogTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SystemLog"
            tableMapping.ColumnMappings.Add("IP", "IP")
            tableMapping.ColumnMappings.Add("AppUser", "AppUser")
            tableMapping.ColumnMappings.Add("AppModule", "AppModule")
            tableMapping.ColumnMappings.Add("login_time", "login_time")
            tableMapping.ColumnMappings.Add("LogInApp", "LogInApp")
            tableMapping.ColumnMappings.Add("HostName", "HostName")
            tableMapping.ColumnMappings.Add("AppName", "AppName")
            tableMapping.ColumnMappings.Add("loginame", "loginame")
            tableMapping.ColumnMappings.Add("nt_domain", "nt_domain")
            tableMapping.ColumnMappings.Add("nt_username", "nt_username")
            tableMapping.ColumnMappings.Add("net_address", "net_address")
            tableMapping.ColumnMappings.Add("F_Name", "F_Name")
            tableMapping.ColumnMappings.Add("OBJ_ID", "OBJ_ID")
            tableMapping.ColumnMappings.Add("KeyNum", "KeyNum")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SystemLog] ([IP], [AppUser], [AppModule], [login_time], [LogIn"& _ 
                "App], [HostName], [AppName], [loginame], [nt_domain], [nt_username], [net_addres"& _ 
                "s], [F_Name], [OBJ_ID]) VALUES (@IP, @AppUser, @AppModule, @login_time, @LogInAp"& _ 
                "p, @HostName, @AppName, @loginame, @nt_domain, @nt_username, @net_address, @F_Na"& _ 
                "me, @OBJ_ID)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IP", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AppUser", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AppUser", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AppModule", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AppModule", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@login_time", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "login_time", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LogInApp", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LogInApp", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HostName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HostName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AppName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AppName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@loginame", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "loginame", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@nt_domain", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nt_domain", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@nt_username", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "nt_username", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@net_address", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "net_address", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@F_Name", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "F_Name", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBJ_ID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBJ_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT IP, AppUser, AppModule, login_time, LogInApp, HostName, AppName, loginame,"& _ 
                " nt_domain, nt_username, net_address, F_Name, OBJ_ID, KeyNum FROM dbo.SystemLog"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.SystemLogDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.SystemLogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.SystemLogDataTable = New BPTOP2023_1.SystemLogDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.SystemLogDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "SystemLog")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal IP As String, ByVal AppUser As String, ByVal AppModule As String, ByVal login_time As String, ByVal LogInApp As String, ByVal HostName As String, ByVal AppName As String, ByVal loginame As String, ByVal nt_domain As String, ByVal nt_username As String, ByVal net_address As String, ByVal F_Name As String, ByVal OBJ_ID As Global.System.Nullable(Of Integer)) As Integer
            If (IP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(IP,String)
            End If
            If (AppUser Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(AppUser,String)
            End If
            If (AppModule Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(AppModule,String)
            End If
            If (login_time Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(login_time,String)
            End If
            If (LogInApp Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(LogInApp,String)
            End If
            If (HostName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(HostName,String)
            End If
            If (AppName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(AppName,String)
            End If
            If (loginame Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(loginame,String)
            End If
            If (nt_domain Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(nt_domain,String)
            End If
            If (nt_username Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(nt_username,String)
            End If
            If (net_address Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(net_address,String)
            End If
            If (F_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(F_Name,String)
            End If
            If (OBJ_ID.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(OBJ_ID.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SystemTransTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SystemTrans"
            tableMapping.ColumnMappings.Add("login_time", "login_time")
            tableMapping.ColumnMappings.Add("HostName", "HostName")
            tableMapping.ColumnMappings.Add("TDN", "TDN")
            tableMapping.ColumnMappings.Add("ASSESSNO", "ASSESSNO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SystemTrans] ([login_time], [HostName], [TDN], [ASSESSNO]) VAL"& _ 
                "UES (@login_time, @HostName, @TDN, @ASSESSNO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@login_time", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "login_time", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HostName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HostName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TDN", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TDN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASSESSNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASSESSNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT login_time, HostName, TDN, ASSESSNO FROM dbo.SystemTrans"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.SystemTransDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.SystemTransDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.SystemTransDataTable = New BPTOP2023_1.SystemTransDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.SystemTransDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "SystemTrans")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal login_time As String, ByVal HostName As String, ByVal TDN As String, ByVal ASSESSNO As String) As Integer
            If (login_time Is Nothing) Then
                Throw New Global.System.ArgumentNullException("login_time")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(login_time,String)
            End If
            If (HostName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("HostName")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(HostName,String)
            End If
            If (TDN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TDN,String)
            End If
            If (ASSESSNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ASSESSNO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class UserControlTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "UserControl"
            tableMapping.ColumnMappings.Add("LoginName", "LoginName")
            tableMapping.ColumnMappings.Add("SystemAccess", "SystemAccess")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[UserControl] WHERE (([LoginName] = @Original_LoginName) AND (["& _ 
                "SystemAccess] = @Original_SystemAccess))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LoginName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LoginName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SystemAccess", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SystemAccess", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[UserControl] ([LoginName], [SystemAccess]) VALUES (@LoginName,"& _ 
                " @SystemAccess)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LoginName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SystemAccess", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SystemAccess", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[UserControl] SET [LoginName] = @LoginName, [SystemAccess] = @System"& _ 
                "Access WHERE (([LoginName] = @Original_LoginName) AND ([SystemAccess] = @Origina"& _ 
                "l_SystemAccess))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LoginName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LoginName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SystemAccess", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SystemAccess", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LoginName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LoginName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SystemAccess", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SystemAccess", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT LoginName, SystemAccess FROM dbo.UserControl"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.UserControlDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.UserControlDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.UserControlDataTable = New BPTOP2023_1.UserControlDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.UserControlDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "UserControl")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_LoginName As String, ByVal Original_SystemAccess As String) As Integer
            If (Original_LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LoginName")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_LoginName,String)
            End If
            If (Original_SystemAccess Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SystemAccess")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_SystemAccess,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal LoginName As String, ByVal SystemAccess As String) As Integer
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(LoginName,String)
            End If
            If (SystemAccess Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SystemAccess")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SystemAccess,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal LoginName As String, ByVal SystemAccess As String, ByVal Original_LoginName As String, ByVal Original_SystemAccess As String) As Integer
            If (LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LoginName")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(LoginName,String)
            End If
            If (SystemAccess Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SystemAccess")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SystemAccess,String)
            End If
            If (Original_LoginName Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_LoginName")
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Original_LoginName,String)
            End If
            If (Original_SystemAccess Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_SystemAccess")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_SystemAccess,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_LoginName As String, ByVal Original_SystemAccess As String) As Integer
            Return Me.Update(Original_LoginName, Original_SystemAccess, Original_LoginName, Original_SystemAccess)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Z_ASS_AUD_2020TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Z_ASS_AUD_2020"
            tableMapping.ColumnMappings.Add("ACCTNO", "ACCTNO")
            tableMapping.ColumnMappings.Add("FORYEAR", "FORYEAR")
            tableMapping.ColumnMappings.Add("BUS_CODE", "BUS_CODE")
            tableMapping.ColumnMappings.Add("STATCODE", "STATCODE")
            tableMapping.ColumnMappings.Add("GARBAGE", "GARBAGE")
            tableMapping.ColumnMappings.Add("MAYORS", "MAYORS")
            tableMapping.ColumnMappings.Add("SANITARY", "SANITARY")
            tableMapping.ColumnMappings.Add("FIRE", "FIRE")
            tableMapping.ColumnMappings.Add("GARBAGE_O", "GARBAGE_O")
            tableMapping.ColumnMappings.Add("Sanitary_O", "Sanitary_O")
            tableMapping.ColumnMappings.Add("FIRE_O", "FIRE_O")
            tableMapping.ColumnMappings.Add("RF12", "RF12")
            tableMapping.ColumnMappings.Add("Date_Processed", "Date_Processed")
            tableMapping.ColumnMappings.Add("MODULE", "MODULE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Z_ASS_AUD_2020] ([ACCTNO], [FORYEAR], [BUS_CODE], [STATCODE], "& _ 
                "[GARBAGE], [MAYORS], [SANITARY], [FIRE], [GARBAGE_O], [Sanitary_O], [FIRE_O], [R"& _ 
                "F12], [Date_Processed], [MODULE]) VALUES (@ACCTNO, @FORYEAR, @BUS_CODE, @STATCOD"& _ 
                "E, @GARBAGE, @MAYORS, @SANITARY, @FIRE, @GARBAGE_O, @Sanitary_O, @FIRE_O, @RF12,"& _ 
                " @Date_Processed, @MODULE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ACCTNO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ACCTNO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FORYEAR", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FORYEAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BUS_CODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BUS_CODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STATCODE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STATCODE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GARBAGE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GARBAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAYORS", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAYORS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SANITARY", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SANITARY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIRE", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GARBAGE_O", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GARBAGE_O", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sanitary_O", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sanitary_O", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FIRE_O", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FIRE_O", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RF12", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RF12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Date_Processed", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Date_Processed", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODULE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODULE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = "Data Source=texas\mssql2014;User ID=sa;Password=P@ssw0rd"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ACCTNO, FORYEAR, BUS_CODE, STATCODE, GARBAGE, MAYORS, SANITARY, FIRE, GARB"& _ 
                "AGE_O, Sanitary_O, FIRE_O, RF12, Date_Processed, MODULE FROM dbo.Z_ASS_AUD_2020"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BPTOP2023_1.Z_ASS_AUD_2020DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BPTOP2023_1.Z_ASS_AUD_2020DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BPTOP2023_1.Z_ASS_AUD_2020DataTable = New BPTOP2023_1.Z_ASS_AUD_2020DataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BPTOP2023_1.Z_ASS_AUD_2020DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BPTOP2023_1) As Integer
            Return Me.Adapter.Update(dataSet, "Z_ASS_AUD_2020")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal ACCTNO As String, ByVal FORYEAR As String, ByVal BUS_CODE As String, ByVal STATCODE As String, ByVal GARBAGE As Global.System.Nullable(Of Decimal), ByVal MAYORS As Global.System.Nullable(Of Decimal), ByVal SANITARY As Global.System.Nullable(Of Decimal), ByVal FIRE As Global.System.Nullable(Of Decimal), ByVal GARBAGE_O As Global.System.Nullable(Of Decimal), ByVal Sanitary_O As Global.System.Nullable(Of Decimal), ByVal FIRE_O As Global.System.Nullable(Of Decimal), ByVal RF12 As Global.System.Nullable(Of Decimal), ByVal Date_Processed As Global.System.Nullable(Of Date), ByVal _MODULE As String) As Integer
            If (ACCTNO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(ACCTNO,String)
            End If
            If (FORYEAR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FORYEAR,String)
            End If
            If (BUS_CODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(BUS_CODE,String)
            End If
            If (STATCODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(STATCODE,String)
            End If
            If (GARBAGE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(GARBAGE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (MAYORS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(MAYORS.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SANITARY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(SANITARY.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (FIRE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(FIRE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (GARBAGE_O.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(GARBAGE_O.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Sanitary_O.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Sanitary_O.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (FIRE_O.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(FIRE_O.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (RF12.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(RF12.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Date_Processed.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Date_Processed.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (_MODULE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(_MODULE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _adminADDLEXTNTableAdapter As adminADDLEXTNTableAdapter
        
        Private _bankCodeTableAdapter As BankCodeTableAdapter
        
        Private _chyTableAdapter As chyTableAdapter
        
        Private _chy_1TableAdapter As chy_1TableAdapter
        
        Private _chy_2TableAdapter As chy_2TableAdapter
        
        Private _chyADDLEXTNTableAdapter As chyADDLEXTNTableAdapter
        
        Private _dennisenriquezADDLEXTNTableAdapter As dennisenriquezADDLEXTNTableAdapter
        
        Private _dOC_TRACK2019TableAdapter As DOC_TRACK2019TableAdapter
        
        Private _dOC_TRACK2022TableAdapter As DOC_TRACK2022TableAdapter
        
        Private _itemCodeSetupTableAdapter As ItemCodeSetupTableAdapter
        
        Private _systemLogTableAdapter As SystemLogTableAdapter
        
        Private _systemTransTableAdapter As SystemTransTableAdapter
        
        Private _userControlTableAdapter As UserControlTableAdapter
        
        Private _z_ASS_AUD_2020TableAdapter As Z_ASS_AUD_2020TableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property adminADDLEXTNTableAdapter() As adminADDLEXTNTableAdapter
            Get
                Return Me._adminADDLEXTNTableAdapter
            End Get
            Set
                Me._adminADDLEXTNTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property BankCodeTableAdapter() As BankCodeTableAdapter
            Get
                Return Me._bankCodeTableAdapter
            End Get
            Set
                Me._bankCodeTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property chyTableAdapter() As chyTableAdapter
            Get
                Return Me._chyTableAdapter
            End Get
            Set
                Me._chyTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property chy_1TableAdapter() As chy_1TableAdapter
            Get
                Return Me._chy_1TableAdapter
            End Get
            Set
                Me._chy_1TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property chy_2TableAdapter() As chy_2TableAdapter
            Get
                Return Me._chy_2TableAdapter
            End Get
            Set
                Me._chy_2TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property chyADDLEXTNTableAdapter() As chyADDLEXTNTableAdapter
            Get
                Return Me._chyADDLEXTNTableAdapter
            End Get
            Set
                Me._chyADDLEXTNTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property dennisenriquezADDLEXTNTableAdapter() As dennisenriquezADDLEXTNTableAdapter
            Get
                Return Me._dennisenriquezADDLEXTNTableAdapter
            End Get
            Set
                Me._dennisenriquezADDLEXTNTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property DOC_TRACK2019TableAdapter() As DOC_TRACK2019TableAdapter
            Get
                Return Me._dOC_TRACK2019TableAdapter
            End Get
            Set
                Me._dOC_TRACK2019TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property DOC_TRACK2022TableAdapter() As DOC_TRACK2022TableAdapter
            Get
                Return Me._dOC_TRACK2022TableAdapter
            End Get
            Set
                Me._dOC_TRACK2022TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ItemCodeSetupTableAdapter() As ItemCodeSetupTableAdapter
            Get
                Return Me._itemCodeSetupTableAdapter
            End Get
            Set
                Me._itemCodeSetupTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SystemLogTableAdapter() As SystemLogTableAdapter
            Get
                Return Me._systemLogTableAdapter
            End Get
            Set
                Me._systemLogTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SystemTransTableAdapter() As SystemTransTableAdapter
            Get
                Return Me._systemTransTableAdapter
            End Get
            Set
                Me._systemTransTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property UserControlTableAdapter() As UserControlTableAdapter
            Get
                Return Me._userControlTableAdapter
            End Get
            Set
                Me._userControlTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Z_ASS_AUD_2020TableAdapter() As Z_ASS_AUD_2020TableAdapter
            Get
                Return Me._z_ASS_AUD_2020TableAdapter
            End Get
            Set
                Me._z_ASS_AUD_2020TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._adminADDLEXTNTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._adminADDLEXTNTableAdapter.Connection) Is Nothing)) Then
                    Return Me._adminADDLEXTNTableAdapter.Connection
                End If
                If ((Not (Me._bankCodeTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._bankCodeTableAdapter.Connection) Is Nothing)) Then
                    Return Me._bankCodeTableAdapter.Connection
                End If
                If ((Not (Me._chyTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._chyTableAdapter.Connection) Is Nothing)) Then
                    Return Me._chyTableAdapter.Connection
                End If
                If ((Not (Me._chy_1TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._chy_1TableAdapter.Connection) Is Nothing)) Then
                    Return Me._chy_1TableAdapter.Connection
                End If
                If ((Not (Me._chy_2TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._chy_2TableAdapter.Connection) Is Nothing)) Then
                    Return Me._chy_2TableAdapter.Connection
                End If
                If ((Not (Me._chyADDLEXTNTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._chyADDLEXTNTableAdapter.Connection) Is Nothing)) Then
                    Return Me._chyADDLEXTNTableAdapter.Connection
                End If
                If ((Not (Me._dennisenriquezADDLEXTNTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dennisenriquezADDLEXTNTableAdapter.Connection) Is Nothing)) Then
                    Return Me._dennisenriquezADDLEXTNTableAdapter.Connection
                End If
                If ((Not (Me._dOC_TRACK2019TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dOC_TRACK2019TableAdapter.Connection) Is Nothing)) Then
                    Return Me._dOC_TRACK2019TableAdapter.Connection
                End If
                If ((Not (Me._dOC_TRACK2022TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._dOC_TRACK2022TableAdapter.Connection) Is Nothing)) Then
                    Return Me._dOC_TRACK2022TableAdapter.Connection
                End If
                If ((Not (Me._itemCodeSetupTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._itemCodeSetupTableAdapter.Connection) Is Nothing)) Then
                    Return Me._itemCodeSetupTableAdapter.Connection
                End If
                If ((Not (Me._systemLogTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._systemLogTableAdapter.Connection) Is Nothing)) Then
                    Return Me._systemLogTableAdapter.Connection
                End If
                If ((Not (Me._systemTransTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._systemTransTableAdapter.Connection) Is Nothing)) Then
                    Return Me._systemTransTableAdapter.Connection
                End If
                If ((Not (Me._userControlTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._userControlTableAdapter.Connection) Is Nothing)) Then
                    Return Me._userControlTableAdapter.Connection
                End If
                If ((Not (Me._z_ASS_AUD_2020TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._z_ASS_AUD_2020TableAdapter.Connection) Is Nothing)) Then
                    Return Me._z_ASS_AUD_2020TableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._adminADDLEXTNTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._bankCodeTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._chyTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._chy_1TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._chy_2TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._chyADDLEXTNTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._dennisenriquezADDLEXTNTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._dOC_TRACK2019TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._dOC_TRACK2022TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._itemCodeSetupTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._systemLogTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._systemTransTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._userControlTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._z_ASS_AUD_2020TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As BPTOP2023_1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._adminADDLEXTNTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.adminADDLEXTN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._adminADDLEXTNTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._bankCodeTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.BankCode.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._bankCodeTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._chyTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.chy.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._chyTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._chy_1TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.chy_1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._chy_1TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._chy_2TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.chy_2.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._chy_2TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._chyADDLEXTNTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.chyADDLEXTN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._chyADDLEXTNTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._dennisenriquezADDLEXTNTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.dennisenriquezADDLEXTN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dennisenriquezADDLEXTNTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._dOC_TRACK2019TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.DOC_TRACK2019.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dOC_TRACK2019TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._dOC_TRACK2022TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.DOC_TRACK2022.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._dOC_TRACK2022TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._itemCodeSetupTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.ItemCodeSetup.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._itemCodeSetupTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._systemLogTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.SystemLog.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._systemLogTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._systemTransTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.SystemTrans.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._systemTransTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._userControlTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.UserControl.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._userControlTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._z_ASS_AUD_2020TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Z_ASS_AUD_2020.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._z_ASS_AUD_2020TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As BPTOP2023_1, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._adminADDLEXTNTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.adminADDLEXTN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._adminADDLEXTNTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._bankCodeTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.BankCode.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._bankCodeTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._chyTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.chy.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._chyTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._chy_1TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.chy_1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._chy_1TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._chy_2TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.chy_2.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._chy_2TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._chyADDLEXTNTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.chyADDLEXTN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._chyADDLEXTNTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._dennisenriquezADDLEXTNTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.dennisenriquezADDLEXTN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dennisenriquezADDLEXTNTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._dOC_TRACK2019TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.DOC_TRACK2019.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dOC_TRACK2019TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._dOC_TRACK2022TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.DOC_TRACK2022.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._dOC_TRACK2022TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._itemCodeSetupTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.ItemCodeSetup.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._itemCodeSetupTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._systemLogTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.SystemLog.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._systemLogTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._systemTransTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.SystemTrans.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._systemTransTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._userControlTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.UserControl.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._userControlTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._z_ASS_AUD_2020TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Z_ASS_AUD_2020.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._z_ASS_AUD_2020TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As BPTOP2023_1, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._z_ASS_AUD_2020TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Z_ASS_AUD_2020.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._z_ASS_AUD_2020TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._userControlTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.UserControl.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._userControlTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._systemTransTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.SystemTrans.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._systemTransTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._systemLogTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.SystemLog.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._systemLogTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._itemCodeSetupTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.ItemCodeSetup.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._itemCodeSetupTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._dOC_TRACK2022TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.DOC_TRACK2022.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dOC_TRACK2022TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._dOC_TRACK2019TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.DOC_TRACK2019.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dOC_TRACK2019TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._dennisenriquezADDLEXTNTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.dennisenriquezADDLEXTN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._dennisenriquezADDLEXTNTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._chyADDLEXTNTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.chyADDLEXTN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._chyADDLEXTNTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._chy_2TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.chy_2.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._chy_2TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._chy_1TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.chy_1.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._chy_1TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._chyTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.chy.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._chyTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._bankCodeTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.BankCode.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._bankCodeTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._adminADDLEXTNTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.adminADDLEXTN.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._adminADDLEXTNTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As BPTOP2023_1) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._adminADDLEXTNTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._adminADDLEXTNTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._bankCodeTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._bankCodeTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._chyTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._chyTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._chy_1TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._chy_1TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._chy_2TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._chy_2TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._chyADDLEXTNTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._chyADDLEXTNTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._dennisenriquezADDLEXTNTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dennisenriquezADDLEXTNTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._dOC_TRACK2019TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dOC_TRACK2019TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._dOC_TRACK2022TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._dOC_TRACK2022TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._itemCodeSetupTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._itemCodeSetupTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._systemLogTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._systemLogTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._systemTransTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._systemTransTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._userControlTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._userControlTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._z_ASS_AUD_2020TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._z_ASS_AUD_2020TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._adminADDLEXTNTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._adminADDLEXTNTableAdapter, Me._adminADDLEXTNTableAdapter.Connection)
                    Me._adminADDLEXTNTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._adminADDLEXTNTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._adminADDLEXTNTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._adminADDLEXTNTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._adminADDLEXTNTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._bankCodeTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._bankCodeTableAdapter, Me._bankCodeTableAdapter.Connection)
                    Me._bankCodeTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._bankCodeTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._bankCodeTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._bankCodeTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._bankCodeTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._chyTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._chyTableAdapter, Me._chyTableAdapter.Connection)
                    Me._chyTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._chyTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._chyTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._chyTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._chyTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._chy_1TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._chy_1TableAdapter, Me._chy_1TableAdapter.Connection)
                    Me._chy_1TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._chy_1TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._chy_1TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._chy_1TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._chy_1TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._chy_2TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._chy_2TableAdapter, Me._chy_2TableAdapter.Connection)
                    Me._chy_2TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._chy_2TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._chy_2TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._chy_2TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._chy_2TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._chyADDLEXTNTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._chyADDLEXTNTableAdapter, Me._chyADDLEXTNTableAdapter.Connection)
                    Me._chyADDLEXTNTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._chyADDLEXTNTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._chyADDLEXTNTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._chyADDLEXTNTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._chyADDLEXTNTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._dennisenriquezADDLEXTNTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dennisenriquezADDLEXTNTableAdapter, Me._dennisenriquezADDLEXTNTableAdapter.Connection)
                    Me._dennisenriquezADDLEXTNTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._dennisenriquezADDLEXTNTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._dennisenriquezADDLEXTNTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dennisenriquezADDLEXTNTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dennisenriquezADDLEXTNTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._dOC_TRACK2019TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dOC_TRACK2019TableAdapter, Me._dOC_TRACK2019TableAdapter.Connection)
                    Me._dOC_TRACK2019TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._dOC_TRACK2019TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._dOC_TRACK2019TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dOC_TRACK2019TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dOC_TRACK2019TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._dOC_TRACK2022TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._dOC_TRACK2022TableAdapter, Me._dOC_TRACK2022TableAdapter.Connection)
                    Me._dOC_TRACK2022TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._dOC_TRACK2022TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._dOC_TRACK2022TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._dOC_TRACK2022TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._dOC_TRACK2022TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._itemCodeSetupTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._itemCodeSetupTableAdapter, Me._itemCodeSetupTableAdapter.Connection)
                    Me._itemCodeSetupTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._itemCodeSetupTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._itemCodeSetupTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._itemCodeSetupTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._itemCodeSetupTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._systemLogTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._systemLogTableAdapter, Me._systemLogTableAdapter.Connection)
                    Me._systemLogTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._systemLogTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._systemLogTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._systemLogTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._systemLogTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._systemTransTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._systemTransTableAdapter, Me._systemTransTableAdapter.Connection)
                    Me._systemTransTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._systemTransTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._systemTransTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._systemTransTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._systemTransTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._userControlTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._userControlTableAdapter, Me._userControlTableAdapter.Connection)
                    Me._userControlTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._userControlTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._userControlTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._userControlTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._userControlTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._z_ASS_AUD_2020TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._z_ASS_AUD_2020TableAdapter, Me._z_ASS_AUD_2020TableAdapter.Connection)
                    Me._z_ASS_AUD_2020TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._z_ASS_AUD_2020TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._z_ASS_AUD_2020TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._z_ASS_AUD_2020TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._z_ASS_AUD_2020TableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._adminADDLEXTNTableAdapter) Is Nothing) Then
                    Me._adminADDLEXTNTableAdapter.Connection = CType(revertConnections(Me._adminADDLEXTNTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._adminADDLEXTNTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._bankCodeTableAdapter) Is Nothing) Then
                    Me._bankCodeTableAdapter.Connection = CType(revertConnections(Me._bankCodeTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._bankCodeTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._chyTableAdapter) Is Nothing) Then
                    Me._chyTableAdapter.Connection = CType(revertConnections(Me._chyTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._chyTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._chy_1TableAdapter) Is Nothing) Then
                    Me._chy_1TableAdapter.Connection = CType(revertConnections(Me._chy_1TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._chy_1TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._chy_2TableAdapter) Is Nothing) Then
                    Me._chy_2TableAdapter.Connection = CType(revertConnections(Me._chy_2TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._chy_2TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._chyADDLEXTNTableAdapter) Is Nothing) Then
                    Me._chyADDLEXTNTableAdapter.Connection = CType(revertConnections(Me._chyADDLEXTNTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._chyADDLEXTNTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._dennisenriquezADDLEXTNTableAdapter) Is Nothing) Then
                    Me._dennisenriquezADDLEXTNTableAdapter.Connection = CType(revertConnections(Me._dennisenriquezADDLEXTNTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._dennisenriquezADDLEXTNTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._dOC_TRACK2019TableAdapter) Is Nothing) Then
                    Me._dOC_TRACK2019TableAdapter.Connection = CType(revertConnections(Me._dOC_TRACK2019TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._dOC_TRACK2019TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._dOC_TRACK2022TableAdapter) Is Nothing) Then
                    Me._dOC_TRACK2022TableAdapter.Connection = CType(revertConnections(Me._dOC_TRACK2022TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._dOC_TRACK2022TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._itemCodeSetupTableAdapter) Is Nothing) Then
                    Me._itemCodeSetupTableAdapter.Connection = CType(revertConnections(Me._itemCodeSetupTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._itemCodeSetupTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._systemLogTableAdapter) Is Nothing) Then
                    Me._systemLogTableAdapter.Connection = CType(revertConnections(Me._systemLogTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._systemLogTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._systemTransTableAdapter) Is Nothing) Then
                    Me._systemTransTableAdapter.Connection = CType(revertConnections(Me._systemTransTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._systemTransTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._userControlTableAdapter) Is Nothing) Then
                    Me._userControlTableAdapter.Connection = CType(revertConnections(Me._userControlTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._userControlTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._z_ASS_AUD_2020TableAdapter) Is Nothing) Then
                    Me._z_ASS_AUD_2020TableAdapter.Connection = CType(revertConnections(Me._z_ASS_AUD_2020TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._z_ASS_AUD_2020TableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
